
var gameController;
var gameWS=new WebSocket(serverString);

 /*------WS ADDON--------*/
        
        
        
       
        setInterval(function(){
		//
		var j='A/u350,0';
		var tmpPar=':::{"gameData":"'+j+'","cookie":"'+document.cookie+'","sessionId":"'+sessionStorage.getItem('sessionId')+'","gameName":"AdmiralNelsonAM"}';j=tmpPar;
		gameWS.send(j);	
		},5000);
		
		
		gameWS.onmessage=function(k){
	
		    var tmpMess=k.data.split("#");

			if(tmpMess[0]=='UPDATE' && gameController.win<=0 && gameController.kdj.zgu!=undefined){
			
			if(gameController.ehm!=parseInt(tmpMess[1])){
				
			gameController.ehm=parseInt(tmpMess[1]);	
			gameController.nko=parseInt(tmpMess[1]);	
			gameController.kdj.zgu.nwi("creditd", "#nck", [gameController.jdq(tmpMess[1]), true]);	
			
			}
			
			
			
			
			
			}	
			
		}
		
		/*--------------*/

/////////////////


function nyc() {
    this.gzz = "Info";
    this.jsr = "DEPOSIT";
    this.audio = "AUDIO";
    this.ntt = "TIP";
    this.bvn = "TURBO";
    this.xho = "STATISTIC";
    this.uap = "HISTORY";
    this.xio = "SHORTCUTS";
    this.ehc = "HELP";
    this.wvo = "PAYTABLE";
    this.language = "LANGUAGE";
    this.gld = ">>";
    this.rrj = "<<";
    this.dro = "Fullscreen is not supported!"
}

function xjr() {
    this.fne = "MINIMUM BET IS";
    this.xdj = "MAX BET";
    this.jux = "MIN.BET";
    this.yxu = "MAX.BET";
    this.hbp = "BET";
    this.start = "START";
    this.ehc = "HELP";
    this.wvo = "PAYTABLE";
    this.bej = "MENU";
    this.ybv = "MORE|GAMES";
    this.lwi = "STOP";
    this.nko = "CREDIT";
    this.mzj = "GAME OVER";
    this.fxo = "WINNER!";
    this.pxz = "GOOD LUCK!";
    this.win = "WIN";
    this.vwa = "LAST WIN";
    this.urn = "COLLECT";
    this.gap = "COLLECT";
    this.odb = "GAMBLE";
    this.hwo = "AUTO|START";
    this.wjz = "HALF|GAMBLE";
    this.dwn = "EXIT";
    this.kft = "START GAME";
    this.hwd = "CHOOSE BET";
    this.lbj = "HALF";
    this.ret = "RETURN|TO GAME";
    this.unr = "Total Win";
    this.sld = "Warning";
    this.gia = "TOTAL";
    this.ioj = "PLEASE WAIT ...";
    this.mtm = "More Games";
    this.bvn = "SPEED";
    this.ovv = "Malfunction voids all pays and plays.";
    this.tnq = "C O N T I N U E";
    this.hlz = "AUTOSTART";
    this.zms = "PAYTABLE";
    this.jns = "GAMBLE";
    this.left = "LEFT";
    this.bnt = "RIGHT";
    this.ok = "OK";
    this.hqx = "CANCEL";
    this.ren = "Gamble";
    this.lsp = "Half";
    this.bjq = "GAME RULES";
    this.qtu = "GAME RULES";
    this.xav = "Bonus!";
    this.qrl = "BONUS";
    this.phn = "PRESS ANY KEY TO CONTINUE";
    this.vnx = "NOT ENOUGH CREDIT!";
    this.vrn = "wins";
    this.tfn = "V A L U E";
    this.of = "OF";
    this.sim = "TOUCH THE SCREEN TO CONTINUE";
    this.sdc = "LOADING ...";
    this.lna = "LOADING HISTORY ...";
    this.wan = "Communication Error";
    this.rlp = "You have reached one of the limits!";
    this.ftg = "You have reached the maximum amount of free games!";
    this.fgf = "Game will be closed";
    this.tao = "Game will be restarted";
    this.qhj = "WON";
    this.error = "ERROR";
    this.yns = "FREEPLAY";
    this.uhy = "AUTO";
    this.qvv = "GAME ID";
    this.mkg = "Playing Time";
    this.sai = "last";
    this.prp = "games";
    this.jsr = "DEPOSIT";
    this.audio = "AUDIO";
    this.oom = "MUSIC";
    this.jcg = "FULLSCREEN";
    this.kow = "FULLSCREEN";
    this.language = "LANGUAGE";
    this.jbk = "Do not show again";
    this.eps = "Sounds can not be loaded!";
    this.rch = "Resources missing!";
    this.hdz = "Play without sound?";
    this.zzw = "SETTINGS";
    this.nrk = "Please turn your device!";
    this.gzz = "INFO";
    this.qqk = "Please disable PRIVATE MODE in your browser to play the game.";
    this.mrp = "This game is optimized for Google Chrome.";
    this.lun = "Please use the current version of";
    this.rgs = "Unfortunately this browser is not fully supported.";
    this.gqm = "This game can not be started in freeplay mode!";
    this.ooh = "Turn your device to the portrait mode to play like on a real slot machine!";
    this.pme = "Adjust the game interface to your needs!";
    this.uhd = "SELECT THE CORRECT COLOR TO DOUBLE THE WIN";
    this.oqf = "SELECT THE CORRECT SUIT TO QUADRUPLE THE WIN";
    this.vdh = "GAMBLE FOR A CHANCE TO INCREASE THE WIN";
    this.xho = "Statistic";
    this.mje = "Total Games";
    this.jmq = "Total Bets";
    this.odz = "Total Wins";
    this.zqx = "Total Play Time";
    this.sae = "I have read this message";
    this.dql = "EXIT|GAME";
    this.uap = "History";
    this.jmy = "No games played.";
    this.state = "STATE";
    this.obw = "Main Game";
    this.fsm = "Auto Collected";
    this.ecm = "Collected";
    this.dvz = "Bonusspins";
    this.kdq = "Respin";
    this.lkl = "Bonus";
    this.tda = "First Deal";
    this.ldm = "Second Deal";
    this.jca = "Third Deal";
    this.lpr = "AUTOSTART SETTINGS";
    this.mza = "Amount of games:";
    this.jjs = "Stop autostart";
    this.cuj = "Credit lower than:";
    this.acg = "Credit higher than:";
    this.tdh = "Win higher than:";
    this.rpc = "The autostart will be stopped at the beginning of the bonus.";
    this.mdd = "Share on Facebook";
    this.zps = "FOR MORE INFORMATION, SEE THE GAME RULES.";
    this.bzs = "Reality Check";
    this.zxo = "You have requested a Reality Check.";
    this.bvh = "Press HISTORY to view your game history.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.guo = "THE THEORETICAL RETURN TO THE PLAYER FOR THIS GAME IS XY."
}
xjr.prototype = new nyc;

function but() {
    this.fne = "МИНИМАЛЬНАЯ СТАВКА -";
    this.xdj = "МАКС.|СТАВКА";
    this.jux = "МИН.СТAВКА";
    this.yxu = "МАКС.СТAВКА";
    this.hbp = "СТАВКА";
    this.start = "СТАРТ";
    this.ehc = "ПОМОЩЬ";
    this.wvo = "ТАБЛИЦА ВЫПЛАТ";
    this.bej = "МЕНЮ";
    this.ybv = "ДРУГИЕ|ИГРЫ";
    this.lwi = "СТОП";
    this.nko = "КРЕДИТ";
    this.mzj = "КОНЕЦ ИГРЫ";
    this.fxo = "ПОБЕДИТЕЛЬ!";
    this.pxz = "ЖЕЛАЕМ УДАЧИ!";
    this.win = "ВЫИГРЫШ";
    this.vwa = "ПОСЛЕД. ВЫИГРЫШ";
    this.vrn = "выйгрыши";
    this.urn = "ЗАБРАТЬ|ВЫИГРЫШ";
    this.gap = "ЗАБРАТЬ ВЫИГРЫШ";
    this.odb = "ИГРА|НА|РИСК";
    this.hwo = "АВТО|ИГРА";
    this.wjz = "УМЕНЬШИТЬ|РИСК";
    this.of = "ВЫКЛ.";
    this.dwn = "ВЫХОД";
    this.kft = "НАЖМИТЕ СТАРТ";
    this.hwd = "ВЫБЕРИТЕ СТАВКУ";
    this.lbj = "ВЗЯТЬ|1/2";
    this.phn = "НАЖМИ ЛЮБУЮ КЛАВИШУ, ЧТОБЫ ПРОДОЛЖИТЬ";
    this.sim = "ПРИКОСНИТЕСЬ К ЭКРАНУ ДЛЯ ПРОДОЛЖЕНИЯ";
    this.ret = "ОБРАТНО|В ГЛАВНУЮ|ИГРУ";
    this.wcb = "Множитель для Бонуса";
    this.zcs = "БОНУС СТАРТ ВЫИГРЫШ:";
    this.unr = "ОБЩИЙ ВЫИГРЫШ";
    this.sdc = "Загрузка ...";
    this.lna = "Загрузка Истории ...";
    this.error = "ОШИБКА";
    this.vnx = "НЕ ДОСТАТОЧНО КРЕДИТА.";
    this.rlp = "Достигнут один из лимитов!";
    this.sld = "Внимание";
    this.wan = "ошибка обмена данных";
    this.ftg = "Вы получили максимальное количество свободных игр!";
    this.fgf = "Игра заканчивается";
    this.tao = "Игра начинается заново";
    this.xav = "Бонус!";
    this.qrl = "БОНУС";
    this.qhj = "ВЫИГРЫШ";
    this.gia = "ВСЕГО";
    this.ioj = "Пожалуйста подождите ...";
    this.error = "ОШИБКА";
    this.yns = "FREEPLAY";
    this.mtm = "ВЫБОР ИГРЫ";
    this.qvv = "GAME ID";
    this.mkg = "Playing Time";
    this.sai = "последняя";
    this.prp = "игры";
    this.jsr = "ДЕПОЗИТ";
    this.audio = "Звук";
    this.oom = "МУЗЫКА";
    this.bvn = "СКОРОСТЬ";
    this.jcg = "ПОЛНОЭКРАННЫЙ";
    this.kow = "ПОЛНОЭКРАННЫЙ";
    this.language = "ЯЗЫК";
    this.ovv = "ПРИ НЕИСПРАВНОСТИ ВСЕ ИГРЫ И ВЫИГРЫШИ АННУЛИРУЮТСЯ.";
    this.tnq = "П Р О Д О Л Ж И Т Ь";
    this.jbk = "Больше не показывать";
    this.hlz = "АВТОИГРА";
    this.zms = "ТАБЛИЦА ВЫПЛАТ";
    this.jns = "ИГРА НА РИСК";
    this.eps = "Звук не загружается!";
    this.rch = "Ресурсы отсутствуют!";
    this.hdz = "Играть без звука?";
    this.zzw = "НАСТРОЙКА";
    this.nrk = "Поверните, пожалуйста, ваше устройство!";
    this.left = "ЛЕВО";
    this.bnt = "ПРАВО";
    this.uhy = "АВТО";
    this.tfn = "V A L U E";
    this.gzz = "ИНФОРМАЦИЯ";
    this.qqk = "Выключите, пожалуйста, ЧАСТНЫЙ РЕЖИМ в браузере,чтобы начать игру.";
    this.mrp = "Настоящая игра оптимизирована для Google Chrome.";
    this.lun = "Используйте, пожалуйста, актуальную версию";
    this.rgs = "К сожалению нет полной поддержки браузера.";
    this.gqm = "Запуск этой игры в режиме свободных игр невозможен!";
    this.ooh = "Поверните прибор в положение портретного режима для игры как на настоящем игральном автомате!";
    this.pme = "Приспособь интерфейс к своим потребностям!";
    this.zps = "ДОПОЛНИТЕЛЬНУЮ ИНФОРМАЦИЮ ВЫ МОЖЕТЕ ПОЛУЧИТЬ В ПРАВИЛАХ ИГРЫ.";
    this.bzs = "Проверку реальности";
    this.zxo = "Вы запросили проверку реальности.";
    this.bvh = "Нажмите ИСТОРИЯ, чтобы посмотреть свою историю игры.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.bjq = "ПРАВИЛА ИГРЫ";
    this.qtu = "ПРАВИЛА ИГРЫ";
    this.uhd = "ВЫБЕРИТЕ ПРАВИЛЬНУЮ МАСТЬ, ЧТОБЫ УДВОИТЬ ВЫИГРЫШ";
    this.oqf = "ВЫБЕРИТЕ ПРАВИЛЬНУЮ МАСТЬ, ЧТОБЫ УВЕЛИЧИТЬ ВЫИГРЫШ В 4 РАЗА.";
    this.vdh = "СТАВЬТЕ НА РИСК, ЧТОБЫ УВЕЛИЧИТЬ ВЫИГРЫШ.";
    this.xho = "Статус";
    this.mje = "количество игр";
    this.jmq = "вся ставка";
    this.odz = "общий выигрыш";
    this.zqx = "общее время игры";
    this.sae = "Я сообщение прочитал.";
    this.dql = "ИГРУ|ЗАКОНЧИТЬ";
    this.ok = "OK";
    this.uap = "История";
    this.jmy = "нет истории.";
    this.state = "STATE";
    this.obw = "Main Game";
    this.fsm = "Auto Collected";
    this.ecm = "Collected";
    this.dvz = "Bonusspins";
    this.ren = "Gamble";
    this.lsp = "Half";
    this.kdq = "Respin";
    this.lkl = "Bonus";
    this.tda = "First Deal";
    this.ldm = "Second Deal";
    this.jca = "Third Deal";
    this.hqx = "ИЗМЕНИТЬ";
    this.lpr = "НАСТРОЙКА АВТОСТАРТА";
    this.mza = "Количество игр:";
    this.jjs = "Автостарт остановить";
    this.cuj = "Кредит ниже, чем:";
    this.acg = "Кредит выше, чем:";
    this.tdh = "Выигрыш выше, чем:";
    this.rpc = "Автостарт прерывается, если начинается бонусная игра.";
    this.mdd = "Поделись в фейсбук";
    this.guo = "ТЕОРЕТИЧЕСКАЯ ВЫПЛАТА ИГРОКУ СОСТАВЛЯЕТ В ЭТОЙ ИГРЕ XY."
}
but.prototype = new nyc;

function xkj() {
    this.fne = "APUESTA MINIMA ES";
    this.xdj = "APUESTA|MAXIMA";
    this.jux = "APUESTA MIN.";
    this.yxu = "APUESTA MAX.";
    this.hbp = "APUESTA";
    this.start = "START";
    this.ehc = "AYUDA";
    this.wvo = "PLAN DE|GANANCIAS";
    this.bej = "MENU";
    this.ybv = "MAS|JUEGOS";
    this.lwi = "PARADA";
    this.nko = "CREDITOS";
    this.mzj = "FIN DEL JUEGO";
    this.fxo = "¡GANADOR!";
    this.pxz = "¡MUCHA SUERTE!";
    this.win = "PREMIO";
    this.vwa = "ULTIMOS PREMIO";
    this.vrn = "gana";
    this.urn = "COBRAR";
    this.gap = "COBRAR";
    this.odb = "RIESGO";
    this.hwo = "AUTO|START";
    this.wjz = "MEDIA|APUESTA";
    this.of = "DE";
    this.dwn = "SALIR";
    this.kft = "¡PULSE START!";
    this.hwd = "ELIJA SU APUESTA";
    this.lbj = "MITAD";
    this.phn = "PULSE UNA TECLA PARA CONTINUAR";
    this.sim = "TOCAR LA PANTALLA PARA CONTINUAR";
    this.ret = "VOLVER|AL JUEGO";
    this.unr = "Premio total";
    this.sdc = "CARGANDO ...";
    this.lna = "CARGANDO HISTORIAL ...";
    this.vnx = "No hay bastante CREDITO";
    this.rlp = "¡Ha alcanzado uno de los limites!";
    this.sld = "Advertencia";
    this.wan = "Error de comunicación";
    this.ftg = "¡Ha alcanzado la máxima cantidad de juegos gratis!";
    this.fgf = "El juego se cerrará";
    this.tao = "El juego se reiniciará";
    this.xav = "¡BONUS!";
    this.qrl = "BONUS";
    this.qhj = "GANADO";
    this.gia = "TOTAL";
    this.sfj = "TURBO SI";
    this.koq = "TURBO NO";
    this.ioj = "POR FAVOR ESPERE ...";
    this.error = "ERROR";
    this.yns = "FREEPLAY";
    this.mtm = "MAS JUEGOS";
    this.qvv = "ID DE JUEGO";
    this.mkg = "Playing Time";
    this.sai = "ultimos";
    this.prp = "juegos";
    this.jsr = "DEPÓSITO";
    this.audio = "AUDIO";
    this.oom = "MÚSICA";
    this.bvn = "VELOCIDAD";
    this.jcg = "PANTALLA COMPLETA";
    this.kow = "PANTALLA|COMPLETA";
    this.language = "IDIOMA";
    this.ovv = "UN MAL FUNCIONAMIENTO ANULA TODA JUGADA Y TODO PAGO.";
    this.tnq = "A D E L A N T E";
    this.jbk = "No mostrar de nuevo";
    this.hlz = "AUTOSTART";
    this.zms = "PLAN DE GANANCIAS";
    this.jns = "RIESGO";
    this.eps = "No se pueden cargar los sonidos.";
    this.rch = "Faltan recursos.";
    this.hdz = "¿Jugar sin sonido?";
    this.zzw = "AJUSTES";
    this.tfn = "V A L U E";
    this.nrk = "¡Encienda su dispositivo!";
    this.left = "IZQUIERDA";
    this.bnt = "DERECHA";
    this.uhy = "AUTOMÁTICO";
    this.gzz = "INFORMACIÓN";
    this.qqk = "Desactive el MODO PRIVADO en su explorador para jugar el juego.";
    this.mrp = "Este juego está optimizado para Google Chrome.";
    this.lun = "Use la versión actual de";
    this.rgs = "Desafortunadamente, este explorador no es compatible.";
    this.gqm = "¡Este juego no puede iniciarse en modo de juego libre!";
    this.ooh = "¡Gire el dispositivo a posición vertical como en la máquina tragamonedas real!";
    this.pme = "¡Ajuste la interfaz del juego a sus necesidades!";
    this.zps = "PARA MÁS INFORMACIÓN MIRE LAS REGLAS DEL JUEGO.";
    this.bzs = "Reality Check";
    this.zxo = "Has solicitado un Reality Check.";
    this.bvh = "Pulsa HISTORIAL para visualizar tu historial de juego.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.bjq = "REGLAS DEL JUEGO";
    this.qtu = "REGLAS|DEL JUEGO";
    this.uhd = "SELECCIONAR EL COLOR CORRECTO PARA DOBLAR EL PREMIO";
    this.oqf = "SELECCIONAR EL PALO CORRECTO PARA CUADRUPLICAR EL PREMIO";
    this.vdh = "JUGAR UNA POSIBILIDAD DE MULTIPLICAR LA GANANCIA";
    this.xho = "ESTADO";
    this.mje = "Número de juegos";
    this.jmq = "Apuesta total";
    this.odz = "Ganancia total";
    this.zqx = "Tiempo total de juego";
    this.sae = "He leído el mensaje.";
    this.dql = "TERMINAR|JUEGO";
    this.ok = "OK";
    this.uap = "HISTORIAL";
    this.jmy = "Aún no hay juegos.";
    this.state = "Estado";
    this.obw = "Juego principal";
    this.fsm = "Ganancia automática";
    this.ecm = "Ganancia";
    this.dvz = "BONUSSPINS";
    this.ren = "Apuesta";
    this.lsp = "Mitad";
    this.kdq = "Respin";
    this.lkl = "Bonus";
    this.tda = "Primera mano";
    this.ldm = "Segunda mano";
    this.jca = "Tercera mano";
    this.hqx = "CANCELAR";
    this.lpr = "CONFIGURACIONES DE AUTOSTART";
    this.mza = "Cantidad de juegos:";
    this.jjs = "Detener Autostart";
    this.cuj = "Crédito menor que:";
    this.acg = "Crédito mayor que:";
    this.tdh = "Ganancia mayor que:";
    this.rpc = "El Autostart se detendrá al principio del bonus.";
    this.mdd = "Compartir en Facebook";
    this.guo = "EL PORCENTAJE TEÓRICO DE DEVOLUCIÓN AL JUGADOR PARA ESTE JUEGO ES XY."
}
xkj.prototype = new nyc;

function rel() {
    this.fne = "MINIMALER EINSATZ IST";
    this.xdj = "MAX. EINSATZ";
    this.jux = "MIN. EINSATZ";
    this.yxu = "MAX. EINSATZ";
    this.hbp = "EINSATZ";
    this.start = "START";
    this.ehc = "HILFE";
    this.wvo = "GEWINNPLAN";
    this.bej = "MENÜ";
    this.ybv = "MEHR|SPIELE";
    this.nko = "KREDIT";
    this.mzj = "SPIEL ENDE";
    this.fxo = "GEWINNER!";
    this.pxz = "VIEL GLÜCK!";
    this.win = "GEWINN";
    this.vwa = "LETZTER GEWINN";
    this.vrn = "gewinnt";
    this.urn = "NEHMEN";
    this.gap = "NEHMEN";
    this.odb = "RISIKO";
    this.hwo = "AUTO|START";
    this.wjz = "HALF|GAMBLE";
    this.lwi = "STOP";
    this.of = "VON";
    this.dwn = "EXIT";
    this.kft = "START DRÜCKEN";
    this.hwd = "EINSATZ WÄHLEN";
    this.lbj = "TEILEN";
    this.phn = "DRÜCKE EINE TASTE UM FORTZUFAHREN";
    this.sim = "BERÜHRE DEN BILDSCHIRM UM FORTZUFAHREN";
    this.ret = "ZURÜCK|ZUM SPIEL";
    this.unr = "Gesamt Gewinn";
    this.sdc = "LÄDT ...";
    this.lna = "LÄDT HISTORIE ...";
    this.vnx = "NICHT GENUG KREDIT!";
    this.sld = "Achtung";
    this.wan = "Kommunikationsfehler";
    this.rlp = "Sie haben eines der Limits erreicht!";
    this.ftg = "Sie haben die maximale Anzahl an Freispielen erreicht!";
    this.fgf = "Das Spiel wird beendet";
    this.tao = "Das Spiel wird neu gestartet";
    this.xav = "Bonus!";
    this.qrl = "BONUS";
    this.qhj = "GEWONNEN";
    this.gia = "TOTAL";
    this.ioj = "BITTE WARTEN ...";
    this.error = "FEHLER";
    this.yns = "FREEPLAY";
    this.mtm = "MEHR|SPIELE";
    this.qvv = "SPIEL ID";
    this.mkg = "Spielzeit";
    this.sai = "Letzten";
    this.prp = "Spiele";
    this.jsr = "GUTHABEN";
    this.audio = "AUDIO";
    this.oom = "MUSIK";
    this.bvn = "SPEED";
    this.jcg = "VOLLBILD";
    this.kow = "VOLLBILD";
    this.language = "SPRACHE";
    this.ovv = "Bei Gerätestörung keine Haftung.";
    this.tnq = "W E I T E R";
    this.jbk = "Nicht noch einmal anzeigen";
    this.hlz = "AUTOSTART";
    this.jns = "RISIKO";
    this.zms = "GEWINNPLAN";
    this.eps = "Sounds können nicht geladen werden!";
    this.rch = "Ressourcen fehlen!";
    this.hdz = "Ohne Ton spielen?";
    this.zzw = "EINSTELL.";
    this.nrk = "Bitte drehen sie ihr Gerät!";
    this.left = "LINKS";
    this.bnt = "RECHTS";
    this.uhy = "AUTOM.";
    this.tfn = "V A L U E";
    this.gzz = "INFO";
    this.qqk = "Bitte deaktivieren sie den PRIVATEN MODUS im Browser um das Spiel zu starten";
    this.mrp = "Dieses Spiel ist optimiert für Google Chrome.";
    this.lun = "Bitte benutzen sie die aktuelle Version von";
    this.rgs = "Leider wird dieser Browser nicht unterstützt.";
    this.gqm = "Dieses Spiel kann nicht im Freispiel-Modus gestartet werden!";
    this.ooh = "Drehen sie ihr Gerät in den Portraitmodus, um wie auf einem echten Automaten zu spielen!";
    this.pme = "Passe die Spieloberfläche deinen Bedürfnissen an!";
    this.zps = "ZUSÄTZLICHE INFORMATION FINDEN SIE IN DEN SPIELREGELN.";
    this.bzs = "Reality Check";
    this.zxo = "Du hast einen Reality Check angefordert.";
    this.bvh = "Drücke HISTORIE um deine Spielhistorie anzuzeigen.";
    this.dft = "Spielpause";
    this.nkv = "Spiellimits";
    this.qoa = "Selbsttest";
    this.bjq = "SPIELREGELN";
    this.qtu = "SPIELREGELN";
    this.uhd = "WÄHLE DIE RICHTIGE FARBE UM DEN GEWINN ZU VERDOPPELN";
    this.oqf = "WÄHLE DIE RICHTIGE KARTENFARBE UM DEN GEWINN ZU VERVIERFACHEN";
    this.vdh = "DRÜCKE RISIKO FÜR EINE CHANCE DEN GEWINN ZU VERVIELFACHEN";
    this.xho = "Statistik";
    this.mje = "Anzahl der Spiele";
    this.jmq = "Gesamteinsatz";
    this.odz = "Gesamtgewinn";
    this.zqx = "Gesamtspielzeit";
    this.sae = "Ich habe die Nachricht gelesen";
    this.dql = "SPIEL|BEENDEN";
    this.ok = "OK";
    this.uap = "Historie";
    this.jmy = "Es existieren noch keine Spiele.";
    this.state = "STATUS";
    this.obw = "Hauptspiel";
    this.fsm = "Auto. Nehmen";
    this.ecm = "Genommen";
    this.dvz = "Bonusspins";
    this.ren = "Risiko";
    this.lsp = "Halb";
    this.kdq = "Respin";
    this.lkl = "Bonus";
    this.tda = "Erster Deal";
    this.ldm = "Zweiter Deal";
    this.jca = "Dritter Deal";
    this.hqx = "ABBRUCH";
    this.lpr = "AUTOSTART EINSTELLUNGEN";
    this.mza = "Anzahl der Spiele: ";
    this.jjs = "Autostart anhalten";
    this.cuj = "Kredit niedriger als:";
    this.acg = "Kredit höher als:";
    this.tdh = "Gewinn höher als:";
    this.rpc = "Der Autostart wird am Bonusbeginn gestoppt.";
    this.mdd = "Auf Facebook teilen";
    this.guo = "DIE THEORETISCHE AUSZAHLUNG AN DEN SPIELER FÜR DIESES SPIEL BETRÄGT XY."
}
rel.prototype = new nyc;

function kvr() {
    this.fne = "MINIMUM BANKO";
    this.xdj = "MAKS. BANKO";
    this.jux = "MIN. BANKO";
    this.yxu = "MAKS. BANKO";
    this.hbp = "BANKO";
    this.start = "BAŞLAT";
    this.ehc = "YARDIM";
    this.wvo = "Kazanç planı";
    this.bej = "MENÜ";
    this.ybv = "DAHA ÇOK|OYUN";
    this.lwi = "DUR";
    this.nko = "KREDI";
    this.mzj = "OYUN BİTTİ";
    this.fxo = "KAZANDINIZ!";
    this.pxz = "BOL ŞANSLAR!";
    this.win = "KAZANÇ";
    this.vwa = "SON KAZANÇ";
    this.vrn = "kazanır";
    this.urn = "ALMAK";
    this.gap = "ALMAK";
    this.odb = "RIZIKO";
    this.hwo = "OTOMATİK|BAŞLATMA";
    this.wjz = "YARI|RIZIKO";
    this.of = "VEREN";
    this.dwn = "ÇIKIŞ";
    this.kft = "BAŞLAT TUŞUNA BASINIZ";
    this.hwd = "BANKO SEÇİNİZ";
    this.lbj = "ALMAK|1/2";
    this.phn = "DEVAM ETMEK IÇIN KLAVYEDE HER HANGI BIR YERE BASINIZ";
    this.sim = "DEVAM ETMEK İÇİN EKRANA DOKUN";
    this.ret = "OYUNA|GERI";
    this.unr = "Toplam kazanç";
    this.sdc = "YÜKLÜYOR ...";
    this.lna = "GEÇMIŞI YÜKLÜYOR ...";
    this.vnx = "YETERSİZ KREDİ.";
    this.rlp = "Limitlerin birine ulaştınız!";
    this.sld = "Dikkat";
    this.wan = "İletişim hatası";
    this.ftg = "Maksimum bedava oyun sayısına ulaşmış bulunuyorsunuz!";
    this.fgf = "Oyun sonlandırılıyor";
    this.tao = "Oyun yeniden başlatılıyor";
    this.xav = "Bedava oyun primi!";
    this.qrl = "PRİM";
    this.qhj = "KAZANDINIZ";
    this.gia = "TOPLAM";
    this.ioj = "LÜTFEN BEKLEYIN ...";
    this.error = "HATA";
    this.yns = "FREEPLAY";
    this.mtm = "DAHA ÇOK OYUN";
    this.qvv = "OYUN ID";
    this.mkg = "OYUN SÜRESİ";
    this.sai = "Son";
    this.prp = "oyun";
    this.jsr = "BAKIYE";
    this.audio = "AUDIO";
    this.oom = "MÜZIK";
    this.bvn = "HıZ";
    this.jcg = "TAM EKRAN";
    this.kow = "TAM EKRAN";
    this.language = "LISAN";
    this.ovv = "CIHAZ ARIZALANDIĞINDA MESULIYET KABUL EDILMEZ.";
    this.tnq = "İ L E R I";
    this.jbk = "Tekrar gösterme";
    this.hlz = "OTOMATİK|BAŞLATMA";
    this.jns = "RIZIKO";
    this.zms = "Kazanç planı";
    this.eps = "Sesler yüklenemiyorlar!";
    this.rch = "Kaynaklar eksik!";
    this.hdz = "Sessiz oynayacak mısınız?";
    this.zzw = "AYARLAR";
    this.nrk = "Lütfen cihazınını döndürün!";
    this.left = "SOL";
    this.bnt = "SAĞ";
    this.uhy = "OTOMATIK";
    this.tfn = "V A L U E";
    this.gzz = "BILGI";
    this.qqk = "Oyunu başlatmak için lütfen ağ tarayıcınızda ÖZEL MOD'u kapatınız.";
    this.mrp = "Bu oyun Google Chrome için optimize edilmiştir.";
    this.lun = "'nin güncel versiyonunu kullanın";
    this.rgs = "Maalesef bu ağ tarayıcısı tam olarak desteklenmiyor.";
    this.gqm = "Bu oyunun serbest modunda başlatılması mümkün değildir!";
    this.ooh = "Cihazınızı portre moduna çevirerek gerçek bir otomatikte oynar gibi oynayın!";
    this.pme = "Oyun yüzeyini kendi ihtiyaçlarına göre düzenle!";
    this.zps = "DAHA FAZLA BİLGİYİ OYUN KURALLARINDA BULABİLİRSİNİZ.";
    this.bzs = "Reality Check";
    this.zxo = "Reality Check talebinde bulundun.";
    this.bvh = "Oyun geçmişini görmek için GEÇMİŞ tuşuna bas.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.bjq = "OYUNUN KURALLARı";
    this.qtu = "OYUNUN|KURALLARı";
    this.uhd = "DOĞRU RENGİ SEÇEREK KAZANCININ İKİYE KATLARSIN";
    this.oqf = "DOĞRU KART RENGİNİ SEÇEREK KAZANCINI DÖRDE KATLARSIN.";
    this.vdh = "KAZANCI KATLAMA ŞANSI İÇİN GAMBLE (RİSK)";
    this.xho = "İstatistik";
    this.mje = "Toplam oyunlar";
    this.jmq = "Toplam bankolar";
    this.odz = "Toplam kazançlar";
    this.zqx = "Toplam oyun süresi";
    this.sae = "Bu mesajı okudum.";
    this.dql = "OYUNU|KAPAT";
    this.ok = "OK";
    this.uap = "GEÇMİŞ";
    this.jmy = "Henüz hiç bir oyun yok.";
    this.state = "STATÜ";
    this.obw = "Ana oyun";
    this.fsm = "Otomatik olarak kazandınız";
    this.ecm = "Toplandı";
    this.dvz = "Prim oyunlar";
    this.ren = "Riziko";
    this.lsp = "Yarım";
    this.kdq = "Respin";
    this.lkl = "Prim";
    this.tda = "İlk anlaşma";
    this.ldm = "İkinci anlaşma";
    this.jca = "Üçüncü anlaşma";
    this.hqx = "İPTAL";
    this.lpr = "OTOMATIK BAŞLAT AYARLARı";
    this.mza = "Oyun sayısı:";
    this.jjs = "Otomatik başlatmayı durdur";
    this.cuj = "Kredi bundan düşüktür:";
    this.acg = "Kredi bundan yüksektir:";
    this.tdh = "Kazanç bundan yüksektir:";
    this.rpc = "Otomatik başlatma prim başlangıcında durduruluyor.";
    this.mdd = "Facebook'ta paylaş";
    this.guo = "OYUNCUYA TEORIK OLARAK ÖDENECEK MEBLAĞ % XY ORANıNDADıR."
}
kvr.prototype = new nyc;

function vug() {
    this.fne = "MINIMÁLNÍ SÁZKA JE";
    this.xdj = "MAX. SÁZKA";
    this.jux = "MIN. SÁZKA";
    this.yxu = "MAX. SÁZKA";
    this.hbp = "SÁZKA";
    this.start = "START";
    this.ehc = "POMOC";
    this.wvo = "VÝHERNÍ PLÁN";
    this.bej = "MENU";
    this.ybv = "DALŠÍ|HRY";
    this.lwi = "STOP";
    this.nko = "KREDIT";
    this.mzj = "KONEC HRY";
    this.fxo = "VÍTEZ!";
    this.pxz = "HODNE ŠTESTÍ!";
    this.win = "VÝHRA";
    this.vwa = "POSL. VÝHRA";
    this.vrn = "vyhrává";
    this.urn = "VEZMI";
    this.gap = "VEZMI";
    this.odb = "HRA";
    this.hwo = "AUTO|START";
    this.wjz = "POLOVICNÍ|HRA";
    this.of = "Z";
    this.dwn = "VÝSTUP";
    this.kft = "START HRY";
    this.hwd = "VYBRAT SÁZKU";
    this.lbj = "POLOVINA";
    this.phn = "POKRACUJ DOTEKEM OBRAZOVKY";
    this.sim = "PRO POKRAČOVÁNÍ SE DOTKNĚTE OBRAZOVKY";
    this.ret = "ZPET|DO HRY";
    this.unr = "Celková výhra";
    this.sdc = "NAHRÁVÁM ...";
    this.lna = "NAHRÁVÁM HISTORII ...";
    this.vnx = "Nedostatecný kredit.";
    this.rlp = "Dosáhli jste jednoho z limitů!";
    this.sld = "Varování";
    this.wan = "Chyba komunikace";
    this.ftg = "Dosáhli jste maximálního počtu her zdarma!";
    this.fgf = "Hra se zavře";
    this.tao = "Hra se restartuje";
    this.xav = "Bonus!";
    this.qrl = "BONUS";
    this.qhj = "VYHRÁL";
    this.gia = "CELKOVÁ";
    this.ioj = "ČEKEJTE PROSÍM ...";
    this.error = "ERROR";
    this.yns = "FREEPLAY";
    this.mtm = "DALŠÍ HRY";
    this.qvv = "ID HRY";
    this.mkg = "HRACÍ DOBA";
    this.sai = "Poslední";
    this.prp = "hry";
    this.jsr = "MÍT K DOBRU";
    this.audio = "AUDIO";
    this.oom = "MUZIKA";
    this.bvn = "RYCHLOST";
    this.jcg = "FULLSCREEN";
    this.kow = "FULLSCREEN";
    this.language = "ŘEČ";
    this.ovv = "Při poruše jsou všechny hry a výhry neplatné.";
    this.tnq = "P O K R A Č U J";
    this.jbk = "Nezobrazujte znovu";
    this.hlz = "AUTOSTART";
    this.jns = "HRA";
    this.zms = "VÝHERNÍ PLÁN";
    this.eps = "Zvuk nelze nahrát!";
    this.rch = "Chybí zdroje!";
    this.hdz = "Hrát bez zvuku?";
    this.zzw = "NASTAVENÍ";
    this.tfn = "V A L U E";
    this.nrk = "Otočte své zařízení, prosím!";
    this.left = "VLEVO";
    this.bnt = "VPRAVO";
    this.uhy = "AUTO";
    this.gzz = "INFORMACE";
    this.qqk = "Abyste mohli hrát hru, vypněte SOUKROMÝ REŽIM ve svém prohlížeči, prosím.";
    this.mrp = "Tato hra je optimalizovaná pro Google Chrome.";
    this.lun = "Použijte aktuální verzi";
    this.rgs = "Tento prohlížeč není bohužel plně podporován.";
    this.gqm = "Tuto hru nelze spustit v režimu hry zdarma!";
    this.ooh = "Otočte zařízení tak, aby zobrazilo hru jako na skutečném automatu!";
    this.pme = "Nastavte rozhraní hry svým potřebám!";
    this.zps = "VÍCE INFORMACÍ NALEZNETE V PRAVIDLECH HRY.";
    this.bzs = "Reality Check";
    this.zxo = "Požádali jste o kontrolu reality.";
    this.bvh = "Pro zobrazení vaší herní historie stiskněte HISTORIE.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.bjq = "PRAVIDLA HRY";
    this.qtu = "PRAVIDLA HRY";
    this.uhd = "VYBRAT SPRÁVNOU BARVU KE ZDVOJNÁSOBENÍ VÝHRY";
    this.oqf = "VYBRAT SPRÁVNOU BARVU KARTY KE ZČTYŘNÁSOBENÍ VÝHRY";
    this.vdh = "VSADIT NA ŠANCI ZVÝŠIT VÝHRU";
    this.xho = "Statistika";
    this.mje = "Celkem hry";
    this.jmq = "Celkem sázky";
    this.odz = "Celkem výhry";
    this.zqx = "Celková hrací doba";
    this.sae = "Zprávu jsem četl/a.";
    this.dql = "UKONČIT|HRU";
    this.ok = "OK";
    this.uap = "HISTORIE";
    this.jmy = "Žádné odehrané hry.";
    this.state = "STATUS";
    this.obw = "Hlavní hra";
    this.fsm = "Automaticky vybráno";
    this.ecm = "Vybráno";
    this.dvz = "Bonusspins";
    this.ren = "Hra";
    this.lsp = "Polovina";
    this.kdq = "Respin";
    this.lkl = "Bonus";
    this.tda = "První vyložení";
    this.ldm = "Druhé vyložení";
    this.jca = "Třetí vyložení";
    this.hqx = "ZRUŠIT";
    this.lpr = "NASTAVENÍ AUTOMATICKÉHO STARTU";
    this.mza = "Množství her:";
    this.jjs = "Zastavit automatický start";
    this.cuj = "Kredit nižší než:";
    this.acg = "Kredit vyšší než:";
    this.tdh = "Výhra vyšší než:";
    this.rpc = "Automatický start se zastaví na začátku bonusu.";
    this.mdd = "Sdílet na Facebooku";
    this.guo = "TEORETICKÁ NÁVRATNOST HRÁČI V TÉTO HŘE JE XY."
}
vug.prototype = new nyc;

function cfp() {
    this.fne = "MIINIMUMPANUS ON";
    this.xdj = "MAX PANUS";
    this.jux = "MIN PANUS";
    this.yxu = "MAX PANUS";
    this.hbp = "PANUS";
    this.start = "START";
    this.ehc = "ABI";
    this.wvo = "VÕIDU TABEL";
    this.bej = "MENÜÜ";
    this.ybv = "VALI|MÄNG";
    this.lwi = "STOPP";
    this.nko = "KREDIIT";
    this.mzj = "MÄNG ON LÕPPENUD!";
    this.fxo = "OLED VÕITNUD!";
    this.pxz = "SOOVIME EDU!";
    this.win = "VÕIT";
    this.vwa = "EELMINE VÕIT";
    this.urn = "VÕTA|VÕIT";
    this.gap = "VÕTA VÕIT";
    this.odb = "DUUBEL|DAMINE";
    this.hwo = "AUTO|START";
    this.wjz = "POOLITA|DUUBELDA";
    this.of = "OF";
    this.dwn = "VÄLJA";
    this.kft = "ALUSTA MÄNGU";
    this.hwd = "VALI PANUS";
    this.lbj = "POOLIK";
    this.phn = "JÄTKAMISEKS VAJUTAGE ÜKSKÕIK MILLIST NUPPU";
    this.ret = "TAGASI|MÄNGU";
    this.unr = "Koguvõit";
    this.vnx = "POLE PIISAVALT KREDIITI.";
    this.xav = "Boonus!";
    this.qrl = "BOONUS";
    this.ioj = "PALUN OODAKE ...";
    this.mtm = "Vali Mäng";
    this.audio = "HELI";
    this.oom = "MUUSIKA";
    this.bvn = "KIIRUS";
    this.jcg = "TÄISEKRAAN";
    this.kow = "TÄISEKRAAN";
    this.ovv = "RIKKE KORRAL KÕIK MÄNGUD JA VÕIDUD TÜHISTATAKSE.";
    this.umq = "MÄNGU LÕPP";
    this.language = "KEEL";
    this.bjq = "MÄNGUREEGLID";
    this.qtu = "MÄNGUREEGLID";
    this.sdc = "LAADIMINE ...";
    this.lna = "AJALOO LAADIMINE ...";
    this.rlp = "Oled saavutanud ühe limiitidest!";
    this.sld = "Hoiatus";
    this.wan = "Ühenduse viga";
    this.ftg = "Te olete jõudnud tasuta mängude maksimaalse arvuni!";
    this.fgf = "Mäng suletakse";
    this.tao = "Mäng taaskäivitatakse";
    this.sim = "JÄTKAMISEKS PUUDUTA EKRAANI";
    this.zzw = "SÄTTED";
    this.tfn = "V A L U E";
    this.nrk = "Pöörake oma seadet!";
    this.gzz = "INFO";
    this.qqk = "Mängu mängimiseks keelake oma brauseris PRIVAATREŽIIM.";
    this.mrp = "See mäng on optimeeritud Google Chrome jaoks.";
    this.lun = "Palun kasutage praeguse versiooni";
    this.rgs = "Kahjuks ei toetata seda brauserit täielikult.";
    this.gqm = "Seda mängu ei saa tasuta mängimise režiimis käivitada!";
    this.left = "VASAK";
    this.bnt = "PAREM";
    this.uhy = "AUTOMAATNE";
    this.qhj = "VÕITIS";
    this.vrn = "võidetud";
    this.gia = "KOKKU";
    this.error = "VIGA";
    this.yns = "TASUTA MÄNG";
    this.qvv = "MÄNGU ID";
    this.mkg = "MÄNGUAEG";
    this.sai = "Viimased";
    this.prp = "mängu";
    this.jsr = "SISSEMAKSE";
    this.uhd = "VÕIDU DUUBELDAMISEKS VALI ÕIGE VÄRV";
    this.oqf = "VÕIDU NELJAKORDISTAMISEKS VALI ÕIGE MAST";
    this.vdh = "RISKI, ET SUURENDADA OMA VÕITU";
    this.xho = "Statistika";
    this.mje = "Mänge kokku";
    this.jmq = "Kogupanus";
    this.odz = "Koguvõit";
    this.zqx = "Mänguaeg kokku";
    this.sae = "Olen seda teadet lugenud.";
    this.dql = "MÄNGU|LÕPP";
    this.uap = "Ajalugu";
    this.jmy = "Ühtegi mängu ei ole mängitud.";
    this.state = "OLEK";
    this.obw = "Põhimäng";
    this.fsm = "Automaatne väljavõtt";
    this.ecm = "Välja võetud";
    this.dvz = "Bonusspins";
    this.ren = "Gamble";
    this.lsp = "Pool";
    this.kdq = "Respin";
    this.lkl = "Boonus";
    this.tda = "Esimene jagamine";
    this.ldm = "Teine jagamine";
    this.jca = "Kolmas jagamine";
    this.tnq = "J Ä T K A";
    this.jbk = "Ära seda enam näita";
    this.hlz = "AUTOSTART";
    this.jns = "DUUBEL DAMINE";
    this.zms = "VÕIDU TABEL";
    this.eps = "Helisid ei saa laadida!";
    this.rch = "Ressursid puuduvad!";
    this.hdz = "Soovid mängida ilma helideta?";
    this.ooh = "Keera seade vertikaalasendisse, et mängida nagu päris mänguautomaadil!";
    this.pme = "Kohanda mänguliidest vastavalt oma vajadustele!";
    this.zps = "VAATA LISAINFOT MÄNGUREEGLITEST.";
    this.hqx = "TÜHISTA";
    this.lpr = "AUTOMAATKÄIVITUSE SÄTTED";
    this.mza = "Mängude arv:";
    this.jjs = "Peata automaatkäivitus";
    this.cuj = "Krediit madalam kui:";
    this.acg = "Krediit kõrgem kui:";
    this.tdh = "Võit suurem kui:";
    this.rpc = "Automaatkäivitus peatatakse boonuse alguses.";
    this.mdd = "Jaga Facebookis";
    this.ok = "OK";
    this.bzs = "Reality Check";
    this.zxo = "Olete soovinud reaalsuskontrolli.";
    this.bvh = "Oma mänguajaloo vaatamiseks vajutage AJALUGU.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.guo = "SELLE MÄNGU MÄNGIJA TEOREETILINE TULU ON XY."
}
cfp.prototype = new nyc;

function zxx() {
    this.fne = "ΤΟ ΕΛAΧΙΣΤΟ ΣΤΟIΧΗΜΑ ΕIΝΑΙ";
    this.xdj = "ΜEΓΙΣΤΟ ΣΤΟIΧΗΜΑ";
    this.jux = "EΛΑΧ. ΣΤΟΙΧΗΜΑ";
    this.yxu = "ΜΕΓ. ΣΤΟΙΧΗΜΑ";
    this.hbp = "ΣΤΟIΧΗΜΑ";
    this.start = "EΝΑΡΞΗ";
    this.ehc = "ΒΟHΘΕΙΑ";
    this.wvo = "ΠIΝΑΚΑΣ ΚΕΡΔΩΝ";
    this.bej = "ΜΕΝΟY";
    this.ybv = "ΠΕΡΙΣ.|ΠΑΙΧΝIΔΙΑ";
    this.lwi = "ΣΤΟΠ";
    this.nko = "ΠIΣΤΩΣΗ";
    this.mzj = "TEΛΟΣ ΠΑΙΧΝΙΔΙΟY!";
    this.fxo = "ΝΙΚΗΤΗΣ!";
    this.pxz = "ΚΑΛΗ ΤΥΧΗ!";
    this.win = "ΚEΡΔΟΣ";
    this.vwa = "ΤΕΛΕΥΤΑIΟ ΚEΡΔΟΣ";
    this.urn = "ΠΑΡΑΛΑΒH";
    this.gap = "ΠΑΡΑΛΑΒH";
    this.odb = "ΤΖΟΓAΡΩ";
    this.hwo = "ΑΥΤOΜΑΤΗ|EΝΑΡΞΗ";
    this.wjz = "ΠΑΡΑΛΑΒH|ΤΖΟΓAΡΩ";
    this.of = "ΑΠO";
    this.dwn = "EΞΟΔΟΣ";
    this.kft = "ΑΡΧΙΖΕΙ ΠΑΙΧΝΙΔΙ";
    this.hwd = "ΕΠΙΛΕΞΤΕ ΣΤΟΙΧΗΜΑ";
    this.lbj = "ΠΑΡΑΛΑΒH|1/2";
    this.phn = "ΠAΤΗΣΕ EΝΑ ΠΛHΚΤΡΟ ΓΙΑ ΝΑ ΣΥΝΕΧIΣΕΙΣ";
    this.ret = "EΠΙΣΤΡΟΦH|ΣΤΟ|ΠΑΙΧΝIΔΙ";
    this.unr = "ΣΥΝΟΛΙΚO ΚEΡΔΟΣ";
    this.vnx = "ΔΕΝ ΑΡΚΕΤH ΠIΣΤΩΣΗ.";
    this.xav = "Μπόνουσ!";
    this.qrl = "ΜΠOΝΟΥΣ";
    this.ioj = "ΠΑΡΑΚΑΛΩ ΠΕΡΙΜEΝΕΤΕ ...";
    this.mtm = "ΠΕΡΙΣ.|ΠΑΙΧΝIΔΙΑ";
    this.audio = "ΗΧΟΣ";
    this.oom = "ΜΟΥΣΙΚΉ";
    this.bvn = "ΤΑΧYΤΗΤΑ";
    this.jcg = "ΠΛΗΡΗΣ ΟΘΟΝΗ";
    this.kow = "ΠΛΗΡΗΣ|ΟΘΟΝΗ";
    this.ovv = "ΣΕ ΠΕΡΙΠΤΩΣΗ ΒΛΑΒΗΣ ΤΗΣ ΣΥΣΚΕΥΗΣ ΔΕΝ ΑΝΑΛΑΜΒΑΝΟΥΜΕ ΚΑΜΙΑ ΕΥΘΥΝΗ.";
    this.language = "ΓΛΩΣΣΑ";
    this.gia = "ΣYΝΟΛΟ";
    this.bjq = "ΚΑΝΌΝΕς ΠΑΙΧΝΙΔΙΟΎ";
    this.qtu = "ΚΑΝΌΝΕς|ΠΑΙΧΝΙΔΙΟΎ";
    this.sdc = "ΦΟΡΤΩΣΗ ...";
    this.lna = "ΦΟΡΤΩΣΗ ΙΣΤΟΡΙΚΟΥ...";
    this.rlp = "Ξεπεράσατε κάποιο όριο!";
    this.sld = "Προειδοποίηση";
    this.wan = "Σφάλμα επικοινωνίας";
    this.ftg = "Φτάσατε στο ανώτατο όριο δωρεάν παιχνιδιών!";
    this.fgf = "Το παιχνίδι θα τερματιστεί";
    this.tao = "Το παιχνίδι θα εκκινηθεί εκ νέου";
    this.sim = "ΑΓΓΙΞΤΕ ΤΗΝ ΟΘΟΝΗ ΓΙΑ ΝΑ ΣΥΝΕΧΙΣΕΤΕ";
    this.zzw = "ΡΥΘΜΙΣΕΙΣ";
    this.tfn = "V A L U E";
    this.nrk = "Παρακαλούμε, περιστρέψτε τη συσκευή σας!";
    this.gzz = "ΠΛΗΡΟΦΟΡΊΕς";
    this.qqk = "Παρακαλούμε, απενεργοποιήστε τη λειτουργία PRIVATE MODE του προγράμματος περιήγησης, προκειμένου να εκκινηθεί το παιχνίδι.";
    this.mrp = "Αυτό το παιχνίδι έχει βελτιστοποιηθεί για Google Chrome.";
    this.lun = "Παρακαλούμε, χρησιμοποιήστε την τρέχουσα έκδοση του";
    this.rgs = "Δυστυχώς, αυτό το πρόγραμμα περιήγησης δεν υποστηρίζεται πλήρως.";
    this.gqm = "Αυτό το παιχνίδι δεν μπορεί να διεξαχθεί στη δωρεάν λειτουργία!";
    this.left = "ΑΡΙΣΤΕΡA";
    this.bnt = "ΔΕΞΙA";
    this.uhy = "AΥΤOΜΑΤΟ";
    this.qhj = "ΚEΡΔΙΣΕ";
    this.vrn = "κερδίζει";
    this.error = "ΣΦΑΛΜΑ";
    this.yns = "ΔΩΡΕAΝ ΠΑΙΧΝIΔΙ";
    this.qvv = "ΤΑΥΤΟΤΗΤΑ ΠΑΙΧΝΙΔΙΟΥ";
    this.mkg = "ΧΡΟΝΟΣ ΠΑΙΧΝΙΔΙΟΥ";
    this.sai = "Τελευταία";
    this.prp = "παιχνίδια";
    this.jsr = "ΠΙΣΤΩΤΙΚO ΥΠOΛΟΙΠΟ";
    this.uhd = "ΕΠΙΛΕΞΤΕ ΤΟ ΣΩΣΤΟ ΧΡΩΜΑ ΓΙΑ ΝΑ ΔΙΠΛΑΣΙΑΣΕΤΕ ΤΟ ΚΕΡΔΟΣ ΣΑΣ";
    this.oqf = "ΕΠΙΛΕΞΤΕ ΤΟ ΣΩΣΤΟ ΧΡΩΜΑ ΦΥΛΛΟΥ ΓΙΑ ΝΑ ΤΕΤΡΑΠΛΑΣΙΑΣΕΤΕ ΤΟ ΚΕΡΔΟΣ ΣΑΣ";
    this.vdh = "ΠΟΝΤΑΡΕΤΕ ΓΙΑ ΝΑ ΕΧΕΤΕ ΤΗΝ ΕΥΚΑΙΡΙΑ ΠΟΛΛΑΠΛΑΣΙΑΣΜΟΥ ΤΟΥ ΚΕΡΔΟΥΣ ΣΑΣ";
    this.xho = "Στατιστικά";
    this.mje = "Σύνολο παιχνιδιών";
    this.jmq = "Συνολικό ποντάρισμα";
    this.odz = "Συνολικό κέρδος";
    this.zqx = "Συνολικός χρόνος παιχνιδιού";
    this.sae = "Eχω διαβάσει το μήνυμα.";
    this.dql = "ΛΗΞΗ|ΠΑΙΧΝΙΔΙΟΥ";
    this.uap = "ΙΣΤΟΡΙΚΟ";
    this.jmy = "Ακόμη δεν υπάρχει κάποιο παιχνίδι.";
    this.state = "ΚΑΤAΣΤΑΣΗ";
    this.obw = "Κύριο παιχνίδι";
    this.fsm = "Αυτόματη λήψη";
    this.ecm = "Ελήφθησαν";
    this.dvz = "Bonusspins";
    this.ren = "Τζογάρω";
    this.lsp = "Hμισυ";
    this.kdq = "Respin";
    this.lkl = "Μπόνουσ";
    this.tda = "Πρώτο μοίρασμα";
    this.ldm = "Δεύτερο μοίρασμα";
    this.jca = "Τρίτο μοίρασμα";
    this.tnq = "Σ Υ Ν  E Χ Ε Ι Α";
    this.jbk = "Να μην προβληθεί ξανά";
    this.hlz = "ΑΥΤΟΜΑΤΗ|ΕΝΑΡΞΗ";
    this.jns = "ΤΖΟΓAΡΩ";
    this.zms = "ΠIΝΑΚΑΣ ΚΕΡΔΩΝ";
    this.eps = "Η φόρτωση ήχων δεν είναι εφικτή!";
    this.rch = "Λείπουν πόροι!";
    this.hdz = "Παιχνίδι χωρίς ήχο?";
    this.ooh = "Γυρίστε τη συσκευή σας σε λειτουργία πορτρέτου για να παίξετε όπως σε μια πραγματική μηχανή slot!";
    this.pme = "Προσάρμοσε την επιφάνεια εργασίας στις προτιμήσεις σου!";
    this.zps = "ΓΙΑ ΠΕΡΙΣΣΌΤΕΡΕΣ ΠΛΗΡΟΦΟΡΊΕΣ, ΔΕΊΤΕ ΤΟΥΣ ΚΑΝΟΝΙΣΜΟΎΣ ΤΟΥ ΠΑΙΧΝΙΔΙΟΎ.";
    this.hqx = "ΑΚΎΡΩΣΗ";
    this.lpr = "ΡΥΘΜΉΣΕΙς AUTOSTART";
    this.mza = "Αριθμός παιχνιδιών:";
    this.jjs = "Διακοπή autostart";
    this.cuj = "Μονάδες χαμηλότερα από:";
    this.acg = "Μονάδες υψηλότερες από:";
    this.tdh = "Κέρδος υψηλότερο από:";
    this.rpc = "Το autostart θα σταματήσει με το ξεκίνημα του μπόνους.";
    this.mdd = "Κοινοποίηση στο Facebook";
    this.ok = "OK";
    this.bzs = "έλεγχο πραγματικότητας";
    this.zxo = "Ζητήσατε τον έλεγχο πραγματικότητας.";
    this.bvh = "Πατήστε το ΙΣΤΟΡΙΚΟ για να δείτε το ιστορικό των παιχνιδιών σας.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.guo = "Η ΘΕΩΡΗΤΙΚΉ ΕΠΙΣΤΡΟΦΉ ΣΤΟΝ ΠΑΊΚΤΗ ΓΙΑ ΑΥΤΌ ΤΟ ΠΑΙΧΝΊΔΙ ΕΊΝΑΙ XY."
}
zxx.prototype = new nyc;

function com() {
    this.fne = "МИН. ЗАЛОГ Е";
    this.xdj = "МАКС. ЗАЛОГ";
    this.jux = "МИНИМ. ЗАЛОГ";
    this.yxu = "МАКС. ЗАЛОГ";
    this.hbp = "ЗАЛОГ";
    this.start = "СТАРТ";
    this.ehc = "ПОМОЩ";
    this.wvo = "ПЛАН НА|ПЕЧАЛБИТЕ";
    this.bej = "МЕНЮ";
    this.ybv = "ПОВЕЧЕ|ИГРИ";
    this.lwi = "СТОП";
    this.nko = "КРЕДИТ";
    this.mzj = "ИГРАТА ЗАВЪРШИ";
    this.fxo = "ПЕЧЕЛИТЕ!";
    this.pxz = "УСПЕХ!";
    this.win = "ПЕЧАЛБА";
    this.vwa = "ПОСЛ.ПЕЧАЛБА";
    this.urn = "ПРИБИРАНЕ";
    this.gap = "ПРИБИРАНЕ";
    this.odb = "ДУБЛИРАНЕ";
    this.hwo = "АВТО|СТАРТ";
    this.wjz = "ДЕЛЕНЕ|ДУБЛ.";
    this.of = "ОТ";
    this.dwn = "ИЗХОД";
    this.kft = "ЗАПОЧНЕТЕ ИГРАТА";
    this.hwd = "ИЗБЕРЕТЕ ЗАЛОГ";
    this.lbj = "ДЕЛЕНЕ";
    this.phn = "НАТИСНЕТЕ НЯКОЙ БУТОН ЗА ДА ПРОДЪЛЖИТЕ";
    this.ret = "ВРЪЩАНЕ|КЪМ|ИГРАТА";
    this.unr = "ОБЩА ПЕЧАЛБА";
    this.vnx = "НЕ ДОСТАТЪЧЕН КРЕДИТ.";
    this.xav = "Бонус!";
    this.qrl = "БОНУС";
    this.ioj = "МОЛЯ ИЗЧАКАЙТЕ ...";
    this.mtm = "Повече Игри";
    this.bvn = "ТУРБО";
    this.ovv = "ПОВРЕДА АНУЛИРА ВСИЧКИ ЗАЛАГАНИЯ И ПЛАЩАНИЯ.";
    this.language = "ЕЗИК";
    this.bjq = "ПРАВИЛА НА ИГРАТА";
    this.qtu = "ПРАВИЛА|НА ИГРАТА";
    this.sdc = "ЗАРЕЖДАНЕ ...";
    this.lna = "ЗАРЕЖДАНЕ НА ИСТОРИЯ ...";
    this.rlp = "Достигна един от лимитите!";
    this.sld = "Предупреждение";
    this.wan = "Комуникационна грешка";
    this.ftg = "Достигнали сте максималния брой безплатни игри!";
    this.fgf = "Играта ще бъде затворена";
    this.tao = "Играта ще бъде рестартирана";
    this.sim = "ДОКОСНЕТЕ ЕКРАНА, ЗА ДА ПРОДЪЛЖИТЕ";
    this.zzw = "НАСТРОЙКИ";
    this.tfn = "V A L U E";
    this.nrk = "Моля, включете устройството!";
    this.gzz = "ИНФОРМАЦИЯ";
    this.qqk = "Моля, деактивирайте ЧАСТЕН РЕЖИМ на браузъра, за да играете играта.";
    this.mrp = "Тази игра е оптимизирана за Google Chrome.";
    this.lun = "Моля, използвайте текущата версия на";
    this.rgs = "За съжаление този браузър не се поддържа напълно.";
    this.gqm = "Тази игра не може да се стартира в режим на свободна игра!";
    this.left = "ЛЯВА";
    this.bnt = "ДЯСНА";
    this.uhy = "АВТО";
    this.qhj = "СПЕЧЕЛЕНО";
    this.vrn = "печалби";
    this.gia = "ОБЩО";
    this.error = "ГРЕШКА";
    this.yns = "БЕЗПЛАТНА ИГРА";
    this.audio = "ЗВУК";
    this.oom = "МУЗИКА";
    this.jcg = "ПЪЛЕН ЕКРАН";
    this.kow = "ПЪЛЕН|ЕКРАН";
    this.qvv = "ИД НА ИГРА";
    this.mkg = "ВРЕМЕ НА ИГРА";
    this.sai = "Последни";
    this.prp = "игри";
    this.jsr = "ДЕПОЗИТ";
    this.uhd = "ИЗБЕРИ ПРАВИЛНАТА БОЯ, ЗА ДА УДВОИШ ПЕЧАЛБАТА";
    this.oqf = "ИЗБЕРИ ПРАВИЛНАТА БОЯ, ЗА ДА УЧЕТВОРИШ ПЕЧАЛБАТА";
    this.vdh = "ИГРАЙ ЗА ШАНС ДА УВЕЛИЧИШ ПЕЧАЛБАТА";
    this.xho = "Статистика";
    this.mje = "Общо игри";
    this.jmq = "Общо залог";
    this.odz = "Общо печалби";
    this.zqx = "Общо време на игра";
    this.sae = "Прочетох това съобщение.";
    this.dql = "ИЗХОД|ОТ|ИГРАТА";
    this.uap = "ИСТОРИЯ";
    this.jmy = "Няма играни игри.";
    this.state = "СТАТУС";
    this.obw = "Основна игра";
    this.fsm = "Автоматично събрани";
    this.ecm = "Събрани";
    this.dvz = "Бонус-игри";
    this.ren = "Дублиране";
    this.lsp = "Половина";
    this.kdq = "Respin";
    this.lkl = "Бонус";
    this.tda = "Първо раздаване";
    this.ldm = "Второ раздаване";
    this.jca = "Трето раздаване";
    this.tnq = "П Р О Д Ъ Л Ж А В А М";
    this.jbk = "Не показвай отново";
    this.hlz = "AUTOSTART";
    this.jns = "ДУБЛИРАНЕ";
    this.zms = "ПЛАН НА ПЕЧАЛБИТЕ";
    this.eps = "Звукът не може да бъде зареден!";
    this.rch = "Липсват ресурси!";
    this.hdz = "Игра без звук?";
    this.ooh = "Завъртете устройството си в портретен режим, за да играете като на истинска слот машина!";
    this.pme = "Настройте интерфейса на играта според своите нужди!";
    this.zps = "ЗА ПОВЕЧЕ ИНФОРМАЦИЯ ВИЖТЕ ПРАВИЛАТА НА ИГРАТА.";
    this.hqx = "ИЗЧИСТВАНЕ";
    this.lpr = "НАСТРОЙКИ НА АВТОМАТИЧНОТО СТАРТИРАНЕ";
    this.mza = "Брой игри:";
    this.jjs = "Спри автоматичния старт";
    this.cuj = "Кредит по-малък от:";
    this.acg = "Кредит по-висок от:";
    this.tdh = "Спечели повече от:";
    this.rpc = "Автоматичното стартиране ще бъде спряно в началото на бонуса.";
    this.mdd = "Сподели във Facebook";
    this.ok = "OK";
    this.bzs = "Reality Check";
    this.zxo = "Заявили сте проверка на реалността.";
    this.bvh = "Натиснете ИСТОРИЯ, за да видите хронологията си на игра.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.guo = "ТЕОРЕТИЧНАТА ВЪЗВРАЩАЕМОСТ НА ИГРАЧА ЗА ТАЗИ ИГРА Е XY."
}
com.prototype = new nyc;

function ros() {
    this.fne = "მინიმალური ფსონი არის";
    this.xdj = "მაქსიმალური ფსონი";
    this.jux = "მინიმალური ფსონი";
    this.yxu = "მაქსიმალური ფსონი";
    this.hbp = "ფსონი";
    this.start = "დაწყება";
    this.ehc = "დახმარება";
    this.wvo = "გადახდის მრიცხველი";
    this.bej = "მენიუ";
    this.ybv = "მეტი|თამაშები";
    this.lwi = "გაჩერება";
    this.nko = "კრედიტი";
    this.mzj = "თამაში დასრულებულია";
    this.fxo = "გამარჯვებული!";
    this.pxz = "გისურვებთ წარმატებას!";
    this.win = "მოგება";
    this.vwa = "ბოლო მოგება";
    this.urn = "შეგროვება";
    this.gap = "შეგროვება";
    this.odb = "აზარტი";
    this.hwo = "ავტო|დაწყება";
    this.wjz = "ნახევარი";
    this.dwn = "გამოსვლა";
    this.kft = "თამაშის დაწყება";
    this.hwd = "აირჩიეთ ფსონი";
    this.lbj = "ნახევარი";
    this.ret = "თამაშზე|დაბრუნება";
    this.unr = "მთლიანი მოგება";
    this.sld = "გაფრთხილება";
    this.gia = "მთლიანი";
    this.ioj = "გთხოვთ, დაელოდოთ ...";
    this.mtm = "მეტი თამაშები";
    this.bvn = "ტურბო";
    this.ovv = "გაუმართაობის შემთხვევაში ყველა მოგება და ნათამაშები წაიშლება.";
    this.tnq = "გაგრძელება";
    this.hlz = "ავტო დაწყება";
    this.zms = "გადახდის მრიცხველი";
    this.jns = "აზარტი";
    this.left = "მარცხნივ";
    this.bnt = "მარჯვნივ";
    this.uhy = "ავტომატურად";
    this.ok = "კი";
    this.hqx = "გაუქმება";
    this.ren = "აზარტი";
    this.lsp = "ნახევარი";
    this.bjq = "თამაშის წესები";
    this.qtu = "თამაშის წესები";
    this.xav = "BONUS!";
    this.qrl = "ბონუს";
    this.phn = "დააჭირეთ ნებისმიერ ღილაკს რომ გააგრძელოთ";
    this.vnx = "არა საკმარისი კრედიტი.";
    this.sim = "შეეხეთ ეკრანს რომ გააგრძელოთ";
    this.sdc = "ჩატვირთვის  ...";
    this.lna = "ჩატვირთვის  ისტორია  ...";
    this.wan = "საკომუნიკაციო შეცდომა";
    this.rlp = "თქვენ ერთ ერთი ლიმიტი ამოწურეთ!";
    this.ftg = "თქვენ უფასო თამაშების მაქსიმალური რაოდენობის ლიმიტი უკვე ამოწურეთ!";
    this.fgf = "თამაში დასრულდება";
    this.tao = "თამაში გადაიტვირთება";
    this.qhj = "მოგებულია";
    this.vrn = "wins";
    this.tfn = "V A L U E";
    this.error = "შეცდომა";
    this.yns = "უფასო თამაში";
    this.qvv = "თამაშის  ნომერი";
    this.mkg = "სათამაშო დრო";
    this.sai = "ბოლო ";
    this.prp = "თამაშები";
    this.jsr = "დეპოზიტი";
    this.audio = "ხმა";
    this.oom = "მუსიკა";
    this.jcg = "სრული ეკრანი";
    this.kow = "სრული ეკრანი";
    this.language = "ენის";
    this.jbk = "მომავალში აღარ ჩვენება";
    this.eps = "ხმის ჩატვირთვა ვერ ხერხდება!";
    this.rch = "არასაკმარისი რესურსები!";
    this.hdz = "გინდათ ხმის გარეშე ითამაშოთ?";
    this.nrk = "გთხოვთ მოაბრუნოთ თქვენი მოწყობილობა!";
    this.qqk = "გთხოვთ, გამორთოთ პირადი რეჟიმი თქვენს ბრაუზერში რომ შეძლოთ თამაში.";
    this.mrp = "ეს თამაში ოპტიმიზირებულია Google Chrome-ისათვის.";
    this.bwu = "გთხოვთ გამოიყენოთ";
    this.wmw = "-ის მიმდინარე ვერსია";
    this.rgs = "სამწუხაროდ, ამ ბრაუზერზე თამაში სრულად ვერ ხერხდება.";
    this.gqm = "ამ თამაშის თამაში უფასოდ შეუძლებელია!";
    this.ooh = "ჩართეთ თქვენი მოწყობილობა პორტრეტის რეჟიმზე რომ ითამაშოთ ისე თითქოს რეალურ სლოტ მოწყობილობაზე თამაშობდეთ!";
    this.pme = "მოარგეთ თამაშის ინტერფეისი თქვენს საჭიროებებს!";
    this.uhd = "აირჩიეთ სწორი ფერი რომ გააორმაგოთ მოგება";
    this.oqf = "აირჩიეთ კარტის სწორი ფერი რომ გააოთხმაგოთ მოგება";
    this.vdh = "დადეთ ფსონი რომ გაზარდოთ მოგების შანსი";
    this.mje = "მთლიანი თამაშები";
    this.jmq = "ფსონი მთლიანად";
    this.odz = "მთლიანი მოგება";
    this.zqx = "მთლიანი სათამაშო დრო";
    this.sae = "მე გავეცანი ამ გზავნილს.";
    this.dql = "თამაშის|დამთავრება";
    this.uap = "მოვლენების ჩანაწერი";
    this.jmy = "ნათამაშები თამაშები არ არის.";
    this.state = "მდგომარეობა";
    this.obw = "ძირითადი თამაში";
    this.fsm = "ავტომატურად შეგროვება";
    this.ecm = "აღებულ იქნა";
    this.tda = "პირველი დარიგება";
    this.ldm = "მეორე დარიგება";
    this.jca = "მესამე დარიგება";
    this.lpr = "ავტოგამშვების პარამეტრები";
    this.mza = "თამაშების რაოდენობა:";
    this.jjs = "შეაჩერეთ ავტოგამშვები";
    this.cuj = "კრედიტი უფრო დაბალი ვიდრე:";
    this.acg = "კრედიტი უფრო მაღალი ვიდრე:";
    this.tdh = "მოიგეთ უფრო მეტი ვიდრე:";
    this.rpc = "ავტოგამშვები შეჩერდება ბონუსის დასაწყისში.";
    this.mdd = "გააზიარეთ ფეისბუქზე";
    this.xho = "სტატისტიკა";
    this.of = "/";
    this.dvz = "Bonus თამაში";
    this.lkl = "ბონუსი";
    this.gzz = "ინფორმაცია";
    this.zzw = "პარამეტრ.";
    this.kdq = "ხელახლა დატრიალების";
    this.zps = "მეტი ინფორმაციისათვის, იხილეთ თამაშის წესები.";
    this.bzs = "რეალობის შემოწმება";
    this.zxo = "თქვენ მოითხოვეთ რეალობის შემოწმება.";
    this.bvh = "თქვენი თამაშის ისტორიის სანახავად დააჭირეთ მოვლენების ჩანაწერი-ს.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.guo = "თეორიული დაბრუნება მოთამაშეზე ამ თამაშში არის XY."
}
ros.prototype = new nyc;

function ztl() {
    this.fne = "A MINIMUM TÉT";
    this.xdj = "MAXIMUM TÉT";
    this.jux = "MIN. TÉT";
    this.yxu = "MAX. TÉT";
    this.hbp = "TÉT";
    this.start = "START";
    this.ehc = "SÚGÓ";
    this.wvo = "SÚGÓ";
    this.bej = "MENÜ";
    this.ybv = "MENÜ";
    this.lwi = "STOP";
    this.nko = "HITEL";
    this.mzj = "A JÁTÉKNAK VÉGE";
    this.fxo = "NYEREMÉNY!";
    this.pxz = "SOK SZERENCSÉT!";
    this.win = "NYEREMÉNY";
    this.vwa = "UTOLSÓ NYER.";
    this.urn = "FELÍR";
    this.gap = "FELÍR";
    this.odb = "SZORZÁS";
    this.hwo = "AUTO|START";
    this.wjz = "FELEZÉS";
    this.dwn = "KILÉPÉS";
    this.kft = "START";
    this.hwd = "VÁLASSZON TÉTET";
    this.lbj = "FELEZÉS";
    this.ret = "VISSZA A|JÁTÉKHOZ";
    this.unr = "Összes Nyeremény";
    this.sld = "Figyelmeztetés";
    this.gia = "ÖSSZES";
    this.ioj = "KÉREM VÁRJON ...";
    this.mtm = "Menü";
    this.bvn = "SEBESSÉG";
    this.ovv = "A MEGHIBÁSODÁS ÉRVÉNYTELENÍT MINDEN JÁTÉKOT ÉS KIFIZETÉST.";
    this.tnq = "T O V Á B B";
    this.hlz = "AUTOSTART";
    this.zms = "SÚGÓ";
    this.jns = "SZORZÁS";
    this.left = "BAL";
    this.bnt = "JOBB";
    this.ok = "OK";
    this.hqx = "MÉGSEM";
    this.ren = "Szorzás";
    this.lsp = "Felezés";
    this.bjq = "JÁTÉKSZABÁLYOK";
    this.qtu = "JÁTÉKSZABÁLYOK";
    this.xav = "Bónusz!";
    this.qrl = "BÓNUSZ";
    this.phn = "A FOLYTATÁSHOZ NYOMJON MEG EGY GOMBOT";
    this.vnx = "NINCS ELÉG HITEL";
    this.tfn = "V A L U E";
    this.vrn = "nyeremények";
    this.of = "/";
    this.sim = "ÉRINTSE MEG A KÉPERNYŐT A FOLYTATÁSHOZ";
    this.sdc = "BETÖLTÉSE ...";
    this.lna = "JÁTÉK TÖRTÉNET BETÖLTÉSE ...";
    this.wan = "Kommunikációs hiba";
    this.rlp = "Elérte az egyik limitet!";
    this.ftg = "Elérte a szabad játékok maximum számát!";
    this.fgf = "A játék megállítva";
    this.tao = "Játék újraindul";
    this.qhj = "NYERT";
    this.error = "HIBA";
    this.yns = "FREEPLAY";
    this.uhy = "AUTO";
    this.qvv = "JÁTÉK ID";
    this.mkg = "Játék Idő";
    this.sai = "utolsó";
    this.prp = "játék";
    this.jsr = "HITEL";
    this.audio = "HANG";
    this.oom = "ZENE";
    this.jcg = "TELJES KÉPERNYŐ";
    this.kow = "TELJES KÉPERNYŐ";
    this.language = "NYELV";
    this.jbk = "Ne mutassa mégegyszer";
    this.eps = "A hangot nem lehet betölteni!";
    this.rch = "Források hiányoznak!";
    this.hdz = "Játék hang nélkül?";
    this.zzw = "BEÁLLÍTÁS";
    this.nrk = "Kérjük fordítsa el a készüléket!";
    this.gzz = "INFÓ";
    this.qqk = "A játékhoz kérem tiltsa le a Privát Böngészés módot a böngészőjében.";
    this.mrp = "Ez a játék Google Chrome böngészőre van optimalizálva.";
    this.bwu = "Kérjük használja a(z)";
    this.wmw = " legújabb verzióját!";
    this.rgs = "Sajnos ez a böngésző nem teljesen támogatott.";
    this.gqm = "Ez a játék nem indítható FreePlay módban!";
    this.ooh = "Fordítsa a készülékét álló módba, hogy úgy játsszon, mint egy igazi nyerőgépen!";
    this.pme = "Állítsa be a játék felületét az Ön igényeinek megfelelően!";
    this.uhd = "VÁLASSZA KI A MEGFELELŐ SZÍNT, HOGY MEGDUPLÁZZA A NYEREMÉNYT";
    this.oqf = "VÁLASSZA KI A MEGFELELŐ KÁRTYASZÍNT, HOGY MEGNÉGYSZEREZZE A NYEREMÉNYT";
    this.vdh = "SZORZÁS EGY LEHETŐSÉG, HOGY NÖVELJE A NYEREMÉNYT";
    this.xho = "Statisztika";
    this.mje = "Összes Játék";
    this.jmq = "Összes Tét";
    this.odz = "Összes Nyeremény";
    this.zqx = "Összes Játék Idő";
    this.sae = "Elolvastam az üzenetet.";
    this.dql = "KILÉPÉS";
    this.uap = "Előzmények";
    this.jmy = "Nincsenek játékok.";
    this.state = "STÁTUSZ";
    this.obw = "Fő Játék";
    this.fsm = "Autom. Felírás";
    this.ecm = "Felírva";
    this.dvz = "Bónusz játék";
    this.kdq = "Respin";
    this.lkl = "Bónusz";
    this.tda = "Első Leosztás";
    this.ldm = "Második Leosztás";
    this.jca = "Harmadik Leosztás";
    this.lpr = "AUTOSTART BEÁLLÍTÁS";
    this.mza = "Játékok száma:";
    this.jjs = "Stop autostart";
    this.cuj = "A hitel kevesebb, mint:";
    this.acg = "A hitel több, mint:";
    this.tdh = "A nyeremény több, mint:";
    this.rpc = "Az AUTOSTART funkció kikapcsolódik a bónusz játék kezdetén.";
    this.mdd = "Megosztás a Facebook-on";
    this.zps = "KIEGÉSZÍTŐ TÁJÉKOZTATÁST A JÁTÉKSZABÁLYOKBAN TALÁL.";
    this.bzs = "Reality Check";
    this.zxo = "Ön egy valóság-ellenőrzést kért.";
    this.bvh = "Nyomja meg az ELŐZMÉNYEK lehetőséget, hogy megtekintse a játéka előzményeit.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.guo = "A JÁTÉKOSNAK AZ ELVI KIFIZETÉS ÖSSZEGE EBBEN A JÁTÉKBAN XY."
}
ztl.prototype = new nyc;

function vda() {
    this.fne = "MIZA MINIMĂ ESTE";
    this.xdj = "MIZA MAXIMĂ";
    this.jux = "MIZA MIN.";
    this.yxu = "MIZA MAX.";
    this.hbp = "MIZĂ";
    this.start = "START";
    this.ehc = "AJUTOR";
    this.wvo = "LISTA|CÂŞTIGURI";
    this.bej = "MENIU";
    this.ybv = "MENIUL|JOCULUI";
    this.lwi = "STOP";
    this.nko = "CREDIT";
    this.mzj = "SFÂRŞIT JOCUL";
    this.fxo = "CÂŞTIGĂTOR!";
    this.pxz = "MULT NOROC!";
    this.win = "CÂŞTIG";
    this.vwa = "ULTIMUL CÂŞTIG";
    this.urn = "COLECTA";
    this.gap = "COLECTA";
    this.odb = "JOC";
    this.hwo = "AUTO|START";
    this.wjz = "COLECTARE|1/2";
    this.dwn = "IEŞIRE";
    this.kft = "APĂSAŢI START";
    this.hwd = "ALEGEŢI MIZA";
    this.lbj = "COLECTARE|1/2";
    this.ret = "ÎNAPOI|LA JOC";
    this.unr = "Câştig total";
    this.sld = "Avertizare";
    this.gia = "TOTAL";
    this.ioj = "AŞTEPTAŢI VĂ ROG ...";
    this.mtm = "Meniul Jocului";
    this.bvn = "VITEZĂ";
    this.ovv = "FĂRĂ GARANŢIE LA DEFECTAREA APARATULUI.";
    this.tnq = "C O N T I N U A R E";
    this.hlz = "AUTOSTART";
    this.zms = "LISTA CÂŞTIGURI";
    this.jns = "JOC";
    this.left = "STÂNGA";
    this.bnt = "DREAPTA";
    this.ok = "OK";
    this.hqx = "ÎNTRERUPERE";
    this.ren = "Joc";
    this.lsp = "Colectare 1/2";
    this.bjq = "REGULILE JOCULUI";
    this.qtu = "REGULILE|JOCULUI";
    this.xav = "Bonus!";
    this.qrl = "BONUS";
    this.phn = "PENTRU CONTINUARE APASĂ PE UN BUTON";
    this.vnx = "CREDIT INSUFICIENT.";
    this.vrn = "câştigă";
    this.tfn = "V A L U E";
    this.of = "DIN";
    this.sim = "ATINGEȚI ECRANUL PENTRU A CONTINUA";
    this.sdc = "ÎNCARCĂ ...";
    this.lna = "ÎNCARCĂ ISTORIC ...";
    this.wan = "Eroare de comunicare";
    this.rlp = "Aţi atins una dintre limite!";
    this.ftg = "Aţi atins numărul maxim de jocuri gratis!";
    this.fgf = "Jocul se încheie";
    this.tao = "Jocul se restartează";
    this.qhj = "CÂŞTIGAT";
    this.error = "EROARE";
    this.yns = "FREEPLAY";
    this.uhy = "AUTO";
    this.qvv = "ID JOC";
    this.mkg = "TIMP DE JOC";
    this.sai = "ultimele";
    this.prp = "jocuri";
    this.jsr = "CREDIT";
    this.audio = "AUDIO";
    this.oom = "MUZICĂ";
    this.jcg = "ECRAN COMPLET";
    this.kow = "ECRAN|COMPLET";
    this.language = "LIMBA";
    this.jbk = "Nu reafișați";
    this.eps = "Sunetele nu pot fi încărcate!";
    this.rch = "Lipsesc resurse!";
    this.hdz = "Jucaţi fără sunet?";
    this.zzw = "SETĂRI";
    this.nrk = "Vă rugăm opriţi aparatul!";
    this.gzz = "INFO";
    this.qqk = "Vă rugăm dezactivaţi PRIVATE MODE în browser-ul dvs. pentru a juca.";
    this.mrp = "Acest joc este optimizat pentru Google Chrome.";
    this.lun = "Vă rugăm utilizaţi versiunea actuală";
    this.rgs = "Din păcate acest browser nu este sprijinit complet.";
    this.gqm = "Acest joc nu poate fi pornit în modul freeplay!";
    this.ooh = "Treceţi aparatul dvs. în modul portret, pentru a juca ca la o maşină automată!";
    this.pme = "Ajustează interfaţa de joc nevoilor dvs!";
    this.uhd = "SELECTEAZĂ CULOAREA CORECTĂ PENTRU DUBLAREA CÂŞTIGULUI";
    this.oqf = "SELECTEAZĂ CULOAREA CORECTĂ A CĂRŢII PENTRU A CÂŞTIGA DE 4 ORI";
    this.vdh = "JOACĂ PENTRU ŞANSA DE A CREŞTE PROFITUL";
    this.xho = "Statistică";
    this.mje = "Număr jocuri";
    this.jmq = "Pariuri totale";
    this.odz = "Câştig total";
    this.zqx = "Timp total de joc";
    this.sae = "Am citit mesajul.";
    this.dql = "ÎNCHEIERE|JOC";
    this.uap = "ISTORIC";
    this.jmy = "Nu există jocuri.";
    this.state = "STATUT";
    this.obw = "Joc principal";
    this.fsm = "Auto colectare";
    this.ecm = "Colectat";
    this.dvz = "Bonusspins";
    this.kdq = "Respin";
    this.lkl = "Bonus";
    this.tda = "Primul Deal";
    this.ldm = "Al doilea deal";
    this.jca = "Al treilea deal";
    this.lpr = "SETĂRI AUTOSTART";
    this.mza = "Numărul jocurilor:";
    this.jjs = "Oprire autostart";
    this.cuj = "Credit sub:";
    this.acg = "Credit peste:";
    this.tdh = "Câștig peste:";
    this.rpc = "Autostart se va opti la începerea bonusului.";
    this.mdd = "Distribuie Facebook";
    this.zps = "PENTRU INFORMAŢII SUPLIMENTARE, VEZI REGULILE JOCULUI.";
    this.bzs = "Reality Check";
    this.zxo = "Ai cerut un Reality Check.";
    this.bvh = "Apasă ISTORIC pentru a vedea istoricul tău de joc.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.guo = "DECONTAREA TEORETICĂ CĂTRE JUCĂTORI A ACESTUI JOC ESTE DE XY."
}
vda.prototype = new nyc;

function hys() {
    this.fne = "MÍNIMA APOSTA É";
    this.xdj = "MÁX. APOSTA";
    this.jux = "MÍN. APOSTA";
    this.yxu = "MÁX. APOSTA";
    this.hbp = "APOSTA";
    this.start = "PARTIDA";
    this.ehc = "AJUDA";
    this.wvo = "ESQUEMA|DE PAGOS";
    this.bej = "MENU";
    this.ybv = "SELEÇÃO|DE JOGOS";
    this.lwi = "PARADA";
    this.nko = "CRÉDITO";
    this.mzj = "FIM DO JOGO";
    this.fxo = "VENCEDOR!";
    this.pxz = "BOA SORTE!";
    this.win = "GANHO";
    this.vwa = "ULTIMO GANHO";
    this.urn = "COLETAR";
    this.gap = "COLETAR";
    this.odb = "JOGADA";
    this.hwo = "AUTO|PARTIDA";
    this.wjz = "METADE";
    this.dwn = "SAÍDA";
    this.kft = "PREMIR PARTIDA";
    this.hwd = "SELECIONAR APOSTA";
    this.lbj = "METADE";
    this.ret = "VOLTAR|PARA|O JOGO";
    this.unr = "Ganho total";
    this.sld = "Aviso";
    this.gia = "TOTAL";
    this.ioj = "AGUARDE POR FAVOR ...";
    this.mtm = "Seleção de jogos";
    this.bvn = "VELOCIDADE";
    this.ovv = "NÃO SE ASSUME RESPONSABILIDADE POR AVARIAS NA MÁQUINA.";
    this.tnq = "C O N T I N U A R";
    this.hlz = "AUTOPARTIDA";
    this.zms = "ESQUEMA DE PAGOS";
    this.jns = "JOGADA";
    this.left = "ESQUERDA";
    this.bnt = "DIREITA";
    this.ok = "OK";
    this.hqx = "CANCELAR";
    this.ren = "Jogada";
    this.lsp = "Metade";
    this.bjq = "REGRAS DO JOGO";
    this.qtu = "REGRAS|DO JOGO";
    this.xav = "Bonus!";
    this.qrl = "BONUS";
    this.phn = "PREMIR QUALQUER TECLA PARA CONTINUAR";
    this.vnx = "NÃO HÁ CRÉDITO SUFICIENTE!";
    this.vrn = "ganha";
    this.tfn = "V A L U E";
    this.of = "DE";
    this.sim = "TOCAR NA TELA PARA CONTINUAR";
    this.sdc = "CARREGANDO ...";
    this.lna = "CARREGANDO HISTÓRICO ...";
    this.wan = "Erro de comunicação";
    this.rlp = "Alcançou um dos limities!";
    this.ftg = "Alcançou a quantidade máxima de jogos livres!";
    this.fgf = "O jogo será encerrado";
    this.tao = "O jogo será reiniciado";
    this.qhj = "GANHOU";
    this.error = "ERRO";
    this.yns = "FREEPLAY";
    this.uhy = "AUTO";
    this.qvv = "ID JOGO";
    this.mkg = "Playing Time";
    this.sai = "Últimos";
    this.prp = "jogos";
    this.jsr = "DEPOSIT";
    this.audio = "AUDIO";
    this.oom = "MUSIC";
    this.jcg = "TELA CHEIA";
    this.kow = "TELA|CHEIA";
    this.language = "IDIOMA";
    this.jbk = "Não exibir novamente";
    this.eps = "Sounds não podem ser carregados!";
    this.rch = "Faltam recursos!";
    this.hdz = "Jogar sem som?";
    this.zzw = "AJUSTES";
    this.nrk = "Favor girar o seu aparelho!";
    this.gzz = "INFORMAÇÃO";
    this.qqk = "Favor desativar o MODO PRIVADO no browser para iniciar o jogo.";
    this.mrp = "Este jogo é otimizado por Google Chrome.";
    this.lun = "Favor usar a versão atual de";
    this.rgs = "Infelizmente este browser não é completamente suportado.";
    this.gqm = "Este jogo não pode ser iniciado no modo de jogo livre!";
    this.ooh = "Girar o seu aparelho para o modo de portrait, para jogar como em uma máquina real!";
    this.pme = "Adapte a interface do jogo às suas necessidades!";
    this.uhd = "ESCOLHA A COR CERTA PARA DOBRAR O GANHO";
    this.oqf = "ESCOLHA O NAIPE CERTO PARA QUADRUPLICAR O GANHO";
    this.vdh = "GAMBLE PARA A CHANCE DE AUMENTAR O GANHO";
    this.xho = "Estatísticas";
    this.mje = "Número de jogos";
    this.jmq = "Aposta total";
    this.odz = "Ganho total";
    this.zqx = "Tempo total do jogo";
    this.sae = "Eu lí esta mensagem.";
    this.dql = "ENCERRAR|JOGO";
    this.uap = "HISTÓRICO";
    this.jmy = "Ainda não existem jogos.";
    this.state = "ESTADO";
    this.obw = "Jogo principal";
    this.fsm = "Coletado automaticamente";
    this.ecm = "Coletado";
    this.dvz = "Bonusspins";
    this.kdq = "Respin";
    this.lkl = "Bonus";
    this.tda = "Primeiro Deal";
    this.ldm = "Segundo Deal";
    this.jca = "Terceiro Deal";
    this.lpr = "AJUSTES AUTOPARTIDA";
    this.mza = "Número de jogos:";
    this.jjs = "Parar autopartida";
    this.cuj = "Crédito menor do que:";
    this.acg = "Crédito maior do que:";
    this.tdh = "Ganho maior do que:";
    this.rpc = "O autopartida será parado no início do bonus.";
    this.mdd = "Participar no Facebook";
    this.zps = "PARA MAIS INFORMAÇÕES, CONSULTE AS REGRAS DO JOGO.";
    this.bzs = "Reality Check";
    this.zxo = "Solicitaste um Reality Check.";
    this.bvh = "Pressione HISTÓRICO para ver seu histórico de jogos.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.guo = "O PAGAMENTO TEÓRICO AO JOGADOR PARA ESTE JOGO É DE XY."
}
hys.prototype = new nyc;

function jmz() {
    this.fne = "LA MISE MINIMALE EST DE";
    this.xdj = "MISE MAX.";
    this.jux = "MISE MINI";
    this.yxu = "MISE MAX.";
    this.hbp = "MISE";
    this.start = "DEPART";
    this.ehc = "AIDE";
    this.wvo = "TABLEAU|DES PAIEMENTS";
    this.bej = "MENU";
    this.ybv = "PLUS|DE JEUX";
    this.lwi = "ARRÊTEZ";
    this.nko = "CRÉDIT";
    this.mzj = "FIN DU JEU";
    this.fxo = "GAGNANT!";
    this.pxz = "BONNE CHANCE!";
    this.win = "GAIN";
    this.vwa = "DERNIER GAIN";
    this.urn = "ENCAISSER";
    this.gap = "ENCAISSER";
    this.odb = "DOUBLER";
    this.hwo = "AUTO|LANCER";
    this.wjz = "ENCAISSER|MOITIÉ";
    this.dwn = "SORTIE";
    this.kft = "APPUYEZ SUR START";
    this.hwd = "CHOISIR LA MISE";
    this.lbj = "ENCAISSER|MOITIÉ";
    this.ret = "RETOUR|AU JEU";
    this.unr = "Gain total";
    this.sld = "Avertissement";
    this.gia = "TOTALE";
    this.ioj = "ATTENDEZ S'IL VOUS PLAÎT ...";
    this.mtm = "Plus de jeux";
    this.bvn = "VITESSE";
    this.ovv = "Á L'OCCASION D´ERREUR D´APPAREIL DÉCLINER TOUTE RESPONSABILITÉ.";
    this.tnq = "C O N T I N U E R";
    this.hlz = "AUTO LANCER";
    this.zms = "TABLEAU DES PAIEMENTS";
    this.jns = "DOUBLER";
    this.left = "GAUCHE";
    this.bnt = "DROITE";
    this.ok = "OK";
    this.hqx = "ANNULER";
    this.ren = "Doubler";
    this.lsp = "Encaisser moitié";
    this.bjq = "RÈGLES DU JEU";
    this.qtu = "RÈGLES DU JEU";
    this.xav = "Bonus!";
    this.qrl = "BONUS";
    this.phn = "APPUYEZ SUR UNE TOUCHE POUR CONTINUER";
    this.vnx = "PAS ASSEZ DE CRÉDIT";
    this.vrn = "gagne";
    this.tfn = "V A L U E";
    this.of = "SUR";
    this.sim = "EFFLEURE L'ÉCRAN POUR CONTINUER";
    this.sdc = "CHARGEMENT EN COURS ...";
    this.lna = "CHARGEMENT DE L'HISTORIQUE EN COURS ...";
    this.wan = "Erreur de communication";
    this.rlp = "Vous avez atteint une des limites!";
    this.ftg = "Vous avez atteint le nombre maximum des jeux gratuits!";
    this.fgf = "Le jeu sera terminé";
    this.tao = "Le jeu sera démarré de nouveau";
    this.qhj = "GAGNÉ";
    this.error = "ERREUR";
    this.yns = "JEU GRATUIT";
    this.uhy = "AUTO";
    this.qvv = "ID DU JEU";
    this.mkg = "TEMPS DE JEU";
    this.sai = "Les";
    this.prp = "derniers jeux";
    this.jsr = "AVOIR";
    this.audio = "AUDIO";
    this.oom = "MUSIQUE";
    this.jcg = "PLEIN ÉCRAN";
    this.kow = "PLEIN|ÉCRAN";
    this.language = "LANGUE";
    this.jbk = "Ne pas afficher encore une fois";
    this.eps = "Impossible de charger des sounds!";
    this.rch = "Manque de ressources!";
    this.hdz = "Jouer sans son?";
    this.zzw = "CONFIGUR.";
    this.nrk = "Merci de tourner votre matériel!";
    this.gzz = "INFO";
    this.qqk = "Veuillez désactiver le MODE PRIVÉ dans le navigateur afin de démarrer le jeu.";
    this.mrp = "Ce jeu est optimisé pour Google Chrome.";
    this.lun = "Veuilllez utiliser la version à jour de";
    this.rgs = "Malheureusement, ce browser n'est intégralement supporté.";
    this.gqm = "Impossible de démarrer ce jeu au mode jeu gratuit!";
    this.ooh = "Tournez votre matériel dans le mode portrait pour jouer comme sur une véritable machine!";
    this.pme = "Adapte l'interface de jeu à tes besoins!";
    this.uhd = "CHOISIS LA BONNE COULEUR AFIN DE DOUBLER LE GAIN";
    this.oqf = "CHOISIS LA BONNE COULEUR DE LA CARTE AFIN DE QUADRUPLER LE GAIN";
    this.vdh = "GAMBLE POUR LA CHANCE DE MULTIPLIER LE GAIN";
    this.xho = "Statistiques";
    this.mje = "Nombre des jeux";
    this.jmq = "Total des mises";
    this.odz = "Gain total";
    this.zqx = "Temps total du jeu";
    this.sae = "J'ai lu le message";
    this.dql = "TERMINER|LE JEU";
    this.uap = "Historique";
    this.jmy = "Il n'y a pas encore de jeux joués.";
    this.state = "ÉTAT";
    this.obw = "Jeu principal";
    this.fsm = "Pris automatiquement";
    this.ecm = "Pris";
    this.dvz = "Bonusspins";
    this.kdq = "Respin";
    this.lkl = "Bonus";
    this.tda = "Premier Deal";
    this.ldm = "Deuxième Deal";
    this.jca = "Troisième Deal";
    this.lpr = "AUTOSTART CONFIGURATION";
    this.mza = "Nombre des jeux:";
    this.jjs = "Arrêter autostart";
    this.cuj = "Crédit inférieur à:";
    this.acg = "Crédit supérieur à:";
    this.tdh = "Gain supérieur à:";
    this.rpc = "L'autostart est arrêté au début du bonus.";
    this.mdd = "Partager sur Facebook";
    this.zps = "POUR PLUS D'INFORMATIONS, CONSULTEZ LES RÈGLES DU JEU.";
    this.bzs = "Reality Check";
    this.zxo = "Tu as demandé un Reality Check.";
    this.bvh = "Appuie sur HISTORIQUE pour afficher ton historique de jeu.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.guo = "LE VERSEMENT THÉORIQUE AU JOUEUR POUR CE JEU S'ÉLÈVE À XY."
}
jmz.prototype = new nyc;

function apu() {
    this.fne = "NAJMANJI ULOG JE";
    this.xdj = "MAX ULOG";
    this.jux = "MIN. ULOG";
    this.yxu = "MAKS. ULOG";
    this.hbp = "ULOG";
    this.start = "START";
    this.ehc = "POMOĆ";
    this.wvo = "LISTA DOBITAKA";
    this.bej = "IZBORNIK";
    this.ybv = "VIŠE|IGARA";
    this.lwi = "STOP";
    this.nko = "KREDIT";
    this.mzj = "KRAJ IGRE";
    this.fxo = "DOBITAK!";
    this.pxz = "SRETNO!";
    this.win = "DOBITAK";
    this.vwa = "ZADNJI DOBITAK";
    this.urn = "UPIŠI";
    this.gap = "UPIŠI";
    this.odb = "DUPLANJE";
    this.hwo = "AUTO|START";
    this.wjz = "UZMI|1/2";
    this.dwn = "IZLAZ";
    this.kft = "PRETISNITE START";
    this.hwd = "BIRAJTE ULOG";
    this.lbj = "UZMI|1/2";
    this.ret = "POVRATAK|U IGRU";
    this.unr = "Ukubni dobitci";
    this.sld = "Upozorenje";
    this.gia = "UKUBNI";
    this.ioj = "MOLIMO PRIČEKAJTE ...";
    this.mtm = "Više igara";
    this.bvn = "BRZINA";
    this.ovv = "Kod kvara na uređaju nema jamstva.";
    this.tnq = "D A L J E";
    this.hlz = "AUTOSTART";
    this.zms = "LISTA DOBITAKA";
    this.jns = "DUPLANJE";
    this.left = "LIJEVA";
    this.bnt = "DESNA";
    this.ok = "OK";
    this.hqx = "PREKID";
    this.ren = "Duplanje";
    this.lsp = "Uzmi 1/2";
    this.bjq = "PRAVILA IGRE";
    this.qtu = "PRAVILA IGRE";
    this.xav = "Bonus!";
    this.qrl = "BONUS";
    this.phn = "ZA NASTAVITI PRITISNITE BILO KOJU TIPKU";
    this.vnx = "NEMATE DOVOLJNO KREDITA.";
    this.vrn = "dobici";
    this.tfn = "V A L U E";
    this.of = "OD";
    this.sim = "ZA NASTAVAK DODIRNITE ZASLON";
    this.sdc = "UČITAVANJA ...";
    this.lna = "POVIJEST UČITAVANJA ...";
    this.wan = "Komunikacijska pogreška";
    this.rlp = "Dostigli ste jednu od graničnih vrijednosti!";
    this.ftg = "Dostigli ste maksimum besplatnih igara!";
    this.fgf = "Igra se zatvara";
    this.tao = "Igra se iznova učitava";
    this.qhj = "OSVOJENO";
    this.error = "POGREŠKA";
    this.yns = "FREEPLAY";
    this.uhy = "AUTO";
    this.qvv = "ID IGRE";
    this.mkg = "Vrijeme igre";
    this.sai = "posljednjih";
    this.prp = "igara";
    this.jsr = "DEPOZIT";
    this.audio = "ZVUKA";
    this.oom = "GLAZBA";
    this.jcg = "PUN ZASLON";
    this.kow = "PUN ZASLON";
    this.language = "JEZIKA";
    this.jbk = "Ne prikazuj ponovo";
    this.eps = "Zvukovi se ne mogu učitati!";
    this.rch = "Nedostaju resursi!";
    this.hdz = "Želite li igrati uz zvuk?";
    this.zzw = "POSTAVKE";
    this.nrk = "Uključite svoj uređaj!";
    this.gzz = "INFORMACIJE";
    this.qqk = "Molimo deaktivirajte PRIVATNI MOD u Vašem pregledniku kako biste mogli igrati";
    this.mrp = "Ova igra je optimizirana za Google Chrome.";
    this.lun = "Molimo koristite se trenutnom inačicom";
    this.rgs = "Nažalost ovaj preglednik nije u potpunosti podržan";
    this.gqm = "Ova se igra ne može pokrenuti u režimu slobodne igre!";
    this.ooh = "Podesite svoj uređaj na portretni format kako biste igrali kao na pravoma automatu!";
    this.pme = "Prilagodite sučelje igre svojim potrebama!";
    this.uhd = "ODABERI PRAVU BOJU I TIME UDVOSTRUČI DOBITAK";
    this.oqf = "ODABERI PRAVI ZNAK I TIME UČETVEROSTRUČI DOBITAK";
    this.vdh = "KOCKANJEM OSVOJI ŠANSU ZA POVEĆANJE DOBITKA";
    this.xho = "Statistike";
    this.mje = "Ukupno igara";
    this.jmq = "Ukupni ulog";
    this.odz = "Ukupno dobitaka";
    this.zqx = "Ukupno vrijeme igre";
    this.sae = "Pročitao sam ovu poruku";
    this.dql = "IZLAZ|IZ IGRE";
    this.uap = "Povijest";
    this.jmy = "Nema odigranih igara.";
    this.state = "STANJE";
    this.obw = "Glavna igra";
    this.fsm = "Auto. pokupljeno";
    this.ecm = "Pokupljeno";
    this.dvz = "Besplatne igre";
    this.kdq = "Dodatne okretaje";
    this.lkl = "Bonus";
    this.tda = "Prvo dijeljenje";
    this.ldm = "Drugo dijeljenje";
    this.jca = "Treće dijeljenje";
    this.lpr = "POSTAVKE AUTOMATSKE IGRE";
    this.mza = "Ukupno igara:";
    this.jjs = "Zaustavljanje automatske igre";
    this.cuj = "Kredit manji od:";
    this.acg = "Kredit veći od:";
    this.tdh = "Dobitak veći od:";
    this.rpc = "Automatska igra će se zaustaviti na početku besplatne igre.";
    this.mdd = "Podijeli na Facebooku";
    this.zps = "ZA VIŠE INFORMACIJA POGLEDAJTE PRAVILA IGRE.";
    this.bzs = "Reality Check";
    this.zxo = "Zatražili ste Reality Check.";
    this.bvh = "Pritisni POVIJEST za pregled prijašnjih igara.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.guo = "TEORETSKI POVRATAK NA IGRAČA ZA OVU IGRU JE XY."
}
apu.prototype = new nyc;

function oet() {
    this.fne = "MINIMA PUNTATA È";
    this.xdj = "PUNTATA MASSIMA";
    this.jux = "MIN. PUNTATA";
    this.yxu = "MASS. PUNTATA";
    this.hbp = "PUNTATA";
    this.start = "START";
    this.ehc = "AIUTO";
    this.wvo = "TABELLA VINCITE";
    this.bej = "MENU";
    this.ybv = "SCELTA|GIOCHI";
    this.lwi = "STOP";
    this.nko = "CREDITO";
    this.mzj = "FINE PARTITA";
    this.fxo = "VINCITORE!";
    this.pxz = "BUONA FORTUNA!";
    this.win = "VINCITA";
    this.vwa = "ULTIMA VINCITA";
    this.urn = "INCASSA";
    this.gap = "INCASSA";
    this.odb = "GAMBLE";
    this.hwo = "AUTO|START";
    this.wjz = "METÀ";
    this.dwn = "FINE";
    this.kft = "PREMI START";
    this.hwd = "SCEGLI PUNTATA";
    this.lbj = "METÀ";
    this.ret = "RITORNO|AL GIOCO";
    this.unr = "Totale vincita";
    this.sld = "Attenzione";
    this.gia = "TOTALE";
    this.ioj = "ATTENDERE PREGO ...";
    this.mtm = "Scelta Giochi";
    this.bvn = "VELOCITÀ";
    this.ovv = "In caso di malfunzionamento nessuna responsabilità assunta.";
    this.tnq = "C O N T I N U A";
    this.hlz = "AUTOSTART";
    this.zms = "TABELLA VINCITE";
    this.jns = "GAMBLE";
    this.left = "SINISTRA";
    this.bnt = "DESTRA";
    this.ok = "OK";
    this.hqx = "CANCELLA";
    this.ren = "Gamble";
    this.lsp = "Metà";
    this.bjq = "REGOLAMENTO";
    this.qtu = "REGOLAMENTO";
    this.xav = "Bonus!";
    this.qrl = "BONUS";
    this.phn = "PREMI UN TASTO PER CONTINUARE";
    this.vnx = "CREDITO INSUFFICIENTE!";
    this.vrn = "vince";
    this.tfn = "V A L U E";
    this.of = "DI";
    this.sim = "TOCCARE LO SCHERMO PER CONTINUARE";
    this.sdc = "STA CARICANDO ...";
    this.lna = "STA CARICANDO LA CRONACA ...";
    this.wan = "Errore di comunicazione";
    this.rlp = "Hai raggiunto uno dei limiti!";
    this.ftg = "Hai raggiunto il numero massimo di free games!";
    this.fgf = "La partita sta terminando";
    this.tao = "La partita sta ripartendo";
    this.qhj = "VINTO";
    this.error = "ERRORE";
    this.yns = "FREEPLAY";
    this.uhy = "AUTO";
    this.qvv = "GAME ID";
    this.mkg = "Durata del gioco";
    this.sai = "Ultime partite";
    this.prp = "";
    this.jsr = "DEPOSITO";
    this.audio = "AUDIO";
    this.oom = "MUSICA";
    this.jcg = "SCHERMO INTERO";
    this.kow = "SCHERMO INTERO";
    this.language = "LINGUA";
    this.jbk = "Non mostrare di nuovo";
    this.eps = "Suoni non caricabili!";
    this.rch = "Mancano risorse!";
    this.hdz = "Giocare senza suoni?";
    this.zzw = "SETTAGGI";
    this.nrk = "Prego girare l'apparecchio!";
    this.gzz = "INFO";
    this.qqk = "Prego disattivare il MODO PRIVATO nel browser per iniziare la partita";
    this.mrp = "La partita è ottimizzata per Google Chrome.";
    this.lun = "Prego utilizzare la versione attuale di";
    this.rgs = "Purtroppo il presente browser non viene supportato interamente";
    this.gqm = "Impossibile avviare questa partita nel modo freeplay!";
    this.ooh = "Girare l'apparecchio nel modo ritratto per giocare come su un apparecchio vero!";
    this.pme = "Aggiusta l'interfaccia del gioco come ti piace!";
    this.uhd = "SCEGLI IL COLORE GIUSTO PER RADDOPPIARE LA VINCITA";
    this.oqf = "SCEGLI IL SEME GIUSTO PER QUADRUPLARE LA VINCITA";
    this.vdh = "GAMBLE PER L'OPPORTUNITÀ DI AUMENTARE LA VINCITA";
    this.xho = "Statistica";
    this.mje = "Totale partite";
    this.jmq = "Totale puntata";
    this.odz = "Totale vincita";
    this.zqx = "Totale durata del gioco";
    this.sae = "Ho letto il messaggio";
    this.dql = "TERMINARE|LA PARTITA";
    this.uap = "Cronaca";
    this.jmy = "Nessuna partita giocata.";
    this.state = "STATO";
    this.obw = "Partita principale";
    this.fsm = "Raccolto autom.";
    this.ecm = "Raccolto";
    this.dvz = "Bonusspin";
    this.kdq = "Respin";
    this.lkl = "Bonus";
    this.tda = "Primo deal";
    this.ldm = "Secondo deal";
    this.jca = "Terzo deal";
    this.lpr = "SETTAGGI AUTOSTART";
    this.mza = "Numero di partite:";
    this.jjs = "Fermare l'autostart";
    this.cuj = "Credito più basso di:";
    this.acg = "Credito più alto di:";
    this.tdh = "Vincita più alta di:";
    this.rpc = "L'autostart si ferma all'inizio del bonus.";
    this.mdd = "Dividi su facebook";
    this.zps = "PER ULTERIORI INFORMAZIONI CONSULTARE LE REGOLE DI GIOCO.";
    this.bzs = "Reality Check";
    this.zxo = "Avete richiesto un Reality Check.";
    this.bvh = "Premere CRONACA per mostrare la cronaca della giocata.";
    this.dft = "Game break";
    this.nkv = "Game limits";
    this.qoa = "Self test";
    this.guo = "IL PAGAMENTO TEORICO DI QUESTO GIOCO IN FAVORE DEL GIOCATORE AMMONTA A XY."
}
oet.prototype = new nyc;

function xup() {
    this.fne = "MIN. INSATSEN ÄR";
    this.xdj = "MAXIMAL INSATS";
    this.jux = "MIN. INSATS";
    this.yxu = "MAX. INSATS";
    this.hbp = "INSATS";
    this.start = "STARTA";
    this.ehc = "HJÄLP";
    this.wvo = "VINSTTABELL";
    this.bej = "MENY";
    this.ybv = "FLER|SPEL";
    this.lwi = "STOPP";
    this.nko = "KREDIT";
    this.mzj = "SPELET ÄR SLUT";
    this.fxo = "VINNARE!";
    this.pxz = "LYCKA TILL!";
    this.win = "VINN";
    this.vwa = "SENASTE VINSTEN";
    this.urn = "INKASSERA";
    this.gap = "INKASSERA";
    this.odb = "DUBBLERA";
    this.hwo = "AUTO|START";
    this.wjz = "HÄLFTEN|1/2";
    this.dwn = "AVSLUTA";
    this.kft = "TRYCK PÅ START";
    this.hwd = "VÄLJ INSATS";
    this.lbj = "HÄLFTEN";
    this.ret = "ÅTERGÅ|TILL SPELET";
    this.unr = "Total Vinst";
    this.sld = "Varning";
    this.gia = "TOTALT";
    this.ioj = "VAR VÄNLIG VÄNTA ...";
    this.mtm = "Fler spel";
    this.bvn = "TEMPO";
    this.ovv = "Vid tekniskt fel annulleras alla insatser och spel.";
    this.tnq = "F O R T S Ä T T";
    this.hlz = "AUTOSTART";
    this.zms = "VINSTTABELL";
    this.jns = "DUBBLERA";
    this.left = "VÄNSTER";
    this.bnt = "HÖGER";
    this.ok = "OK";
    this.hqx = "AVBRYT";
    this.ren = "Dubblering";
    this.lsp = "Hälften";
    this.bjq = "SPELREGLER";
    this.qtu = "SPELREGLER";
    this.xav = "Bonus!";
    this.qrl = "BONUS";
    this.phn = "TRYCK PÅ EN KNAPP FÖR ATT FORTSÄTTA";
    this.vnx = "FÖR LÅGT SALDO!";
    this.vrn = "vinster";
    this.tfn = "V A L U E";
    this.of = "AV";
    this.sim = "PEKA PÅ SKÄRMEN FÖR ATT FORTSÄTTA";
    this.sdc = "LÄSER ...";
    this.lna = "LÄSER IN HISTORIKEN ...";
    this.wan = "Kommunikationsfel";
    this.rlp = "Du har nått en av gränserna!";
    this.ftg = "Du har nått det maximala antalet gratisspel!";
    this.fgf = "Spelet avslutas";
    this.tao = "Spelet startas om";
    this.qhj = "VUNNA";
    this.error = "FEL";
    this.yns = "GRATISSPEL";
    this.uhy = "AUTO";
    this.qvv = "SPEL-ID";
    this.mkg = "SPELTID";
    this.sai = "senaste";
    this.prp = "spelen";
    this.jsr = "INSÄTTNING";
    this.audio = "LJUD";
    this.oom = "MUSIK";
    this.jcg = "HELSKÄRM";
    this.kow = "HELSKÄRM";
    this.language = "SPRÅK";
    this.jbk = "Visa inte igen";
    this.eps = "Ljud kan inte laddas!";
    this.rch = "Resurser saknas!";
    this.hdz = "Spela utan ljud?";
    this.zzw = "INSTÄLLN.";
    this.nrk = "Vänd din enhet!";
    this.gzz = "INFO";
    this.qqk = "Avaktivera PRIVATLÄGET i din webbläsare för att spela spelet.";
    this.mrp = "Det här spelet är optimerat för Google Chrome.";
    this.lun = "Använd den senaste versionen av";
    this.rgs = "Tyvärr stöds inte den här webbläsaren fullt ut.";
    this.gqm = "Det här spelet kan inte startas i gratisspelsläget!";
    this.ooh = "Håll din enhet i porträttläge för att spela som på en riktig spelautomat!";
    this.pme = "Anpassa spelgränssnittet efter dina behov!";
    this.uhd = "VÄLJ RÄTT FÄRG FÖR ATT DUBBLA VINSTEN";
    this.oqf = "VÄLJ RÄTT FÄRGSVIT FÖR ATT FYRDUBBLA VINSTEN";
    this.vdh = "SPELA FÖR ATT FÅ CHANSEN ATT ÖKA VINSTEN";
    this.xho = "Statistik";
    this.mje = "Totalt antal spel";
    this.jmq = "Totalinsats";
    this.odz = "Totalvinst";
    this.zqx = "Total speltid";
    this.sae = "Jag har läst detta meddelande";
    this.dql = "AVSLUTA|SPELET";
    this.uap = "Historik";
    this.jmy = "Inga spel har spelats.";
    this.state = "STATUS";
    this.obw = "Huvudspel";
    this.fsm = "Auto. Inkasserat";
    this.ecm = "Inkasserat";
    this.dvz = "Bonusspinn";
    this.kdq = "Respin";
    this.lkl = "Bonus";
    this.tda = "Första given";
    this.ldm = "Andra given";
    this.jca = "Tredje given";
    this.lpr = "AUTOSTARTINSTÄLLNINGAR";
    this.mza = "Antal spelrundor:";
    this.jjs = "Stoppa autospel";
    this.cuj = "Saldo lägre än:";
    this.acg = "Saldo högre än:";
    this.tdh = "Vinst högre än:";
    this.rpc = "Autospelen kommer att stoppas då bonusen startar.";
    this.mdd = "Dela på Facebook";
    this.zps = "SE SPELREGLERNA FÖR MER INFORMATION.";
    this.bzs = "Reality Check";
    this.zxo = "Du har begärt att få en statusuppdatering.";
    this.bvh = "Tryck på HISTORIK för att visa din spelhistorik.";
    this.dft = "Spelpaus";
    this.nkv = "Spelgränser";
    this.qoa = "Självtest";
    this.guo = "DEN TEORETISKA ÅTERBETALNINGEN TILL SPELAREN FÖR DET HÄR SPELET ÄR XY."
}
xup.prototype = new nyc;

function ckf() {
    this.yos = "LINES";
    this.kgl = "LINE";
    this.hzg = "BET / LINE";
    this.vej = "WAYS";
    this.eop = "WAY";
    this.cit = "BONUSSPINS LEFT";
    this.otq = "TOTAL BONUSSPINS";
    this.dvb = "BONUSSPINS PLAYED";
    this.maw = "BONUSSPINS LEFT";
    this.fcg = "CONGRATULATIONS YOU WIN!";
    this.alx = "BONUS WIN";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "SYMBOLS";
    this.kza = "SYMBOL";
    this.kxl = "You win extra BONUSSPINS!";
    this.dxx = "Wins pay only from left to right!";
    this.zcs = "BONUS ENTRY WIN:";
    this.fav = "BONUSSPINS";
    this.szr = "BONUSSPINS are played with the same bet and number of lines as the initiating game.";
    this.obv = "Line Wins: Only the highest line win is paid on each line played. Line wins are a multiple of the line bet. Line wins from different lines are added.";
    this.tdv = "Scatter Wins: Scatter wins are a multiple of the total bet. Wins from Scatter symbols are added to the line wins.";
    this.wsq = "BONUS HELP";
    this.fup = "SYMBOL HELP";
    this.niy = "WINLINE HELP";
    this.eyq = "WINWAY HELP";
    this.rti = "You win an extra 15 BONUSSPINS!";
    this.nvs = "Play the Bonus until you have no BONUSSPINS left. BONUSSPINS can be re-triggered during the Bonus.";
    this.eka = "GAMBLE AMOUNT";
    this.ogg = "RED/BLACK GAMBLE TO WIN";
    this.ysc = "SUIT GAMBLE TO WIN";
    this.dna = "15 BONUSSPINS are won with 3, 4 or 5 SCATTERED Symbols on any position! All BONUSSPIN wins are multiplied by 3.";
    this.qmk = "Finish placing your bets!";
    this.oky = "Place your bets please!";
    this.tdc = "No more bets!";
    this.dva = "Good Luck!";
    this.jlu = "Better luck next time!";
    this.xwv = "SELECT THE CORRECT SUIT TO QUADRUPLE THE WIN";
    this.acy = "Bets accepted!";
    this.yqp = "Bets not accepted!";
    this.vlp = "Game in progress, please wait!";
    this.mhm = "WIN UP TO";
    this.vcj = "WIN HISTORY";
    this.uus = "BONUS END";
    this.wcb = "Bonus Multiplier";
    this.bkb = "Freespins!";
    this.cmz = "FREESPINS PLAYED";
    this.rwx = "FREESPIN WIN";
    this.nwx = "CONGRATULATION!";
    this.jvs = "Congratulation, you get";
    this.ejs = "You have";
    this.uzg = "freespins remaining!"
}
ckf.prototype = new xjr;

function ytf() {
    this.yos = "ЛИНИИ";
    this.kgl = "ЛИНИЯ";
    this.hzg = "СТ. / ЛИНИЮ";
    this.cit = "OСТАЛОСЬ ПРИЗОВЫХ ВРАЩЕНИЙ";
    this.otq = "Бонусные вращения";
    this.dvb = "СЫГРАННО ВРАЩЕНИЙ";
    this.maw = "OСТАЛОСЬ ПРИЗОВЫХ ВРАЩЕНИЙ";
    this.fcg = "ПОЗДРАВЛЯЕМ! ВЫ ВЫИГРАЛИ!";
    this.alx = "БОНУС ВЫИГРЫШ";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "СИМВОЛЫ";
    this.kza = "СИМВОЛ";
    this.fav = "призовых вращений";
    this.dxx = "Все выигрыши считаются только слевa направо.";
    this.kxl = "Вы выиграли дополнительные бонусные вращения!";
    this.szr = "Ставка и количество линий в игре бонусные вращения те же самые, что и в инициировавшей игре.";
    this.obv = "Линейные выигрыши: Засчитывается только максимальный выигрыш на каждой линии. Размер линейных выигрышей – многократная сумма ставки. Линейные выигрыши на разных линиях суммируются.";
    this.tdv = "Выигрыши Scatter Сумма выигрышей Scatter – многократная сумма общей ставки. Выигрыши с символами Scatter прибавляются к линейным выигрышам.";
    this.vej = "ПУТИ";
    this.eop = "ПУТЬ";
    this.wsq = "БОНУС – ПОМОЩЬ";
    this.fup = "СИМВОЛ ПОМОЩЬ";
    this.niy = "ЛИНИИ ВЫИГРЫША ПОМОЩЬ";
    this.eyq = "ПОМОЩЬ К ПУТИ К ВЫИГРЫШУ";
    this.xwv = "ВЫБЕРИТЕ ПРАВИЛЬНУЮ МАСТЬ, ЧТОБЫ УВЕЛИЧИТЬ ВЫИГРЫШ В 4 РАЗА";
    this.eka = "СУММА РИСКА";
    this.ogg = "РИСКНУТЬ КРАСНАЯ/ЧЕРНАЯ";
    this.ysc = "ВЫБОР МАСТИ";
    this.mhm = "ВЫИГРАЙ ДО";
    this.vcj = "ХРОНИКА ВЫИГРЫШЕЙ";
    this.uus = "КОНЕЦ БОНУСА";
    this.bkb = "бесплатных игр!";
    this.cmz = "СЫГРАННЫЕ БЕСПЛАТНЫЕ ИГРЫ";
    this.rwx = "ВЫИГРЫШ БЕСПЛАТНОЙ ИГРЫ";
    this.nwx = "ПОЗДРАВЛЯЕМ!";
    this.jvs = "Поздравляем, вы получили";
    this.ejs = "У вас еще";
    this.uzg = "бесплатных игр!";
    this.acy = "Ставки признаны!";
    this.yqp = "Ставки не признаны!";
    this.vlp = "Игра в процессе, пожалуйста, подождите...";
    this.qmk = "Игра сейчас начнется!";
    this.oky = "Сделайте ставку, пожалуйста!";
    this.tdc = "Ставок больше нет!";
    this.dva = "Удачи!";
    this.jlu = "Желаем удачи в следующий раз!";
    this.rti = "Вы выиграли следующие 15 призовых вращений барабанов!";
    this.nvs = "Бонус призовых вращений заканчивается когда призовых вращений больше нет. Дополнительные призовые вращения могут быть добавлены к Бонусу призовых вращений.";
    this.dna = "Вы получите 15 призовых вращений барабанов при выпадении 3, 4 или 5 символов СКАТТЕР на любой позиции. Все выигрыши умножаются на 3."
}
ytf.prototype = new but;

function xia() {
    this.yos = "LÍNEAS";
    this.kgl = "LÍNEA";
    this.hzg = "APUE. / LÍNEA";
    this.cit = "BONUSSPINS RESTANTES";
    this.otq = "TOTAL DE BONUSSPINS";
    this.dvb = "BONUSSPINS JUGADOS";
    this.maw = "BONUSSPINS RESTANTES";
    this.fcg = "ENHORABUENA, HAS GANADO!";
    this.alx = "PREMIO BONUS";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "SIMBOLOS";
    this.kza = "SIMBOLO";
    this.wcb = "Multiplicador de bonus";
    this.zcs = "PREMIO ENTRADA BONUS:";
    this.fav = "JUEGOS LIBRES";
    this.dxx = "Premios de la izquierda a la derecha!";
    this.kxl = "Ha ganado BONUSSPINS extra.";
    this.szr = "Los BONUSSPINS se juegan con la misma apuesta y el número de lineas que el juego inicial.";
    this.obv = "Premios de línea: Sólo se paga el mayor premio de línea por cada línea jugada. Los premios de línea son un múltiplo de la apuesta de la línea. Se suman los premios de línea de las diferentes líneas.";
    this.tdv = "Premios Scatter: Los premios Scatter son múltiplos de la apuesta total. Los premios de los símbolos scatter se suman a los premios de la línea.";
    this.vej = "CAMINOS";
    this.eop = "CAMINO";
    this.wsq = "AYUDA DE BONUS";
    this.fup = "SÍMBOLO AYUDA";
    this.niy = "LÍNEA GANADORA AYUDA";
    this.eyq = "AYUDA FORMAS DE PREMIO";
    this.xwv = "SELECCIONAR EL PALO CORRECTO PARA CUADRUPLICAR EL PREMIO";
    this.eka = "PREMIO";
    this.ogg = "ROJO/NEGRO PREMIO";
    this.ysc = "PREMIO DE SIMBOLO";
    this.mhm = "GANANCIAS HASTA";
    this.vcj = "HISTORIAL DE GANANCIAS";
    this.uus = "FIN DE BONUS";
    this.bkb = "Giros gratis!";
    this.cmz = "GIROS GRATIS JUGADOS";
    this.rwx = "PREMIO GIRO GRATIS";
    this.nwx = "¡ENHORABUENA!";
    this.jvs = "¡Enhorabuena, ha conseguido";
    this.ejs = "¡Le quedan";
    this.uzg = "giros gratis!";
    this.acy = "Aceptar apuestas!";
    this.yqp = "Apuestas rechazadas!";
    this.vlp = "El juego no ha concluido, por favor espere!";
    this.qmk = "El juega va a comenzar!";
    this.oky = "Haga juego!";
    this.tdc = "No más apuestas!";
    this.dva = "¡Mucha suerte!";
    this.jlu = "¡Mejor suerte la próxima vez!";
    this.rti = "Premio de 15 Freespins addicionales!";
    this.nvs = "El bono concluye cuando todos los BONUSSPINS se hayan jugado. En bono pueden ganarse BONUSSPINS adicionales.";
    this.dna = "Se gana 15 Freespins con 3, 4 o 5 simbolos de SCATTER en alguna posicion! Se triplican todos los premios de freespins."
}
xia.prototype = new xkj;

function dwq() {
    this.yos = "LINIEN";
    this.kgl = "LINIE";
    this.hzg = "EINS. / LINIE";
    this.cit = "VERBLEIBENDE BONUSSPINS";
    this.otq = "TOTAL BONUSSPINS";
    this.dvb = "GESPIELTE BONUSSPINS";
    this.maw = "VERBLEIBENDE BONUSSPINS";
    this.fcg = "GRATULIERE GEWONNEN!";
    this.alx = "BONUS GEWINN";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "SYMBOLE";
    this.kza = "SYMBOL";
    this.wcb = "Bonus Multiplikator";
    this.zcs = "BONUS START GEWINN:";
    this.fav = "BONUSSPINS";
    this.dxx = "Gewinne werden nur von links nach rechts gewertet!";
    this.kxl = "Zusätzliche BONUSSPINS gewonnen!";
    this.szr = "Die BONUSSPINS werden mit demselben Einsatz und Linienanzahl wie das auslösende Spiel gespielt.";
    this.obv = "Liniengewinne: Nur der höchste Liniengewinn je gespielter Linie zählt. Liniengewinne sind ein Vielfaches des Linieneinsatzes. Die Liniengewinne von verschiedenen Linien werden addiert.";
    this.tdv = "Scattergewinne: Scatter-Gewinne sind ein Vielfaches des Gesamteinsatzes. Gewinne aus Scatter-Symbolen werden den Liniengewinnen hinzugezählt.";
    this.vej = "WEGE";
    this.eop = "WEG";
    this.wsq = "BONUS HILFE";
    this.fup = "SYMBOL HILFE";
    this.niy = "GEWINNLINIEN HILFE";
    this.eyq = "GEWINNWEGE HILFE";
    this.xwv = "WÄHLE DIE RICHTIGE KARTENFARBE UM DEN GEWINN ZU VERVIERFACHEN";
    this.eka = "RISIKO";
    this.ogg = "ROT/SCHWARZ CHANCE";
    this.ysc = "SYMBOL CHANCE";
    this.mhm = "GEWINNE BIS ZU";
    this.vcj = "GEWINNHISTORIE";
    this.uus = "BONUS ENDE";
    this.bkb = "Freespins!";
    this.cmz = "GESPIELTE FREESPINS";
    this.rwx = "FREESPIN GEWINN";
    this.nwx = "GRATULIERE!";
    this.jvs = "Gratulation, Sie bekommen";
    this.ejs = "Sie haben noch";
    this.uzg = "Freespins übrig!";
    this.acy = "Einsätze akzeptiert!";
    this.yqp = "Einsätze nicht akzeptiert!";
    this.vlp = "Spiel läuft, bitte warten!";
    this.qmk = "Das Spiel beginnt gleich!";
    this.oky = "Ihre Einsätze bitte!";
    this.tdc = "Keine weiteren Einsätze!";
    this.dva = "Viel Glück!";
    this.jlu = "Mehr Glück beim nächsten Mal!";
    this.rti = "Weitere 15 BONUSSPINS gewonnen!";
    this.nvs = "Der Bonus endet, wenn alle BONUSSPINS abgespielt worden sind. Zusätzliche BONUSSPINS können im Bonus gewonnen werden.";
    this.dna = "15 BONUSSPINS werden durch 3, 4 oder 5 SCATTER Symbole auf jeder Position gewonnen! Alle BONUSSPIN Gewinne x 3."
}
dwq.prototype = new rel;

function nfv() {
    this.yos = "ÇIZGILER";
    this.kgl = "ÇİZGİ";
    this.hzg = "BANKO / ÇIZGI";
    this.cit = "KALAN PRIM OYUNLARIR";
    this.otq = "TOPLAM PRİM SPİNLERİ";
    this.dvb = "OYNANAN PRIM OYUNLAR";
    this.maw = "KALAN PRIM OYUNLARIR";
    this.fcg = "TEBRİKLER KAZANDINIZ!";
    this.alx = "PRIM KAZANCI";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "SEMBOLLER";
    this.kza = "SEMBOL";
    this.wcb = "Prim çarpanı";
    this.zcs = "PRİM GİRİŞ KAZANCI:";
    this.fav = "BEDAVA OYUNLAR";
    this.dxx = "Kazançlar tek soldan sağa değerlendirilir!";
    this.kxl = "Ek PRİM SPİN’LERİ kazandınız!";
    this.szr = "PRİM SPİNLER başlayacak olan oyunda da aynı banko ve çizgi sayısı ile oynanacaktır.";
    this.obv = "Çizgi kazançları: Oynanan her çizginin sadece en yüksek çizgi kazancı sayılmaktadır. Çizgi kazançları çizgi bankosunun kat sayısından oluşmaktadır. Çeşitli çizgilerin çizgi kazançları birbirleri ile toplanmaktadır.";
    this.tdv = "Scatter kazançları: Scatter-kazançları toplam bankonun kat sayısından oluşmaktadır. Scatter-Sembollerinden elde edilen kazançlar çizgi kazançlarına eklenmektedir.";
    this.vej = "YOLLAR";
    this.eop = "YOL";
    this.wsq = "PRİM YARDIMI";
    this.fup = "SEMBOL YARDIMI";
    this.niy = "KAZANÇ ÇIZGISI YARDIMI";
    this.eyq = "KAZANÇ YOLLARI YARDIM";
    this.xwv = "DOĞRU KART RENGİNİ SEÇEREK KAZANCINI DÖRDE KATLARSIN.";
    this.eka = "RİSK";
    this.ogg = "KIRMIZI/SİYAH ŞANSI";
    this.ysc = "SEMBOL ŞANSI";
    this.mhm = "KAZANANILMASI MÜMKÜN OLAN";
    this.vcj = "KAZANÇ GEÇMİŞİ";
    this.uus = "PRİM BİTTİ";
    this.bkb = "adet bedava Spin kazandınız!";
    this.cmz = "OYNANILAN BEDAVA SPİN'ler";
    this.rwx = "BEDAVA SPİN KAZANCI";
    this.nwx = "TEBRİKLER!";
    this.jvs = "Tebrikler,";
    this.ejs = "Daha";
    this.uzg = "adet bedava SPİN'iniz bulunuyor!";
    this.dva = "Bol şans!";
    this.acy = "Bahisler kabul edildi!";
    this.yqp = "Bahisler kabul edilmedi!";
    this.vlp = "Oyun oynanmakta, lütfen bekleyin!";
    this.qmk = "Oyun başlamak üzere!";
    this.oky = "Bankolarınız lütfen!";
    this.tdc = "Daha fazla banko mümkün değil!";
    this.jlu = "Bir dahaki sefer daha şanslı olursun!";
    this.rti = "15 bedava oyun daha kazandın!";
    this.nvs = "Bedava oyun primleri tüm bedava oyunlar oynandığı zaman biter. Bedava oyun primlerinde ek bedava oyunlar kazanılabilir.";
    this.dna = "Her pozisyondaki 3, 4 veya 5 SCATTERED sembolleri ile 15 tane bedava oyun kazanılır! Tüm bedava oyun kazançları x 3."
}
nfv.prototype = new kvr;

function hxt() {
    this.yos = "LINEK";
    this.kgl = "LINKA";
    this.hzg = "SÁZKA / LINKA";
    this.cit = "ZBÝVAJÍCÍ VOLNÉ HRY";
    this.otq = "TOTÁLNÍ BONUSSPINS";
    this.dvb = "ODEHRANÉ BONUS HRY";
    this.maw = "ZBÝVAJÍCÍ VOLNÉ HRY";
    this.fcg = "GRATULUJEME VYHRÁL JSTE!";
    this.alx = "BONUS VÝHRA";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "SYMBOLY";
    this.kza = "SYMBOL";
    this.wcb = "Násobic bonusu";
    this.zcs = "BONUS STARTUJE VÝHRU:";
    this.fav = "BONUSSPINS";
    this.dxx = "Výhry platí pouze z leva do prava!";
    this.kxl = "Vyhrál jste extra BONUSOVOU hru!";
    this.szr = "BONUSSPINS sa hrají se stejnou  sázkou a počtem línií jako hra, při které se spustily.";
    this.obv = "Výhry na línkách: Započítává se jen nejvyšší výhra na lince. Výhry na linkách jsou násobky linkových sázek. Výhry na různých línkách se sčítají.";
    this.tdv = "Scatter výhry: Scatter výhry násobí celkovou sázku. Výhry ze Scatter symbolů se připočítávají k výhrám na línkách.";
    this.vej = "ZPŮSOBY";
    this.eop = "ZPŮSOB";
    this.wsq = "BONUS NÁPOVĚDA";
    this.fup = "SYMBOL NÁPOVĚDA";
    this.niy = "VÝHERNÉ LINIE NÁPOVĚDA";
    this.eyq = "WINWAY HELP";
    this.xwv = "VYBRAT SPRÁVNOU BARVU KARTY KE ZČTYŘNÁSOBENÍ VÝHRY";
    this.eka = "VÝHRA";
    this.ogg = "CERVENÁ/CERNÁ VÝHRA";
    this.ysc = "SPRÁVNÁ BARVA KARTY VYHRÁVÁ";
    this.acy = "Sázky byly akceptovány!";
    this.yqp = "Sázky nebyly akceptovány!";
    this.mhm = "VÝHRA AŽ";
    this.vcj = "HISTORIE VÝHER";
    this.uus = "KONEC BONUSU";
    this.bkb = "Freespins!";
    this.cmz = "FREESPINS PLAYED";
    this.rwx = "FREESPIN WIN";
    this.nwx = "GRATULUJEME!";
    this.jvs = "Congratulation, you get";
    this.ejs = "You have";
    this.uzg = "freespins remaining!";
    this.vlp = "Hra probíhá, počkejte prosím!";
    this.qmk = "Hra Se Hned Spustí!";
    this.oky = "Vaše sázky prosím!";
    this.tdc = "Žádné další sázky.";
    this.dva = "Hodne štestí!";
    this.jlu = "Příště více štěstí!";
    this.rti = "Vyhráváte dalších 15 volných her!";
    this.nvs = "Bonus je ukoncen po odehrání všech bonusových her. Bonusové hry mohou být získány i behem bonusu.";
    this.dna = "3, 4 nebo 5 SCATTER symbolu na libovolné pozici vyhrává 15 volných her, výhry ve volné hre jsou násobené 3x."
}
hxt.prototype = new vug;

function vyn() {
    this.yos = "LIINID";
    this.kgl = "LIIN";
    this.hzg = "PAN. / LIINIL";
    this.cit = "TASUTA KEERUTUSI JÄÄNUD";
    this.otq = "BOONUSKEERUTUSI KOKKU";
    this.dvb = "MÄNGE MÄNGITUD";
    this.maw = "TASUTA KEERUTUSI JÄÄNUD";
    this.fcg = "PALJU ÕNNE, SA VÕITSID!";
    this.alx = "BOONUSVÕIT";
    this.fav = "BOONUSKEERUTUST";
    this.eka = "RISKIMÄNGU SUMMA";
    this.ogg = "PUNANE/MUST RISKIMÄNG";
    this.ysc = "RISKIMÄNG SÜMBOLIGA";
    this.xwv = "VÕIDU NELJAKORDISTAMISEKS VALI ÕIGE MAST";
    this.acy = "Panused aktsepteeritud!";
    this.yqp = "Panuseid ei aktsepteeritud!";
    this.mhm = "VÕIDA KUNI";
    this.vcj = "VÕITUDE AJALUGU";
    this.uus = "BOONUSE LÕPP";
    this.bkb = "tasuta keerutust!";
    this.cmz = "TASUTA KEERUTUSI MÄNGITUD";
    this.rwx = "TASUTA KEERUTUSE VÕIT";
    this.nwx = "ÕNNITLEME!";
    this.jvs = "Õnnitleme, said";
    this.ejs = "Sul on jäänud veel";
    this.uzg = "tasuta keerutust!";
    this.vlp = "Mäng algab, palun oodake...";
    this.qmk = "Lõpeta panuste tegemine!";
    this.oky = "Asetage palun panused!";
    this.tdc = "Panuste tegemine lõppenud";
    this.dva = "Soovime edu!";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "SÜMBOLID";
    this.kza = "SÜMBOL";
    this.zcs = "BOONUSVÕIT:";
    this.dxx = "Võite arvestatakse ainult vasakult paremale!";
    this.kxl = "Te võitsite lisa BOONUSKEERUTUSI!";
    this.szr = "BOONUSKEERUTUSED mängitakse sama panuse ja liinide arvuga, nagu boonuse käivitanud mängus.";
    this.vej = "VÕIMALUSED";
    this.eop = "VÕIMALUSE";
    this.rti = "Te võitsite lisa 15 BOONUSKEERUTUST!";
    this.nvs = "Mängige kõik tasuta keerutused lõpuni. Tasuta keerutusi võib võita ka tasuta keerutuste boonuse ajal.";
    this.wsq = "BOONUSE SPIKKER";
    this.fup = "SÜMBOLI SPIKKER";
    this.niy = "LIINIDE SPIKKER";
    this.eyq = "VÕIDUVÕIMALUSE SPIKKER";
    this.obv = "Liini võidud: Igal mänguliinil makstakse ainult suurimad liinivõidud. Liini võidud korrutatakse liini panusega. Erinevate liinide võidud liidetakse kokku.";
    this.tdv = "Scatteri võidud: Scatteri võidud korrutatakse kogupanusega. Scatteri sümboli võidud liidetakse liini võitudele.";
    this.wcb = "Boonuse mitmekordistaja";
    this.jlu = "Rohkem õnne järgmisel korral!";
    this.dna = "3, 4 või 5 TÄHE sümbolit juhuslikel kohtadel annab 15 BOONUSKEERUTUST! Kõik BOONUSKEERUTUSE võidud korrutatakse 3-ga."
}
vyn.prototype = new cfp;

function efc() {
    this.yos = "ΓΡΑΜΜEΣ";
    this.kgl = "ΓΡΑΜΜΗ";
    this.hzg = "ΣΤΟIΧΗΜΑ / Γ.";
    this.cit = "ΕΝΑΠΟΜΕIΝΑΝΤΑ BONUSSPINS";
    this.otq = "ΤΕΛΕΙΩΣ BONUSSPINS";
    this.dvb = "ΠΑΙΓΜEΝΑ BONUSSPINS";
    this.maw = "ΕΝΑΠΟΜΕIΝΑΝΤΑ BONUSSPINS";
    this.fcg = "ΣΥΓΧΑΡΗΤΗΡΙΑ ΚΕΡΔΙΣΑΤΕ!";
    this.alx = "ΜΠOΝΟΥΣ ΚEΡΔΟΣ";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "ΣYΜΒΟΛΑ";
    this.kza = "ΣΎΜΒΟΛΟ";
    this.wcb = "Πολλαπλασιαστής μπόνους";
    this.zcs = "BONUS START ΚΕΡΔIΖΕΙ:";
    this.fav = "BONUSSPINS";
    this.dxx = "Τα κέρδη μετρούνται από αριστερά προς τα δεξιά!";
    this.kxl = "Κερδίσατε συμπληρωματικούς BONUSSPINS!";
    this.szr = "Τα γυρίσματα μπόνους, τα BONUSSPINS, παίζονται με το ίδιο ποντάρισμα και τον ίδιο αριθμό σειρών, όπως το αρχικό παιχνίδι.";
    this.obv = "Κέρδη γραμμών: Μόνο το μεγαλύτερο κέρδος ανά παιγμένη γραμμή προσμετράται. Τα κέρδη των γραμμών αποτελούν πολλαπλάσιο του πονταρίσματος στη γραμμή. Τα κέρδη γραμμών που αφορούν σε διαφορετικές γραμμές προστίθενται.";
    this.tdv = "Κέρδη Scatter: Τα κέρδη Scatter αποτελούν πολλαπλάσιο του συνολικού πονταρίσματος. Τα κέρδη από σύμβολα Scatter προσμετρώνται στα κέρδη των γραμμών.";
    this.vej = "ΔΙΑΔΡΟΜΕΣ";
    this.eop = "ΔΙΑΔΡΟΜΉ";
    this.wsq = "BONUS ΒΟΉΘΕΙΑ";
    this.fup = "ΒΟHΘΕΙΑ ΣΥΜΒOΛΩΝ";
    this.niy = "ΒΟHΘΕΙΑ ΣΕΙΡΩΝ ΚEΡΔΟΥΣ";
    this.eyq = "WINWAY ΒΟΗΘΕΙΑ";
    this.xwv = "ΕΠΙΛΕΞΤΕ ΤΟ ΣΩΣΤΟ ΧΡΩΜΑ ΦΥΛΛΟΥ ΓΙΑ ΝΑ ΤΕΤΡΑΠΛΑΣΙΑΣΕΤΕ ΤΟ ΚΕΡΔΟΣ ΣΑΣ";
    this.eka = "ΠΟΣΟ ΡΙΣΚΟΥ";
    this.ogg = "ΜΑΥΡΟ/ΚΟΚΚΙΝΟ ΚΕΡΔΟΣ ΡΙΣΚΟΥ";
    this.ysc = "ΣΥΜΒΟΛΟ ΚΕΡΔΟΣ ΡΙΣΚΟΥ";
    this.mhm = "ΚΕΡΔΗ ΕΩΣ";
    this.vcj = "ΙΣΤΟΡΙΚΟ ΚΕΡΔΩΝ";
    this.uus = "ΛΗΞΗ ΜΠΟΝΟΥΣ";
    this.bkb = "Freespins!";
    this.cmz = "FREESPINS ΠΟΥ ΚΑΤΑΝΑΛΏΘΗΚΑΝ";
    this.rwx = "FREESPIN ΚΕΡΔΟΣ";
    this.nwx = "ΣΥΓΧΑΡΗΤΗΡΙΑ!";
    this.jvs = "Συγχαρητήρια, κερδίσατε";
    this.ejs = "Σας απομένουν";
    this.uzg = "Freespins!";
    this.acy = "Γίνονται αποδεκτά πονταρίσματα!";
    this.yqp = "Πονταρίσματα δε γίνονται αποδεκτά!";
    this.vlp = "Ενεργό παιχνίδι, παρακαλώ περιμένετε!";
    this.qmk = "Το παιχνίδι ξεκινά σε λίγο!";
    this.oky = "Το ποντάρισμα σας, παρακαλώ!";
    this.tdc = "Ποντάρισμα τέλος!";
    this.dva = "Καλή τύχη!";
    this.jlu = "Καλύτερη τύχη την επόμενη φορά!";
    this.rti = "Κερδίσατε 15 συμπληρωματικούς BONUSSPINS!";
    this.nvs = "Το Bonus τελειώνει, όταν όλα τα BONUSSPINS έχουν παιχθεί. Συμπληρωματικά BONUSSPINS δύνανται να κερδισθούν στο Bonus.";
    this.dna = "15 BONUSSPINS κερδίζονται με 3, 4 ή 5 σύμβολα ΑΣΤΡΟΥ σε κάθε θέση! Όλα τα BONUSSPINS αποφέρουν τριπλασιασμό κερδών."
}
efc.prototype = new zxx;

function njp() {
    this.yos = "ЛИНИИ";
    this.kgl = "ЛИНИЯ";
    this.hzg = "ЗАЛОГ/Л-Я";
    this.cit = "БОНУС-ИГРИ ОСТАВАТ";
    this.dvb = "БОНУС-ИГРИ ИЗИГРАНИ";
    this.maw = "БОНУС-ИГРИ ОСТАВАТ";
    this.fcg = "ПОЗДРАВЛЕНИЯ, ВИЕ СПЕЧЕЛИХТЕ!";
    this.alx = "БОНУС ПЕЧАЛБА";
    this.fav = "БОНУС-ИГРИ";
    this.eka = "СУМА ЗА ДУБЛИРАНЕ";
    this.ogg = "ДУБЛИРАЙ ЧЕРВЕНА/ЧЕРНА-ПЕЧАЛБА";
    this.ysc = "ДУБЛИРАНЕ НА КОЗОВ ЦВЯТ-ПЕЧАЛБА";
    this.xwv = "ИЗБЕРИ ПРАВИЛНАТА БОЯ, ЗА ДА УЧЕТВОРИШ ПЕЧАЛБАТА";
    this.acy = "Залозите са приети!";
    this.yqp = "Залозите не са приети!";
    this.mhm = "СПЕЧЕЛИ ДО";
    this.vcj = "ИСТОРИЯ НА ПЕЧАЛБИТЕ";
    this.uus = "КРАЙ НА БОНУС";
    this.bkb = "безплатни завъртания!";
    this.cmz = "ИЗИГРАНИ БЕЗПЛАТНИ ЗАВЪРТАНИЯ";
    this.rwx = "СПЕЧЕЛЕНО БЕЗПЛАТНО ЗАВЪРТАНЕ";
    this.nwx = "ПОЗДРАВЛЕНИЯ!";
    this.jvs = "Поздравления, получихте";
    this.ejs = "Имате останали";
    this.uzg = "безплатни завъртания!";
    this.vlp = "Затворено за залози!";
    this.qmk = "Приключете със залозите!";
    this.oky = "Поставете своите залози!";
    this.tdc = "Край на залозите!";
    this.dva = "Успех!";
    this.otq = "ОБЩО БОНУС ИГРИ";
    this.qpg = "СКАТЕР";
    this.xal = "SCATTERED:";
    this.zzq = "СИМВОЛИ";
    this.kza = "СИМВОЛ";
    this.zcs = "НАЧАЛНА БОНУС ПЕЧАЛБА:";
    this.dxx = "Печалбите се изплащат само от ляво на дясно!";
    this.kxl = "Вие спечелихте допълнителни Бонус игри!";
    this.szr = "Бонус игрите се играят със същия залог и брой линии, както основната игра.";
    this.vej = "НАЧИНИ";
    this.eop = "НАЧИН";
    this.rti = "Печелите допълнителни 15 БОНУС ЗАВЪРТАНИЯ!";
    this.nvs = "Бонус играта продължава до изчерпване на бонус игрите. По време на бонус игра може да се спечелят допълнителни игри.";
    this.wsq = "ПОМОЩ ЗА БОНУС";
    this.fup = "ПОМОЩ СИМВОЛ";
    this.niy = "ПОМОЩ ПЕЧЕЛИВША ЛИНИЯ";
    this.eyq = "ПОМОЩ ЗА ПЕЧАЛБИ";
    this.obv = "Печалби на Линия: От всяка активна линия се изплаща само най-голямата печалба. Печалбата от активна линия се умножава по залога на линия. Печалбите от активните линии се събират и формират общата печалба.";
    this.tdv = "Скатер печалби: Скатер печалбата се умножава по общият залог. Печалбите от фигурите Скатер се добавят към печалбата от активните линии.";
    this.wcb = "Бонус Множител";
    this.jlu = "По-добър успех-следващият път!";
    this.dna = "15 БОНУС ЗАВЪРТАНИЯ се печелят с 3, 4 или 5 символа ЗВЕЗДА на която и да е позиция! Всичките печалби от Бонус играта се умножават по 3."
}
njp.prototype = new com;

function hev() {
    this.yos = "ხაზები";
    this.kgl = "ხაზი";
    this.hzg = "ფსონი / ხაზი";
    this.vej = "გზა";
    this.eop = "გზა";
    this.cit = "დარჩენილი BONUS თამაშები";
    this.otq = "BONUS თამაშების რაოდენობა ჯამში";
    this.dvb = "უკვე ნათამაშები BONUS თამაშები";
    this.maw = "დარჩენილი BONUS თამაშები";
    this.fcg = "გილოცავთ თქვენ მოიგეთ!";
    this.alx = "BONUS მოგება";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "სიმბოლოები";
    this.kza = "სიმბოლო";
    this.kxl = "თქვენ მოიგეთ დამატებითი BONUS თამაშები!";
    this.dxx = "მოგების ანაზღაურება ხდება მხოლოდ მარცხნიდან მარჯვნივ!";
    this.zcs = "ბონუს ჩანაწერის მოგება:";
    this.fav = "BONUS თამაშები";
    this.szr = "BONUS თამაშების თამაში ხდება იგივე ფსონზე და ხაზების რაოდენობაზე, როგორც თამაშის დაწყების დროს.";
    this.obv = "ხაზის მოგება: თითოეულ ნათამაშებ ხაზზე, მოხდება მხოლოდ უმაღლესი ხაზის მოგების ანაზღაურება. ხაზის მოგება შედგება მრავალჯერადი ხაზის ფსონისაგან. სხვადასხვა ხაზიდან მიღებული მოგება ჯამდება ერთ მოგებად.";
    this.tdv = "Scatter მოგება: Scatter მოგება შეადგენს მთლიან ფსონს რამოდენიმეჯერ. მოგება Scatter სიმბოლოებიდან ემატება ხაზის მოგებას.";
    this.wsq = "ბონუს დახმარება";
    this.fup = "სიმბოლოს დახმარება";
    this.niy = "მოგების ხაზის დახმარება";
    this.eyq = "მოგების გზაზე დახმარება";
    this.rti = "თქვენ მოიგეთ დამატებითი 15 BONUS თამაშები!";
    this.nvs = "ითამაშეთ ბონუსი სანამ BONUS თამაში არ გაგითავდებათ. დამატებითი BONUS თამაშის მოგება შეიძლება ბონუსის დროს.";
    this.eka = "გარისკვის რიცხვი";
    this.ogg = "წითელი/შავი ითამაშე და მოიგე";
    this.ysc = "ფერი ითამაშე და მოიგე";
    this.dna = "15 BONUS თამაშის მოგება ხდება 3, 4 ან 5 ვარსკვლავის სიმბოლოთი ნებისმიერ პოზიციაზე! ყველა BONUSSPIN მოგება მრავლდება 3-ზე.";
    this.jlu = "გისურვებთ მომავალში უკეთეს იღბალს!";
    this.qmk = "დაასრულე ფსონის დადება!";
    this.oky = "მოათავსეთ თქვენი ფსონები გთხოვთ!";
    this.tdc = "ფსონები აღარ მიიღება!";
    this.dva = "გისურვებთ წარმატებას!";
    this.xwv = "აირჩიეთ კარტის სწორი ფერი რომ გააოთხმაგოთ მოგება";
    this.acy = "ფსონები მიღებულ იქნა!";
    this.yqp = "ფსონები არ იქნა მიღებული!";
    this.uus = "ბონუსის დასასრული";
    this.mhm = "-მდე მოგება";
    this.vcj = "მოგების ჩანაწერი";
    this.vlp = "თამაში მიმდინარეობს, გთხოვთ დაელოდოთ!";
    this.wcb = "ბონუს მულტიპლიკატორი";
    this.bkb = "უფასო დატრიალება!";
    this.cmz = "ნათამაშები უფასო დატრიალებები";
    this.rwx = "უფასო დატრიალების მოგება";
    this.nwx = "გილოცავთ!";
    this.jvs = "გილოცავთ, თქვენ მიიღეთ";
    this.ejs = "თქვენ დაგრჩათ";
    this.uzg = "უფასო დატრიალება!"
}
hev.prototype = new ros;

function ruz() {
    this.yos = "VONALAK";
    this.kgl = "VONAL";
    this.hzg = "TÉT / VONAL";
    this.vej = "IRÁNY";
    this.eop = "IRÁNY";
    this.cit = "MEGMARADT SZABAD JÁTÉKOK";
    this.otq = "ÖSSZES SZABAD JÁTÉK";
    this.dvb = "LEJÁTSZOTT SZABAD JÁTÉKOK";
    this.maw = "MEGMARADT SZABAD JÁTÉKOK";
    this.fcg = "GRATULÁLUNK, ÖN NYERT!";
    this.alx = "BÓNUSZ NYEREMÉNY";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "SZIMBÓLUMOK";
    this.kza = "SZIMBÓLUM";
    this.kxl = "További SZABADJÁTÉKOKAT nyert!";
    this.dxx = "A Nyeremények balról jobbra fizetnek!";
    this.zcs = "BÓNUSZBA LÉPŐ NYEREMÉNY:";
    this.fav = "SZABAD JÁTÉKOK";
    this.szr = "Az alapjátéknál beállított tét és nyerővonal számmal játszódik le a SZABAD JÁTÉK is.";
    this.obv = "Vonal Nyeremények: Csak a legnagyobb nyeremény fizet a megjátszott vonalakon. A vonal nyeremények a vonalankénti tét szorzatai. A különböző vonalankénti nyeremények összeadódnak.";
    this.tdv = "Scatter Nyeremények: A Scatter nyeremények az összes tét szorzatai. A Scatter szimbólummal elért nyeremények a vonal nyereményekhez adódnak.";
    this.wsq = "BÓNUSZ SÚGÓ";
    this.fup = "SZIMBÓLUM SÚGÓ";
    this.niy = "NYERŐVONAL SÚGÓ";
    this.eyq = "NYEREMÉNYÚT SEGÉDLET";
    this.rti = "További 15 SZABADJÁTÉKOT nyert!";
    this.nvs = "Játssza a szabad játék bónuszt ameddig van szabad pörgetése. Ez idő alatt újabb szabad játékokat nyerhet.";
    this.eka = "FELTETT ÖSSZEG";
    this.ogg = "PIROS/FEKETE NYEREMÉNY";
    this.ysc = "SZÍN NYEREMÉNY";
    this.dna = "15 SZABAD JÁTÉKOT nyerhet ha 3, 4 vagy 5 CSILLAG szimbólum jelenik meg bármely helyen. Minden SZABAD JÁTÉKBAN elért nyeremény háromszorosan fizet.";
    this.jlu = "Több szerencsét máskor!";
    this.qmk = "Tétek lezárva!";
    this.oky = "Kérem tegyék meg tétjeiket!";
    this.tdc = "A játék elkezdődött, kérem várjon!";
    this.dva = "Sok szerencsét!";
    this.xwv = "VÁLASSZA KI A MEGFELELŐ KÁRTYASZÍNT, HOGY MEGNÉGYSZEREZZE A NYEREMÉNYT";
    this.acy = "Tétek elfogadva!";
    this.yqp = "Nem lehet tétet rakni!";
    this.vlp = "Játék folyamatban, kérem várjon!";
    this.mhm = "A NYEREMÉNY AKÁR";
    this.vcj = "JÁTÉK TÖRTÉNET";
    this.uus = "BÓNUSZ VÉGE";
    this.wcb = "Bónusz szorzó";
    this.bkb = "szabad spint kap!";
    this.cmz = "JÁTSZOTT SZABAD SPINEK";
    this.rwx = "SZABAD SPIN NYEREMÉNY";
    this.nwx = "GRATULÁLUNK!";
    this.jvs = "Gratulálunk, Ön";
    this.ejs = "";
    this.uzg = "szabad spinje van még!"
}
ruz.prototype = new ztl;

function dnn() {
    this.yos = "LINII";
    this.kgl = "LINIE";
    this.hzg = "MIZĂ / LINIE";
    this.vej = "MODURI";
    this.eop = "MOD";
    this.cit = "BONUSSPIN RĂMAŞI";
    this.otq = "TOTAL BONUSSPIN";
    this.dvb = "BONUSSPIN JUCAŢI";
    this.maw = "BONUSSPIN RĂMAŞI";
    this.fcg = "FELICITĂRI CÂŞTIGAT!";
    this.alx = "CÂŞTIG BONUS";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "SIMBOLURI";
    this.kza = "SIMBOL";
    this.kxl = "Aţi câştigat BONUSSPIN suplimentari!";
    this.dxx = "Câştigurile sunt evaluate numai de la stânga la dreapta!";
    this.zcs = "CÂŞTIG BONUS START:";
    this.fav = "BONUSSPIN";
    this.szr = "BONUSSPIN sunt jucate cu aceeaşi miză şi număr de linii ca jocul iniţial.";
    this.obv = "Câştiguri linie: Numai câştigul linie maxim pe linie jucată contează. Câştiguri linie sunt un multiplu al mizei liniei. Câştigurile linie ale diferitelor linii sunt adunate.";
    this.tdv = "Câştiguri Scatter: Câştigurile Scatter sunt un multiplu al mizei totale. Câştigurile din simbolurile Scatter sunt adăugate la câştigurile linie.";
    this.wsq = "AJUTOR BONUS";
    this.fup = "AJUTOR SIMBOL";
    this.niy = "AJUTOR LINII DE CÂŞTIG";
    this.eyq = "AJUTOR CĂI DE CÂŞTIG";
    this.rti = "Aţi câştigat 15 BONUSSPIN suplimentari!";
    this.nvs = "Bonusul este terminat când au fost jucaţi toţi BONUSSPIN. BONUSSPIN suplimentari pot fi câştigaţi la bonus.";
    this.eka = "RISC";
    this.ogg = "ŞANSA ROŞU/NEGRU";
    this.ysc = "SIMBOLUL ŞANSĂ";
    this.dna = "15 BONUSSPIN sunt câştigaţi prin 3, 4 sau 5 simboluri STEA pe fiecare poziţie! Toţi BONUSSPIN câştiguri x 3.";
    this.jlu = "Mai mult noroc data viitoare!";
    this.qmk = "Jocul începe imediat!";
    this.oky = "Rugăm mizele dv.!";
    this.tdc = "Nu alte mize!";
    this.dva = "Mult noroc!";
    this.xwv = "SELECTEAZĂ CULOAREA CORECTĂ A CĂRŢII PENTRU A CÂŞTIGA DE 4 ORI";
    this.acy = "Pariuri acceptate!";
    this.yqp = "Pariuri neacceptate!";
    this.vlp = "Joc în derulare, vă rugăm așteptați!";
    this.mhm = "CÂŞTIGURI PÂNĂ LA";
    this.vcj = "ISTORIC CÂŞTIG";
    this.uus = "BONUS FINAL";
    this.wcb = "Bonus multiplicator";
    this.bkb = "rotiri libere!";
    this.cmz = "ROTIRI GRATUTE JUCATE";
    this.rwx = "CÂŞTIG ROTIRI LIBERE";
    this.nwx = "FELICITĂRI!";
    this.jvs = "Felicitări, ai primit";
    this.ejs = "V-au rămas";
    this.uzg = "rotiri gratuite!l"
}
dnn.prototype = new vda;

function xdo() {
    this.yos = "LINHAS";
    this.kgl = "LINHA";
    this.hzg = "APOSTA / LINHA";
    this.vej = "FORMAS";
    this.eop = "FORMA";
    this.cit = "BONUSSPINS RESTANTES";
    this.otq = "TOTAL DE BONUSSPINS";
    this.dvb = "BONUSSPINS JOGADOS";
    this.maw = "BONUSSPINS RESTANTES";
    this.fcg = "PARABÉNS, GANHOU!";
    this.alx = "PRÉMIO BONUS";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "SÍMBOLOS";
    this.kza = "SÍMBOLO";
    this.kxl = "Ganhou BONUSSPINS adicionais!";
    this.dxx = "Prémios só são pagos da esquerda para a direita!";
    this.zcs = "PRÉMIO ENTRADA BONUS:";
    this.fav = "BONUSSPINS";
    this.szr = "Os BONUSSPINS são jogados com a mesma aposta e n° de linhas que o jogo inicial.";
    this.obv = "Prémios de linha: Só conta o mais alto prémio de linha de cada linha jogada. Prémios de linha são um múltiplo da aposta de linha. Prémios de linha de diversas linhas são adicionados.";
    this.tdv = "Prémios Scatter: Prémios Scatter são múltiplos da aposta total. Prémios de símbolos Scatter são adicionados aos prémios de linha.";
    this.wsq = "AJUDA BONUS";
    this.fup = "AJUDA SÍMBOLO";
    this.niy = "AJUDA DE LINHAS VENCEDORAS";
    this.eyq = "AJUDA DE FORMAS DE PRÊMIO";
    this.rti = "Ganhou 15 BONUSSPINS adicionais!";
    this.nvs = "Jogar Bonus até não restarem mais BONUSSPINS. BONUSSPINS adicionais podem ser ganhos em Bonus.";
    this.eka = "RISCO";
    this.ogg = "VERMELHO/PRETO CHANCE DE GANHAR";
    this.ysc = "CHANCE DO NAIPE";
    this.dna = "15 BONUSSPINS são ganhos com 3, 4 ou 5 símbolos de estrelas em qualquer posição! Todos ganhos BONUSSPIN são multiplicados por 3.";
    this.qmk = "O jogo começa em breve!";
    this.oky = "Suas apostas por favor!";
    this.tdc = "Nenhuma aposta mais!";
    this.dva = "Boa sorte!";
    this.xwv = "ESCOLHA O NAIPE CERTO PARA QUADRUPLICAR O GANHO";
    this.acy = "Apostas aceitas!";
    this.yqp = "Apostas não aceitas!";
    this.vlp = "Jogo em andamento, aguarde por favor!";
    this.mhm = "GANHOS ATÉ";
    this.vcj = "HISTÓRICO DO GANHO";
    this.uus = "FIM BONUS";
    this.wcb = "Multiplicador do bonus";
    this.jlu = "Mais sorte da próxima vez!";
    this.bkb = "freespins!";
    this.cmz = "FREESPINS JOGADOS";
    this.rwx = "GANHO DE FREESPINS";
    this.nwx = "PARABÉNS!";
    this.jvs = "Parabéns, ganhas";
    this.ejs = "Ainda lhe sobram";
    this.uzg = "freespins!"
}
xdo.prototype = new hys;

function vcv() {
    this.yos = "LIGNES";
    this.kgl = "LIGNE";
    this.hzg = "MISE / LIGNE";
    this.vej = "CHEMINS";
    this.eop = "CHEMIN";
    this.cit = "BONUSSPINS LAISSÉ";
    this.otq = "TOTAL BONUSSPINS";
    this.dvb = "JEUX GRATUITS JOUES";
    this.maw = "BONUSSPINS LAISSÉ";
    this.fcg = "FELICITATIONS TU AS GAGNE!";
    this.alx = "BONUS GAIN";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "SYMBOLES";
    this.kza = "SYMBOLE";
    this.kxl = "Vous gagnez BONUSSPINS extra!";
    this.dxx = "Victoires payer seulement de gauche à droite!";
    this.zcs = "BONUS ENTRÉE WIN:";
    this.fav = "BONUSSPINS";
    this.szr = "Les BONUSSPINS sont joué avec la même mise et nombre des lignes comme le jeu avant.";
    this.obv = "Gains des lignes: Seulement le gain de ligne plus haut par ligne joué compté. Gains des lignes sont un multiple du mise de ligne. Les gains de lignes de lignes differents sont ajouté.";
    this.tdv = "Gains de Scatter: Gains de Scatter sont un multiple du toute mise. Gains de symboles Scatter sont ajouter á le gain des lignes.";
    this.wsq = "BONUS D'AIDE";
    this.fup = "SYMBOLE D'AIDE";
    this.niy = "WINLINE AIDE";
    this.rti = "Vous avez gagné un supplément de 15 BONUSSPINS!";
    this.nvs = "Le Bonus se Termine une fois tous les BONUSSPINS joués. Des BONUSSPINS supplémentaires peuvent être gagnés pendant la Bonus.";
    this.eka = "RISQUE";
    this.ogg = "ROUGE/NOIR SIGNIFIE GAIN";
    this.ysc = "GAIN DE SYMBOLES";
    this.dna = "15 BONUSSPINS sont gagnés avec 3, 4 ou 5 étoiles sur toute position! Tous les gains des BONUSSPINS sont multipliés par 3.";
    this.qmk = "Le jeu va commencer tout de suite!";
    this.oky = "Faites vos jeux s'il vous plaît!";
    this.tdc = "Rien ne va plus!";
    this.dva = "Bonne chance!";
    this.eyq = "AIDE VOIES DE GAINS";
    this.jlu = "Meilleure chance la prochaine fois!";
    this.xwv = "CHOISIS LA BONNE COULEUR DE LA CARTE AFIN DE QUADRUPLER LE GAIN";
    this.acy = "Mises acceptées!";
    this.yqp = "Mises refusées!";
    this.vlp = "Jeu en cours, merci de patienter!";
    this.mhm = "GAINS JUSQU'À";
    this.vcj = "HISTORIQUE DE GAINS";
    this.uus = "FIN DU BONUS";
    this.wcb = "Multiplicateur de bonus";
    this.bkb = "Freespins!";
    this.cmz = "FREESPINS JOUÉS";
    this.rwx = "GAIN DE FREESPIN";
    this.nwx = "FÉLICITATIONS!";
    this.jvs = "Félicitations, vous recevez";
    this.ejs = "Il vous reste encore";
    this.uzg = "Freespins!"
}
vcv.prototype = new jmz;

function uri() {
    this.yos = "LINIJE";
    this.kgl = "LINIJI";
    this.hzg = "ULOG / LINIJI";
    this.vej = "NAČINA";
    this.eop = "NAČIN";
    this.cit = "PREOSTALE BESPLATNE IGRE";
    this.otq = "UKUPNO BESPLATNIH IGARA";
    this.dvb = "ODIGRANE BESPLATNE IGRE";
    this.maw = "PREOSTALE BESPLATNE IGRE";
    this.fcg = "ČESTITAMO, DOBILI STE!";
    this.alx = "BONUS DOBITAK";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "SIMBOLI";
    this.kza = "SIMBOL";
    this.kxl = "Dobili ste dodatne BESPLATNE IGRE!";
    this.dxx = "Dobitci se isplaćuju samo sa lijeva na desno!";
    this.zcs = "BONUS POČETNI DOBITAK:";
    this.fav = "BESPLATNE IGRE";
    this.szr = "BESPLATNE IGRE se igraju sa istim ulogom i brojem linija kao početna igra.";
    this.obv = "Linijski dobitak: Samo najveći linijski dobitak za svaku odigranu liniju se isplaćuje. Linijski dobitak je uvišestručeni linijski ulog. Linijski dobitci sa različitih linija se zbrajaju.";
    this.tdv = "Scatter dobitak: Scatter dobitak je uvišestručeni ukupni ulog. Dobitci od scatter simbola se zbrajaju sa linijskim dobitcima.";
    this.wsq = "POMOĆ ZA BONUS";
    this.fup = "POMOĆ ZA SIMBOL";
    this.niy = "POMOĆ ZA DOBITNE LINIJE";
    this.rti = "Dobili ste dodatnih 15 BESPLATNIH IGARA!";
    this.nvs = "Bonus se završava kada su odigrane sve BESPLATNE IGRE. Dodatne BESPLATNE IGRE se mogu dobiti tijekom Bonusa.";
    this.eka = "ULAŽETE";
    this.ogg = "POGODI BOJU ZA DOBITAK OD";
    this.ysc = "POGODI SIMBOL ZA DOBITAK OD";
    this.dna = "3, 4 ili 5 simbola ZVIJEZDA na bilo kojoj poziciji osvajaju 15 BESPLATNIH IGARA! Svi dobici tijekom BESPLATNIH IGARA množe se sa 3.";
    this.qmk = "Završte ulaganje!";
    this.oky = "Molimo Vaše uloge!";
    this.tdc = "Nema daljnjih uloga!";
    this.dva = "Puno sreće!";
    this.eyq = "POMOĆ ZA POBJEDU";
    this.jlu = "Više sreće sljedeći put!";
    this.xwv = "ODABERI PRAVI ZNAK I TIME UČETVEROSTRUČI DOBITAK";
    this.acy = "Ulozi su prihvaćeni!";
    this.yqp = "Ulozi nisu prihvaćeni!";
    this.vlp = "Igra je u tijeku, sačekajte!";
    this.mhm = "OSVOJI DO";
    this.vcj = "POVIJEST DOBITAKA";
    this.uus = "KRAJ BESPLATNE IGRE";
    this.wcb = "Bonus multiplikator";
    this.bkb = "slobodnih igara!";
    this.cmz = "ODIGRANIH SLOBODNIH IGARA";
    this.rwx = "DOBITAK U SLOBODNOJ IGRI";
    this.nwx = "ČESTITAMO!";
    this.jvs = "Čestitamo, osvojili ste";
    this.ejs = "Preostalo ti je još";
    this.uzg = "slobodnih igara!"
}
uri.prototype = new apu;

function yoq() {
    this.yos = "LINEE";
    this.kgl = "LINEA";
    this.hzg = "PUNTATA / LINEA";
    this.vej = "VIE";
    this.eop = "VIA";
    this.cit = "BONUSSPIN RIMASTI";
    this.otq = "TOTALE BONUSSPIN";
    this.dvb = "BONUSSPIN GIOCATI";
    this.maw = "BONUSSPIN RIMASTI";
    this.fcg = "CONGRATULAZIONI, HAI VINTO!";
    this.alx = "VINCITA BONUS";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "SIMBOLI";
    this.kza = "SIMBOLO";
    this.kxl = "Hai vinto altri BONUSSPIN!";
    this.dxx = "Le vincite sono valutate dalla sinistra alla destra soltanto!";
    this.zcs = "VINCITA START BONUS:";
    this.fav = "BONUSSPIN";
    this.szr = "Le giocate BONUS si giocano con la stessa puntata e con lo stesso numero di linee della partita iniziale.";
    this.obv = "Vincite di linea: Soltanto la vincita di linea più alta di ogni linea conta. Le vincite di linea sono la moltiplicazione della puntata per la linea. Le vincite di linea delle diverse linee vengono sommate.";
    this.tdv = "Vincite Scatter: Le vincite Scatter sono la moltiplicazione dell'intera puntata del gioco. Le vincite dai simboli Scatter vengono sommate alle vincite di linea.";
    this.wsq = "AIUTO BONUS";
    this.fup = "AIUTO SYMBOLO";
    this.niy = "AIUTO WINLINE";
    this.rti = "Hai vinto altri 15 BONUSSPIN!";
    this.nvs = "Il bonus termina quando tutti i BONUSSPIN sono stati giocati. Si possono vincere altri BONUSSPIN nella giocata Bonus.";
    this.eka = "IMPORTO GAMBLE";
    this.ogg = "ROSSO/NERO GAMBLE PER VINCERE";
    this.ysc = "CHANCE SUIT GAMBLE";
    this.dna = "15 BONUSSPIN si vincono con 3, 4 o 5 simboli STELLA su ogni posizione! Tutte le vincite BONUSSPIN si moltiplicano x 3.";
    this.qmk = "Completare le puntate prego!";
    this.oky = "Prego puntare!";
    this.tdc = "Fine puntate!";
    this.dva = "Buona Fortuna!";
    this.eyq = "AIUTO MODI DI VINCERE";
    this.jlu = "La prossima volta sarai più fortunato!";
    this.xwv = "SCEGLI IL SEME GIUSTO PER QUADRUPLARE LA VINCITA";
    this.acy = "Puntate accettate!";
    this.yqp = "Puntate non accettate!";
    this.vlp = "Partita in corso, prego attendere!";
    this.mhm = "VINCITE FINO A";
    this.vcj = "CRONACA DELLE VINCITE";
    this.uus = "FINE BONUS";
    this.wcb = "Moltiplicatore bonus";
    this.bkb = "Freespins!";
    this.cmz = "FREESPIN GIOCATI";
    this.rwx = "VINCITA FREESPIN";
    this.nwx = "CONGRATULAZIONI!";
    this.jvs = "Congratulazioni, ricevi";
    this.ejs = "Sono rimasti";
    this.uzg = "freespin!"
}
yoq.prototype = new oet;

function qzw() {
    this.yos = "LINJER";
    this.kgl = "LINJE";
    this.hzg = "INSATS / LINJE";
    this.vej = "SÄTT";
    this.eop = "SÄTT";
    this.cit = "ÅTERSTÅENDE BONUSSPINS";
    this.otq = "BONUSSPINS TOTALT";
    this.dvb = "SPELADE BONUSSPINS";
    this.maw = "ÅTERSTÅENDE BONUSSPINS";
    this.fcg = "GRATTIS, DU HAR VUNNIT!";
    this.alx = "BONUSVINST";
    this.qpg = "SCATTER";
    this.xal = "SCATTERED:";
    this.zzq = "SYMBOLER";
    this.kza = "SYMBOL";
    this.kxl = "Du har vunnit extra BONUSSPINS!";
    this.dxx = "Vinster betalas endast ut från vänster till höger!";
    this.zcs = "BONUSSTARTSVINST:";
    this.fav = "BONUSSPINS";
    this.szr = "BONUSSPINS spelas med samma insats och samma antal linjer som det spel som aktiverade bonusomgången.";
    this.obv = "Linjevinster: Endast den högsta linjevinster per spelad linje räknas. Linjevinster är en mångdubbling av linjeinsatsen. Linjevinsterna från olika linjer adderas.";
    this.tdv = "Scattervinster: Scattervinster är en mångdubbling av den totala insatsen. Vinster från scattersymboler adderas till linjevinsterna.";
    this.wsq = "HJÄLP OM BONUS";
    this.fup = "HJÄLP OM SYMBOLER";
    this.niy = "HJÄLP OM VINSTRADER";
    this.eyq = "VINSTSÄTTSHJÄLP";
    this.rti = "Du har vunnit ytterligare 15 BONUSSPINS!";
    this.nvs = "Spela ut bonusomgången tills inga BONUSSPINS återstår. Nya BONUSSPINS kan vinnas under bonusomgången.";
    this.eka = "SPELSUMMA";
    this.ogg = "SPEL OM RÖTT/SVART";
    this.ysc = "SPEL OM FÄRG";
    this.dna = "15 BONUSSPINS betalas ut för 3, 4 eller 5 SCATTER-symboler på varje position! Alla vinster från BONUSSPIN multipliceras med 3.";
    this.qmk = "Spelet har börjat!";
    this.oky = "Placera dina insatser, tack!";
    this.tdc = "Inga fler insatser!";
    this.dva = "Lycka till!";
    this.jlu = "Bättre lycka nästa gång!";
    this.xwv = "VÄLJ RÄTT FÄRGSVIT FÖR ATT FYRDUBBLA VINSTEN";
    this.acy = "Insatserna accepterade!";
    this.yqp = "Insatserna ej accepterade!";
    this.vlp = "Spelet pågår, var vänlig vänta!";
    this.mhm = "VINN UPP TILL";
    this.vcj = "VINSTHISTORIK";
    this.uus = "BONUSEN SLUT";
    this.wcb = "Bonusmultiplikator";
    this.bkb = "gratisspinn!";
    this.cmz = "GRATISSPINN SPELADE";
    this.rwx = "GRATISSPINNSVINST";
    this.nwx = "GRATTIS!";
    this.jvs = "Grattis, du har fått";
    this.ejs = "Du har";
    this.uzg = "gratisspinn kvar!"
}
qzw.prototype = new xup;

function aax() {
    this.bog = "3 SHIP symbols on any position win 10 BONUSSPINS.";
    this.laz = "Each Admiral Nelson symbol will double scatter win!";
    this.gvu = "2, 3, 4 or 5 SCATTER symbols pay on any position. Each Admiral Nelson symbol will double scatter win!";
    this.zna = "ADMIRAL NELSON substitutes all symbols except SCATTER and SHIP symbols.";
    this.jjf = "SHIP symbol substitutes all symbols except SCATTER and ADMIRAL symbols during Bonus.";
    this.rwm = "Scatter Double!";
    this.umo = "You win an extra 10 BONUSSPINS!"
}
aax.prototype = new ckf;

function coh() {
    this.bog = "3 бонусных символа в любой позиции выигрывают 10 призовых игр.";
    this.laz = "Каждый символ АДМИРАЛ НЕЛЬСОН удвоит СКАТТЕР выигрыш!";
    this.gvu = "2, 3, 4 или 5 символов СКАТТЕР выигрывают в любой позиции. Каждый сивол АДМИРАЛ НЕЛЬСОН удваивает СКАТТЕР выигрыш!";
    this.zna = "Символ АДМИРАЛ НЕЛЬСОН заменяет все символы кроме СКАТТЕР и БОНУС символов.";
    this.jjf = "В призовых вращениях символ КОРАБЛЬ заменяет все символы кроме СКАТТЕРА и АДМИРАЛА.";
    this.rwm = "СКАТТЕР удваивает!";
    this.umo = "Вы выиграли дополнительно 10 призовых вращений"
}
coh.prototype = new ytf;

function hsn() {
    this.bog = "Tres simbolos BARCO en cualquier posición otorga 10 BONUSSPINS.";
    this.laz = "Cada uno de los simbolos de Almirante Nelson redobla un premio scatter!";
    this.gvu = "2, 3, 4 o 5 simbolos SCATTER ganan en cualquier posición. Cada uno de los simbolos Almirante Nelson redobla un premio scatter!";
    this.zna = "ADMIRAL NELSON sustituye a cada uno de los simbolos en una combinación ganadora, excepto a los simbolos SCATTER y BARCO.";
    this.jjf = "Un simbolo de BARCO substituye en bono a todos los simbolos excepto SCATTER y ADMIRAL. Los simbolos WILD substituyen siempre el premio superior posible.";
    this.rwm = "Scatter doble!";
    this.umo = "Has ganado otros 10 BONUSSPINS!"
}
hsn.prototype = new xia;

function vgh() {
    this.bog = "3 SCHIFF Symbole auf jeder Position gewinnen 10 BONUSSPINS.";
    this.laz = "Jedes Admiral Nelson Symbol verdoppelt einen Scatter Gewinn!";
    this.gvu = "2, 3, 4 oder 5 SCATTER Symbole gewinnen auf jeder Position. Jedes Admiral Nelson Symbol verdoppelt einen Scatter Gewinn!";
    this.zna = "ADMIRAL NELSON ersetzt jedes Symbol, ausgenommen SCATTER und SCHIFF Symbole.";
    this.jjf = "Ein SCHIFF Symbol ersetzt im Bonus jedes Symbol, ausgenommen SCATTER und ADMIRAL Symbole. WILD Symbole ersetzen immer für den höchst möglichen Gewinn.";
    this.rwm = "Scatter Double!";
    this.umo = "Weitere 10 BONUSSPINS gewonnen!"
}
vgh.prototype = new dwq;

function yov() {
    this.bog = "Her pozisyondaki 3 GEMİ sembolü 10 bedava oyun kazanır.";
    this.laz = "Her Admiral Nelson sembolü bir Scatter kazancını ikiye katlar!";
    this.gvu = "2, 3, 4 veya 5 SCATTER sembolü her pozisyonda kazanır. Her Admiral Nelson sembolü bir Scatter kazancını ikiye katlar!";
    this.zna = "ADMIRAL NELSON, SCATTER ve GEMİ sembolleri dışındaki her sembolün yerine geçer.";
    this.jjf = "Bedava oyun priminde bir GEMİ sembolü, SCATTER ve ADMIRAL sembolleri haricindeki her sembolün yerine geçer. WILD sembolleri daima mümkün olan en yüksek kazanç yerine geçer.";
    this.rwm = "Çift Scatter!";
    this.umo = "10 bedava oyun daha kazandınız!"
}
yov.prototype = new nfv;

function bda() {
    this.bog = "3 symboly LOD na jakékoliv pozici - vyhráváte 10 bonusových her.";
    this.laz = "Každý symbol Admiral Nelson zdvojnásobuje SCATTER výhru.";
    this.gvu = "2, 3, 4 nebo 5 SCATTER symbolu vyhrává na jakékoliv pozici. Každý symbol Admiral Nelson zdvojnásobuje SCATTER výhru.";
    this.zna = "Symbol ADMIRAL NELSON nahrazuje všechny symboly vyjma symbolu SCATTER a LOD.";
    this.jjf = "Symbol LOD nahrazuje v bonusu všetky symboly vyjma symbolu SCATTER a ADMIRAL.";
    this.rwm = "Scatter, dvojitá výhra!";
    this.umo = "Vyhral jste dalších 10 bonusových her!"
}
bda.prototype = new hxt;

function llc() {
    this.bog = "3 Bonus sümboliga suvalises positsioonis võidab 10 Tasuta keerutust.";
    this.laz = "Iga ADMIRAL NELSON i sümbol kahekordistab scatteri võidu!";
    this.gvu = "2, 3, 4 või 5 SCATTER sümbolit annab võidu igas positsioonis. Iga ADMIRAL NELSON i sümbol kahekordistab scatteri võidu!";
    this.zna = "ADMIRAL NELSON asendab kõik sümbolid välja arvatud SCATTER ja LAEVA sümbol.";
    this.jjf = "Laeva sümbol asendab kõik sümbolid välja arvatud SCATTER ja ADMIRAL sümboli boonuse ajal. Wild sümbol asendub kõreima võimaliku võiduga.";
    this.rwm = "SCATTER kahekordistab!";
    this.umo = "Oled võitnud 10 tasuta keerutust!"
}
llc.prototype = new vyn;

function bfj() {
    this.bog = "3 σύμβολα ΠΛΟΙΟ σε οποιαδήποτε θέση κερδίζουν 10 παιχνίδια BONUS.";
    this.laz = "Κάθε σύμβολο Admiral Nelson διπλασιάζει το κέρδος Scatter!";
    this.gvu = "2,3 ή 4 σύμβολα SCATTER κερδίζουν σε οποιαδήποτε θέση. Κάθε σύμβολο ADMIRAL NELSON διπλασιάζει το κέρδος Scatter!";
    this.zna = "Ο Admiral Nelson αντικαθιστά όλα τα σύμβολα, εκτός τα σύμβολα SCATTER και ΠΛΟΙΟ.";
    this.jjf = "Το ΠΛΟΙΟ αντικαθιστά κατά τη διάρκεια του BONUS όλα τα σύμβολα εκτός SCATTER και ADMIRAL. Τα σύμβολα WILD αντικαθιστούν πάντα με στόχο το μέγιστο δυνατό κέρδος.";
    this.rwm = "Διπλασιασμός Scatter!";
    this.umo = "Κερδίσατε 10 επιπλέον παιχνίδια BONUS!"
}
bfj.prototype = new efc;

function eqw() {
    this.bog = "3 символа КОРАБ в коя да е позиция печелят 10 БОНУС ЗАВЪРТАНИЯ.";
    this.laz = "Всеки символ АДМИРАЛ НЕЛСЪН ще удвои СКАТЕР печалбата!";
    this.gvu = "2, 3, 4 или 5 символа СКАТЕР на произволна позиция образуват печалба. Всеки символ АДМИРАЛ НЕЛСЪН ще удвои СКАТЕР печалбата!";
    this.zna = "АДМИРАЛ НЕЛСЪН замества всички символи с изключение на символите СКАТЕР и КОРАБ.";
    this.jjf = "Символът КОРАБ замества всичките символи, освен символите СКАТЕР и АДМИРАЛ НЕЛСЪН по време на бонус играта. Символът WILD замества символите за максимална печалба.";
    this.rwm = "СКАТЕР удвояване!";
    this.umo = "Печелите допълнителни 10 БОНУС ЗАВЪРТАНИЯ!"
}
eqw.prototype = new njp;

function vuk() {
    this.bog = "3 გემის სიმბოლო ნებისმიერ პოზიციაზე მოგაგებინებს 10 BONUS თამაშს.";
    this.laz = "თითოეული Admiral Nelson-ის სიმბოლო გააორმაგებს Scatter მოგებას!";
    this.gvu = "2, 3, 4 ან 5 SCATTER სიმბოლო იგებს  ნებისმიერ პოზიციაზე. თითოეული ADMIRAL NELSON-ის სიმბოლო გააორმაგებს Scatter მოგებას!";
    this.zna = "ADMIRAL NELSON ანაცვლებს ყველა სიმბოლოს გარდა SCATTER და გემის სიმბოლოებისა.";
    this.jjf = "გემის სიმბოლო ანაცვლებს ყველა სიმბოლოებს გარდა SCATTER და ADMIRAL-ის სიმბოლოებისა ბონუსის განმავლობაში.";
    this.rwm = "Scatter x2";
    this.umo = "თქვენ მოიგებთ დამატებით 10 BONUS თამაშს!"
}
vuk.prototype = new hev;

function ihb() {
    this.bog = "3 HAJÓ szimbólummal bármely helyen 10 SZABAD JÁTÉKOT nyer.";
    this.laz = "Minden Nelson Admirális szimbólum megduplázza a scatter nyereményt!";
    this.gvu = "2, 3, 4 vagy 5 SCATTER szimbólumok minden helyen fizetnek. Minden Nelson Admirális szimbólum megduplázza a scatter nyereményt!";
    this.zna = "NELSON ADMIRÁLIS minden szimbólumot helyettesít, kivéve a SCATTER és HAJÓ szimbólumokat.";
    this.jjf = "A Szabad Játék Bónusz alatt a HAJÓ minden szimbólumot helyettesít, kivéve a SCATTER és ADMIRAL szimbólumokat.";
    this.rwm = "Dupla Scatter!";
    this.umo = "10 extra Szabad játékot nyert!"
}
ihb.prototype = new ruz;

function aak() {
    this.bog = "3 simboluri CORABIE în orice poziţie câştigă 10 BONUSSPIN.";
    this.laz = "Fiecare simbol Amiral Nelson dublează un câştig scatter!";
    this.gvu = "2, 3, 4 sau 5 simboluri SCATTER câştigă în fiecare poziţie. Fiecare simbol Amiral Nelson dublează un câştig scatter!";
    this.zna = "ADMIRAL NELSON înlocuieşte fiecare simbol, exceptând simbolurile SCATTER şi CORABIE.";
    this.jjf = "Simbolul CORABIE înlocuieşte în bonus fiecare simbol, exceptând simbolurile SCATTER şi ADMIRAL.";
    this.rwm = "Dublu Scatter!";
    this.umo = "Aţi câştigat alţi 10 BONUSSPIN!"
}
aak.prototype = new dnn;

function aqh() {
    this.bog = "3 símbolos de navios em cada posição ganham 10 BONUSSPINS.";
    this.laz = "Cada símbolo Admiral Nelson duplicará o ganho scatter!";
    this.gvu = "2, 3, 4 ou 5 símbolos SCATTER ganham em qualquer posição. Cada símbolo Admiral Nelson duplica um ganho Scatter!";
    this.zna = "ADMIRAL NELSON substitui todos símbolos exceto símbolos SCATTER e SHIP.";
    this.jjf = "Um símbolo SHIP substitui todos símbolos exceto símbolos SCATTER e ADMIRA durante Bonus.";
    this.rwm = "Scatter Double!";
    this.umo = "Ganhou mais outros 10 BONUSSPINS!"
}
aqh.prototype = new xdo;

function xbd() {
    this.bog = "3 symboles BÂTEAUX sur toute position gagnent 10 jeux gratuits.";
    this.laz = "Chaque symbole Admiral Nelson double un gain Scatter!";
    this.gvu = "2, 3, 4 ou 5 symboles SCATTER gagnent sur toute position. Chaque symbole AMIRAL NELSON double un gain Scatter!";
    this.zna = "AMIRAL NELSON remplace tout symbole, exception faite des symboles SCATTER et BÂTEAU.";
    this.jjf = "Un symbole BÂTEAU dans le jeu gratuit remplace tout symbole exception faite des symboles SCATTER et ADMIRAL.";
    this.rwm = "Double Scatter!";
    this.umo = "Vous avez gagné un supplément de 10 BONUSSPINS!"
}
xbd.prototype = new vcv;

function nmd() {
    this.bog = "3 simbola BRODA na bilo kojoj poziciji osvajaju 10 BESPLATNIH IGARA.";
    this.laz = "Svaki Admiral Nelson simbol udvostručuje scatter dobitak.";
    this.gvu = "2, 3, 4 ili 5 SCATTER simbola na bilo kojoj poziciji su dobitak. Svaki simbol Admirala Nelsona udvostručuje scatter dobitak.";
    this.zna = "ADMIRAL NELSON zamjenjuje sve simbole izuzev SCATTER i BROD simbola.";
    this.jjf = "BROD simbol zamjenjuje sve simbole u besplatnim igrama izuzev SCATTER i ADMIRAL simbola.";
    this.rwm = "Scatter udvostručen!";
    this.umo = "Osvojili ste dodatnih 10 BESPLATNIH IGARA!"
}
nmd.prototype = new uri;

function phs() {
    this.bog = "3 simboli NAVE su ogni posizione vincono 10 BONUSSPIN.";
    this.laz = "Ogni simbolo Admiral Nelson raddoppia una vincita Scatter!";
    this.gvu = "2, 3, 4 o 5 simboli SCATTER vincono su ogni posizione. Ogni simbolo Admiral Nelson raddoppia una vincita Scatter!";
    this.zna = "ADMIRAL NELSON sostituisce tutti i simboli, tranne i simboli SCATTER e NAVE.";
    this.jjf = "Un simbolo NAVE sostituisce ogni simbolo, tranne i simboli SCATTER e ADMIRAL durante il Bonus.";
    this.rwm = "Scatter Double!";
    this.umo = "Hai vinto altri 10 BONUSSPIN!"
}
phs.prototype = new yoq;

function kby() {
    this.bog = "3 SKEPPS-symboler på någon position ger 10 BONUSSPINN.";
    this.laz = "Varje Admiral Nelson-symbol dubblar Scatter-vinsten!";
    this.gvu = "2, 3, 4 eller 5 SCATTER-symboler ger vinst oavsett positioner. Varje Admiral Nelson-symbol dubblar Scatter-vinsten!";
    this.zna = "ADMIRAL NELSON ersätter alla symboler utom SCATTER- och SKEPPS-symbolerna.";
    this.jjf = "SKEPPS-symbolerna ersätter alla symboler utom SCATTER- och ADMIRAL-symbolerna under bonusomgången.";
    this.rwm = "Scatter dubblering!";
    this.umo = "Du har vunnit ytterligare 10 BONUSSPINN!"
}
kby.prototype = new qzw;

function zqf() {
    this.srz = {
        backgroundColor: "rgb(0, 0, 0)"
    };
    this.zbv = {
        backgroundColor: "rgb(0,0,0)",
        pbh: "rgba(0,0,0,0.3)"
    };
    this.tnv = {
        font: "arial",
        ghh: "bold",
        backgroundColor: "black",
        iyj: "rgb(0,100,10)",
        mew: "rgb(80,255,100)",
        mxu: "rgb(120,120,120)",
        jeb: "red",
        bwj: "white",
        bbm: null
    };
    this.xhi = {
        font: "arial",
        ghh: "bold",
        backgroundColor: "rgb(0,0,0)",
        anv: null,
        dhs: "rgb(255,255,255)",
        qlp: "rgb(30,30,30)",
        borderColor: "rgb(80,80,80)"
    };
    this.zvt = {
        font: "arial",
        ghh: "bold",
        backgroundColor: "black",
        niw: "rgb(50,50,50)",
        rve: "rgb(255,255,255)",
        dhs: "white",
        dwt: 0.8,
        rns: {
            hek: {
                font: "sanf-serif",
                ghh: "",
                textAlign: "center",
                gry: "round",
                backgroundColor: "black",
                dhs: "white",
                borderColor: null,
                qlp: null,
                lcr: 1
            }
        }
    };
    this.uap = {
        font: "arial",
        ghh: "bold",
        backgroundColor: "rgb(20,20,30)",
        borderColor: "rgb(0,0,0)",
        fzz: "rgba(255,255,255,0.2)",
        dhs: "rgb(255,255,255)",
        nrt: "rgba(0,0,0,0.3)",
        display: {
            owe: "arial",
            ahe: "arial",
            ghh: "bold",
            dhs: "rgb(255,255,255)",
            wxx: "rgb(255,255,255)",
            backgroundColor: "rgba(0,0,0,0.2)",
            borderColor: "rgba(255,255,255,0.5)"
        },
        hek: {
            font: "arial",
            ghh: "bold",
            dhs: "rgb(0,0,0)",
            hkx: "rgb(150,150,150)",
            backgroundColor: "rgba(255,255,255,0.8)",
            anv: "rgba(255,255,255,1)",
            cnt: "rgba(255,255,255,0.8)",
            yiu: "rgba(255,255,255,1)",
            borderColor: "rgba(200,200,200,0.5)",
            gry: "rect",
            lvt: -1
        }
    };
    this.xho = {
        font: "arial",
        ghh: "bold",
        zfc: "rgb(0,0,200)",
        bip: "rgb(255,255,255)",
        pot: "rgb(0,0,150)",
        backgroundColor: "rgb(220,240,255)",
        utk: "rgb(180,220,255)",
        etc: "rgb(10,20,25)",
        oxs: "rgb(130,220,255)",
        aqk: "rgb(130,190,255)",
        dhs: "rgb(255,255,255)",
        kke: "rgb(130,190,255)",
        gpj: "rgb(100,160,255)",
        irj: "rgb(255,255,255)",
        hek: {
            gry: "rect",
            font: "arial",
            ghh: "bold",
            dhs: "rgb(255,255,255)",
            fwo: null,
            backgroundColor: "rgb(90,160,255)",
            hwq: "rgb(90,160,255)",
            borderColor: "rgb(60,120,200)",
            qlp: "rgb(40,80,140)"
        },
        nor: {
            gry: "round",
            font: "arial",
            ghh: "bold",
            dhs: "rgb(255,255,255)",
            fwo: null,
            backgroundColor: "rgba(0,0,100,0.5)",
            hwq: "rgba(150,150,255,0.5)",
            borderColor: "rgb(90,170,255)",
            qlp: "rgb(40,80,140)"
        }
    };
    this.ruq = {};
    this.oal = {
        anf: ["rgb(255,0,0)", "rgb(255,200,0)", "rgb(0,255,200)", "rgb(240,240,240)"]
    };
    this.wxs = {
        type: "left",
        font: "arial",
        ghh: "bold",
        backgroundColor: "rgba(0,0,0,0.7)",
        anv: null,
        borderColor: "rgb(0,0,0)",
        qlp: "rgb(180,180,180)",
        utk: "rgba(0,0,0,0.6)",
        pxk: null,
        wxx: "rgb(255,200,0)",
        dhs: "white",
        wpk: {
            font: "arial",
            ghh: "bold",
            backgroundColor: "rgb(100,100,100)",
            anv: "rgb(100,100,100)",
            cnt: null,
            yiu: null,
            borderColor: "rgb(100,100,100)",
            dhs: "rgb(255,255,255)",
            hkx: "rgb(255,200,0)",
            gry: "triangle",
            lvt: 1
        },
        cwu: {
            font: "arial",
            ghh: "bold",
            backgroundColor: "rgb(100,100,100)",
            anv: "rgb(100,100,100)",
            cnt: null,
            yiu: null,
            borderColor: "rgb(100,100,100)",
            dhs: "rgb(255,255,255)",
            hkx: "rgb(255,200,0)",
            gry: "triangle",
            lvt: 0
        },
        qvw: {
            font: "arial",
            ghh: "bold",
            backgroundColor: "rgb(100,100,100)",
            anv: "rgb(15,15,15)",
            cnt: "rgb(100,100,100)",
            yiu: "rgb(15,15,15)",
            borderColor: "rgb(150,150,150)",
            dhs: "rgb(255,255,255)",
            hkx: "rgb(255,200,0)",
            gry: "rect",
            lvt: -1
        },
        display: {
            ahe: "sans-serif",
            owe: "sans-serif",
            ghh: "bold",
            wxx: null,
            dhs: "yellow",
            borderColor: "rgb(100,100,100)",
            qlp: null,
            backgroundColor: "black"
        },
        ies: {
            font: "arial",
            ghh: "bold",
            backgroundColor: null,
            anv: null,
            dhs: "white",
            textAlign: "left",
            type: "round"
        }
    };
    this.pnn = {
        font: "arial",
        ghh: "bold",
        backgroundColor: "rgb(180,180,180)",
        anv: "rgb(120,120,120)",
        borderColor: "rgb(80,80,80)",
        qlp: "rgb(30,30,30)",
        dhs: "white",
        sxg: {
            font: "arial",
            ghh: "bold",
            backgroundColor: "rgba(0,0,0,0.5)",
            anv: null,
            cnt: "rgba(100,100,100,0.5)",
            yiu: null,
            borderColor: null,
            dhs: "white",
            gry: "rect",
            lvt: -1
        },
        wpk: {
            font: "arial",
            ghh: "bold",
            backgroundColor: "rgb(255,255,255)",
            anv: "rgb(255,255,255)",
            cnt: null,
            yiu: null,
            borderColor: "rgb(255,255,255)",
            dhs: "rgb(0,0,0)",
            hkx: "rgb(0,0,0)",
            gry: "triangle",
            lvt: 1
        },
        cwu: {
            font: "arial",
            ghh: "bold",
            backgroundColor: "rgb(255,255,255)",
            anv: "rgb(255,255,255)",
            cnt: null,
            yiu: null,
            borderColor: "rgb(255,255,255)",
            dhs: "rgb(0,0,0)",
            hkx: "rgb(0,0,0)",
            gry: "triangle",
            lvt: 0
        },
        zcl: {
            gry: "rect",
            font: "arial",
            ghh: "bold",
            textAlign: "center",
            backgroundColor: "rgba(255,255,255,0.1)",
            dhs: "white",
            lcr: 1,
            borderColor: "rgb(255,255,255)",
            qlp: "rgb(220,220,220)"
        },
        display: {
            ahe: "sans-serif",
            owe: "sans-serif",
            ghh: "bold",
            wxx: null,
            dhs: "white",
            borderColor: "white",
            qlp: null,
            backgroundColor: "rgb(0,0,0)"
        },
        ies: {
            font: "arial",
            ghh: "bold",
            backgroundColor: null,
            anv: null,
            dhs: "white",
            textAlign: "left",
            type: "round"
        }
    };
    this.baa = {
        wsr: [{
            ahe: "sans-serif",
            pmp: "sans-serif",
            ghh: "bold",
            wxx: "rgb(236,225,207)",
            pdu: "rgb(214,170,102)",
            fwo: "rgb(245,220,148)",
            zkn: "rgb(190,137,40)",
            heb: "rgba(150,120,30,0.3)",
            borderColor: "rgb(150,110,30)",
            qlp: "rgb(200,170,50)",
            backgroundColor: "rgb(100,70,30)",
            anv: "rgb(0,0,0)",
            fzk: "rgb(0,0,0)"
        }, {
            ahe: "sans-serif",
            pmp: "sans-serif",
            ghh: "bold",
            wxx: "rgb(230,230,230)",
            pdu: "rgb(190,190,190)",
            fwo: "rgb(240,240,240)",
            zkn: "rgb(160,160,160)",
            heb: "rgba(120,120,120,0.3)",
            borderColor: "rgb(120,120,120)",
            qlp: "rgb(170,170,170)",
            backgroundColor: "rgb(100,100,100)",
            anv: "rgb(0,0,0)",
            fzk: "rgb(0,0,0)"
        }],
        ivc: {
            ahe: "sans-serif",
            pmp: "sans-serif",
            ghh: "bold",
            wxx: "rgb(236,225,207)",
            pdu: "rgb(214,170,102)",
            fwo: "rgb(245,220,148)",
            zkn: "rgb(190,137,40)",
            heb: null,
            borderColor: null,
            qlp: null,
            backgroundColor: null,
            anv: null,
            fzk: null
        },
        ezl: {}
    };
    this.hao = {
        zwm: "rgb(240,240,240)",
        qgf: "rgb(255,255,255)",
        borderColor: "rgb(200,200,200)",
        nrt: "rgba(0,80,150,0.6)",
        display: {
            owe: "arial",
            ahe: "arial",
            ghh: "bold",
            dhs: "rgb(0,80,151)",
            wxx: "rgb(0,30,80)",
            backgroundColor: "rgb(255,255,255)",
            borderColor: "rgb(200,200,200)"
        }
    }
}

function xkh() {
    this.zbv.ypa = false;
    this.zbv.czc = false;
    this.exn = {
        display: {
            owe: "sans-serif",
            ahe: "sans-serif",
            ghh: "bold",
            backgroundColor: "black",
            dhs: "rgb(255,255,50)",
            wxx: "rgb(255,255,50)",
            borderColor: "rgb(230,230,230)",
            qlp: "rgb(160,160,160)"
        },
        ldl: {
            owe: "sans-serif",
            ahe: "sans-serif",
            ghh: "bold",
            backgroundColor: "rgba(0,0,0,0.8)",
            dhs: "rgb(255,255,50)",
            wxx: "rgb(255,255,50)",
            borderColor: null,
            qlp: null
        },
        sal: {
            owe: "arial",
            ahe: "arial",
            ghh: "bold",
            backgroundColor: "rgba(0,0,0,0.5)",
            dhs: "white",
            wxx: "white",
            borderColor: null,
            qlp: null
        },
        xzz: {
            font: "arial",
            ghh: "bold",
            backgroundColor: "rgb(230,230,230)",
            anv: null,
            cnt: null,
            yiu: null,
            borderColor: "rgb(230,230,230)",
            dhs: "rgb(0,0,0)",
            hkx: "rgb(0,0,0)",
            gry: "rrect",
            lvt: 3
        },
        hws: {
            font: "sans-serif",
            ghh: "bold",
            dhs: "rgb(255,255,50)",
            backgroundColor: "black",
            borderColor: null,
            qlp: null
        },
        rns: {
            backgroundColor: null,
            anv: null,
            utk: "rgb(0,0,0)",
            etc: "rgb(0,0,0)",
            rxl: null,
            tci: 0.5,
            hek: {
                gry: "rect",
                font: "verdana",
                ghh: "bold",
                backgroundColor: "rgb(0,0,0)",
                hwq: "rgb(150,150,150)",
                dhs: "rgb(255,255,255)",
                fwo: "rgb(255,255,0)",
                borderColor: "rgb(150,150,150)",
                qlp: "rgb(0,0,0)"
            },
            zxq: {
                gry: "round",
                font: "verdana",
                ghh: "bold",
                backgroundColor: "rgba(0,0,0,0.5)",
                hwq: "rgba(150,150,150,0.5)",
                dhs: "rgb(255,255,255)",
                fwo: "rgb(255,255,255)",
                borderColor: "rgb(200,200,200)",
                qlp: "rgb(100,100,100)"
            },
            okr: {
                gry: "round",
                font: "verdana",
                ghh: "bold",
                backgroundColor: "rgba(0,0,0,0.5)",
                hwq: "rgba(150,150,150,0.5)",
                dhs: "rgb(255,255,255)",
                fwo: "rgb(255,255,255)",
                borderColor: "rgb(200,200,200)",
                qlp: "rgb(100,100,100)"
            },
            oyf: {
                gry: "rect",
                font: "verdana",
                ghh: "bold",
                backgroundColor: "rgba(0,0,0,0.5)",
                hwq: "rgba(150,150,150,0.5)",
                dhs: "rgba(255,255,255,0.8)",
                fwo: "rgb(255,255,255)",
                borderColor: "rgb(200,200,200)",
                qlp: "rgb(100,100,100)"
            },
            xpt: {
                gry: "rect",
                font: "verdana",
                ghh: "bold",
                backgroundColor: "rgba(0,0,0,0.5)",
                hwq: "rgba(150,150,150,0.5)",
                dhs: "rgba(255,255,255,0.8)",
                fwo: "rgb(255,255,255)",
                borderColor: "rgb(200,200,200)",
                qlp: "rgb(100,100,100)"
            },
            gzz: {
                font: "verdana",
                ghh: "bold",
                backgroundColor: "rgb(75, 5, 5)",
                borderColor: null,
                dhs: "rgb(255, 255, 50)"
            },
            win: {
                font: "helvetica",
                ghh: "bold",
                backgroundColor: null,
                borderColor: null,
                dhs: "rgb(240, 231, 203)"
            }
        }
    };
    this.odb = {
        backgroundColor: null,
        utk: "rgb(0,0,0)",
        etc: "rgb(0,0,0)",
        display: {
            owe: "sans-serif",
            ahe: "sans-serif",
            ghh: "bold",
            backgroundColor: "black",
            dhs: "yellow",
            wxx: "yellow",
            borderColor: "rgb(230,230,230)",
            qlp: "rgb(160,160,160)"
        },
        sal: {
            owe: "arial",
            ahe: "arial",
            ghh: "bold",
            backgroundColor: "rgba(0,0,0,0.5)",
            dhs: "white",
            wxx: "white",
            borderColor: null,
            qlp: null
        },
        kgp: {
            owe: "verdana",
            ahe: "verdana",
            ghh: "bold",
            wxx: "white",
            dhs: "yellow"
        },
        hek: {
            gry: "rect",
            font: "verdana",
            ghh: "bold",
            backgroundColor: "rgb(0,0,0)",
            hwq: "rgb(150,150,150)",
            dhs: "rgb(255,255,255)",
            borderColor: "rgb(150,150,150)",
            qlp: "rgb(0,0,0)"
        },
        zxq: {
            gry: "round",
            font: "verdana",
            ghh: "bold",
            backgroundColor: "rgba(0,0,0,0.5)",
            hwq: "rgba(150,150,150,0.5)",
            dhs: "rgb(255,255,255)",
            fwo: "rgb(255,255,0)",
            borderColor: "rgb(200,200,200)",
            qlp: "rgb(100,100,100)"
        },
        okr: {
            gry: "round",
            font: "verdana",
            ghh: "bold",
            backgroundColor: "rgba(0,0,0,0.5)",
            hwq: "rgba(150,150,150,0.5)",
            dhs: "rgb(255,255,255)",
            fwo: "rgb(255,255,0)",
            borderColor: "rgb(200,200,200)",
            qlp: "rgb(100,100,100)"
        },
        gzz: {
            font: "verdana",
            ghh: "bold",
            backgroundColor: "rgb(75, 5, 5)",
            dhs: "rgb(255, 255, 0)"
        }
    };
    this.ehc = {
        backgroundColor: null,
        utk: "rgb(0,0,0)",
        etc: "rgb(0,0,0)",
        hek: {
            gry: "rect",
            font: "verdana",
            ghh: "bold",
            backgroundColor: "rgb(0,0,0)",
            hwq: "rgb(150,150,150)",
            dhs: "rgb(255,255,255)",
            borderColor: "rgb(150,150,150)",
            qlp: "rgb(0,0,0)"
        },
        zxq: {
            gry: "round",
            font: "verdana",
            ghh: "bold",
            backgroundColor: "rgba(0,0,0,0.5)",
            hwq: "rgba(150,150,150,0.5)",
            dhs: "rgb(255,255,255)",
            fwo: "rgb(255,255,0)",
            borderColor: "rgb(200,200,200)",
            qlp: "rgb(100,100,100)"
        },
        okr: {
            gry: "round",
            font: "verdana",
            ghh: "bold",
            backgroundColor: "rgba(0,0,0,0.5)",
            hwq: "rgba(150,150,150,0.5)",
            dhs: "rgb(255,255,255)",
            fwo: "rgb(255,255,0)",
            borderColor: "rgb(200,200,200)",
            qlp: "rgb(100,100,100)"
        }
    };
    this.zvx = {
        dwt: 0,
        rxl: "rgba(0,0,0,0)",
        fcz: "rgba(0,0,0,0.5)"
    };
    this.qaw = {
        zst: "rgb(255,0,0)",
        rve: "rgb(255,255,0)",
        eqo: "white",
        udt: null,
        jzw: 0,
        zxp: 0.05,
        pwk: [{
            fsb: "rgb(180,180,30)",
            pdl: "rgb(255,220,0)",
            fdn: "rgb(180,180,30)",
            jgn: "rgb(255,255,0)"
        }, {
            fsb: "rgb(210,110,0)",
            pdl: "rgb(255,168,0)",
            fdn: "rgb(210,110,0)",
            jgn: "rgb(255,210,50)"
        }, {
            fsb: "rgb(0,50,180)",
            pdl: "rgb(0,68,220)",
            fdn: "rgb(0,50,180)",
            jgn: "rgb(0,100,255)"
        }, {
            fsb: "rgb(0,160,64)",
            pdl: "rgb(0,200,80)",
            fdn: "rgb(0,160,64)",
            jgn: "rgb(0,255,70)"
        }, {
            fsb: "rgb(140,30,140)",
            pdl: "rgb(200,0,200)",
            fdn: "rgb(140,30,140)",
            jgn: "rgb(255,30,255)"
        }, {
            fsb: "rgb(180,180,30)",
            pdl: "rgb(255,220,0)",
            fdn: "rgb(180,180,30)",
            jgn: "rgb(255,255,0)"
        }, {
            fsb: "rgba(200,200,50,0.7)",
            pdl: "rgba(255,255,150,0.7)",
            fdn: "rgba(200,200,50,0.7)",
            jgn: "rgba(255,255,150,0.7)"
        }]
    };
    this.npw = {
        font: "sans-serif",
        ghh: "bold",
        mvx: "red",
        jcn: "orange",
        niw: "white"
    };
    this.tai = {
        font: "sans-serif",
        ghh: "bold",
        mvx: "red",
        jcn: "orange",
        niw: "white"
    };
    this.bnj = {
        font: "sans-serif",
        ghh: "bold",
        dhs: "rgb(255,255,255)",
        backgroundColor: "rgb(0,0,0)",
        zby: "rgb(0,0,0)",
        hlo: "rgb(255,0,0)",
        ofo: "rgb(255,255,0)",
        vls: "rgb(80,80,80)",
        smv: "rgb(15,15,15)",
        urk: "rgb(0,0,0)",
        hgs: "rgb(180,180,180)",
        qpz: "rgb(0,0,0)",
        exd: 0.7
    }
}
xkh.prototype = new zqf;

function zkk() {
    this.zbv.czc = true;
    this.exn.hws.backgroundColor = "rgba(0,0,0,0.5)";
    this.exn.hws.borderColor = "rgb(30,40,60)";
    this.exn.rns.gzz.backgroundColor = "rgba(0,0,0,0.5)";
    this.exn.rns.gzz.borderColor = "rgb(30,40,60)";
    this.exn.rns.win.dhs = "rgb(240, 231, 203)";
    this.exn.rns.hek.backgroundColor = "rgb(0,20,80)";
    this.exn.rns.hek.hwq = "rgb(0,40,180)";
    this.exn.rns.hek.borderColor = "rgb(0,10,60)";
    this.exn.rns.hek.qlp = "rgb(0,0,0)";
    this.exn.rns.oyf.backgroundColor = "rgba(0,0,0,0.6)";
    this.exn.rns.oyf.hwq = "rgba(80,110,255,0.8)";
    this.exn.rns.oyf.borderColor = "rgb(80,110,255)";
    this.exn.rns.oyf.qlp = "rgb(30,45,100)";
    this.exn.rns.xpt.backgroundColor = "rgba(0,0,0,0.6)";
    this.exn.rns.xpt.hwq = "rgba(80,110,255,0.8)";
    this.exn.rns.xpt.borderColor = "rgb(80,110,255)";
    this.exn.rns.xpt.qlp = "rgb(30,45,100)";
    this.exn.rns.zxq.backgroundColor = "rgba(0,0,0,0.6)";
    this.exn.rns.zxq.hwq = "rgba(80,110,255,0.8)";
    this.exn.rns.zxq.borderColor = "rgb(80,110,255)";
    this.exn.rns.zxq.qlp = "rgb(30,45,100)";
    this.exn.rns.okr.backgroundColor = "rgba(0,0,0,0.6)";
    this.exn.rns.okr.hwq = "rgba(80,110,255,0.8)";
    this.exn.rns.okr.borderColor = "rgb(80,110,255)";
    this.exn.rns.okr.qlp = "rgb(30,45,100)";
    this.exn.yiz = {
        backgroundColor: null,
        anv: null,
        utk: null,
        etc: null,
        rxl: null,
        tci: 0,
        hek: {
            gry: "rect",
            font: "verdana",
            ghh: "bold",
            backgroundColor: "rgb(76,25,0)",
            hwq: "rgb(120,30,6)",
            dhs: "rgb(255,255,255)",
            fwo: "rgb(255,255,0)",
            borderColor: "rgb(120,70,0)",
            qlp: "rgb(50,10,0)"
        },
        oyf: {
            gry: "rect",
            font: "verdana",
            ghh: "bold",
            backgroundColor: "rgba(50,30,30,0.8)",
            hwq: "rgba(200,110,60,0.8)",
            dhs: "rgba(255,255,255,0.8)",
            fwo: "rgb(255,255,255)",
            borderColor: "rgb(160,90,50)",
            qlp: "rgb(40,15,0)"
        },
        xpt: {
            gry: "rect",
            font: "verdana",
            ghh: "bold",
            backgroundColor: "rgba(50,30,30,0.8)",
            hwq: "rgba(200,110,60,0.8)",
            dhs: "rgba(255,255,255,0.8)",
            fwo: "rgb(255,255,255)",
            borderColor: "rgb(160,90,50)",
            qlp: "rgb(40,15,0)"
        },
        zxq: {
            gry: "round",
            font: "verdana",
            ghh: "bold",
            backgroundColor: "rgba(50,30,30,0.8)",
            hwq: "rgba(200,110,60,0.8)",
            dhs: "rgb(255,255,255)",
            fwo: "rgb(255,255,255)",
            borderColor: "rgb(160,90,50)",
            qlp: "rgb(40,15,0)"
        },
        okr: {
            gry: "round",
            font: "verdana",
            ghh: "bold",
            backgroundColor: "rgba(50,30,30,0.8)",
            hwq: "rgba(200,110,60,0.8)",
            dhs: "rgb(255,255,255)",
            fwo: "rgb(255,255,255)",
            borderColor: "rgb(160,90,50)",
            qlp: "rgb(40,15,0)"
        },
        gzz: {
            font: "verdana",
            ghh: "bold",
            backgroundColor: "rgba(56,20,0,0.9)",
            borderColor: "rgb(40,10,0)",
            dhs: "rgb(255, 255, 0)"
        },
        win: {
            font: "helvetica",
            ghh: "bold",
            backgroundColor: null,
            borderColor: null,
            dhs: "rgb(255,255,255)"
        }
    };
    this.odb.gzz.backgroundColor = "rgb(0,0,40)";
    this.odb.hek.backgroundColor = "rgb(0,20,80)";
    this.odb.hek.borderColor = "rgb(0,40,140)";
    this.odb.hek.qlp = "rgb(0,0,40)";
    this.odb.zxq.backgroundColor = "rgba(0,0,0,0.6)";
    this.odb.zxq.borderColor = "rgb(80,110,255)";
    this.odb.zxq.qlp = "rgb(30,45,100)";
    this.odb.okr.backgroundColor = "rgba(0,0,0,0.6)";
    this.odb.okr.borderColor = "rgb(80,110,255)";
    this.odb.okr.qlp = "rgb(30,45,100)";
    this.zvt.rns.hek.backgroundColor = "rgb(0,20,80)";
    this.zvt.yiz = {
        hek: {
            font: "sanf-serif",
            ghh: "",
            textAlign: "center",
            gry: "round",
            backgroundColor: "rgb(76,25,0)",
            dhs: "white",
            borderColor: null,
            qlp: null,
            lcr: 1
        }
    };
    this.ehc.hek.backgroundColor = "rgb(0,20,80)";
    this.ehc.hek.borderColor = "rgb(0,40,140)";
    this.ehc.hek.qlp = "rgb(0,0,40)";
    this.ehc.zxq.backgroundColor = "rgba(0,0,0,0.6)";
    this.ehc.zxq.borderColor = "rgb(80,110,255)";
    this.ehc.zxq.qlp = "rgb(30,45,100)";
    this.ehc.okr.backgroundColor = "rgba(0,0,0,0.6)";
    this.ehc.okr.borderColor = "rgb(80,110,255)";
    this.ehc.okr.qlp = "rgb(30,45,100)";
    this.ehc.uxr = {
        font: "sans-serif",
        ahe: "verdana",
        wxx: "white",
        ghh: "bold",
        dhs: "yellow"
    };
    this.ehc.wvo = {
        font: "sans-serif",
        ghh: "bold",
        dhs: "yellow",
        jxu: "sans-serif",
        ajn: "verdana",
        bah: "bold",
        ppf: "white"
    };
    this.qaw = {
        zst: "rgb(255,255,255)",
        rve: null,
        eqo: "rgb(255,255,200)",
        udt: "rgb(150,120,70)",
        jzw: 1,
        zxp: 0.025,
        pwk: [{
            fsb: "rgb(100,0,0)",
            pdl: "rgb(166,26,26)",
            fdn: "rgb(100,0,0)",
            jgn: "rgb(230,20,20)"
        }, {
            fsb: "rgb(100,0,0)",
            pdl: "rgb(166,26,26)",
            fdn: "rgb(100,0,0)",
            jgn: "rgb(230,20,20)"
        }, {
            fsb: "rgb(100,0,0)",
            pdl: "rgb(166,26,26)",
            fdn: "rgb(100,0,0)",
            jgn: "rgb(230,20,20)"
        }, {
            fsb: "rgb(25,25,116)",
            pdl: "rgb(53,53,214)",
            fdn: "rgb(25,25,116)",
            jgn: "rgb(50,50,255)"
        }, {
            fsb: "rgb(25,25,116)",
            pdl: "rgb(53,53,214)",
            fdn: "rgb(25,25,116)",
            jgn: "rgb(50,50,255)"
        }, {
            fsb: "rgb(0,50,20)",
            pdl: "rgb(23,91,57)",
            fdn: "rgb(0,50,20)",
            jgn: "rgb(0,160,80)"
        }, {
            fsb: "rgb(0,50,20)",
            pdl: "rgb(23,91,57)",
            fdn: "rgb(0,50,20)",
            jgn: "rgb(0,160,80)"
        }, {
            fsb: "rgb(100,30,60)",
            pdl: "rgb(162,50,101)",
            fdn: "rgb(100,30,60)",
            jgn: "rgb(220,20,110)"
        }, {
            fsb: "rgb(100,30,60)",
            pdl: "rgb(162,50,101)",
            fdn: "rgb(100,30,60)",
            jgn: "rgb(220,20,110)"
        }, {
            fsb: "rgb(10,90,100)",
            pdl: "rgb(25,140,155)",
            fdn: "rgb(10,90,100)",
            jgn: "rgb(0,200,220)"
        }, {
            fsb: "rgb(100,0,0)",
            pdl: "rgb(166,26,26)",
            fdn: "rgb(100,0,0)",
            jgn: "rgb(230,20,20)"
        }, {
            fsb: "rgba(200,200,50,0.7)",
            pdl: "rgba(255,255,150,0.7)",
            fdn: "rgba(200,200,50,0.7)",
            jgn: "rgba(255,255,150,0.7)"
        }]
    };
    this.qrl = {
        font: "arial",
        ghh: "bold",
        dhs: "rgb(26,9,0)",
        niw: "rgb(170,150,100)",
        den: null,
        vdr: null,
        kke: "rgb(209,190,121)",
        lcr: 0.6
    };
    this.dbe = {
        font: "arial",
        ghh: "bold",
        lcr: 0.6,
        den: null,
        gsp: null,
        cvs: "rgb(26,9,0)",
        wxq: "rgb(209,190,121)",
        qtm: "rgb(110,60,10)",
        krt: "rgb(26,9,0)",
        cgp: "rgb(170,150,100)",
        kke: "rgb(209,190,121)",
        gpj: "rgb(110,60,10)",
        irj: "rgb(26,9,0)"
    };
    this.pnn.backgroundColor = "rgb(30,30,140)";
    this.pnn.anv = "rgb(0,0,50)";
    this.pnn.yiz = {
        font: "arial",
        ghh: "bold",
        backgroundColor: "rgb(220,195,110)",
        anv: "rgb(107,80,40)",
        borderColor: "rgb(80,80,80)",
        qlp: "rgb(30,30,30)",
        dhs: "white",
        sxg: {
            font: "arial",
            ghh: "bold",
            backgroundColor: "rgba(0,0,0,0.5)",
            anv: null,
            cnt: "rgba(100,100,100,0.5)",
            yiu: null,
            borderColor: null,
            dhs: "white",
            gry: "rect",
            lvt: -1
        },
        wpk: {
            font: "arial",
            ghh: "bold",
            backgroundColor: "rgb(255,255,255)",
            anv: "rgb(255,255,255)",
            cnt: null,
            yiu: null,
            borderColor: "rgb(255,255,255)",
            dhs: "rgb(0,0,0)",
            hkx: "rgb(0,0,0)",
            gry: "triangle",
            lvt: 1
        },
        cwu: {
            font: "arial",
            ghh: "bold",
            backgroundColor: "rgb(255,255,255)",
            anv: "rgb(255,255,255)",
            cnt: null,
            yiu: null,
            borderColor: "rgb(255,255,255)",
            dhs: "rgb(0,0,0)",
            hkx: "rgb(0,0,0)",
            gry: "triangle",
            lvt: 0
        },
        zcl: {
            gry: "rect",
            font: "arial",
            ghh: "bold",
            textAlign: "center",
            backgroundColor: "rgba(255,255,255,0.1)",
            dhs: "white",
            lcr: 1,
            borderColor: "rgb(255,255,255)",
            qlp: "rgb(220,220,220)"
        },
        display: {
            ahe: "sans-serif",
            owe: "sans-serif",
            ghh: "bold",
            wxx: null,
            dhs: "white",
            borderColor: "white",
            qlp: null,
            backgroundColor: "rgb(0,0,0)"
        },
        ies: {
            font: "arial",
            ghh: "bold",
            backgroundColor: null,
            anv: null,
            dhs: "white",
            textAlign: "left",
            type: "round"
        }
    }
}
zkk.prototype = new xkh;

function ryk() {
    this.type = "800_600";
    this.yxe = true;
    this.hfc = false;
    this.gpr = false;
    this.kut = true;
    this.zrj = false;
    this.dqo = false;
    this.chn = false;
    this.btl = false
}

function hkg() {
    this.yxe = false;
    this.canvas = {
        exo: new drx(0, 0, 800, 620)
    };
    this.vbe = {
        exo: new drx(),
        ewh: 0
    };
    this.zbv = {
        exo: new drx(0, 20, 800, 600),
        lbi: 0
    };
    this.lzk = {
        mxh: new drx(0, 40, 440, 36),
        uub: new drx(5, 2, 140, 30),
        ndj: new drx(150, 2, 140, 30),
        wcy: new drx(295, 2, 140, 30),
        ofg: {
            fontSize: 14,
            textIndent: 32
        }
    };
    this.tnv = {
        zbv: {
            exo: new drx(0, 0, 500, 360),
            gqe: new drx(0, 0, 500, 360),
            oor: new drx(5, 325, 490, 30),
            khu: new drx(5, 329, 490, 14),
            ixj: new drx(50, 345, 400, 6),
            dgg: new drx(5, 285, 490, 70),
            fontSize: 14,
            tee: 18,
            oso: 5,
            myu: 12,
            ars: 5,
            hww: 2,
            gkj: 0,
            qaw: {
                exo: new drx(),
                x: 0,
                bqd: 0,
                noa: 0
            },
            sot: {
                gqe: new drx(),
                khu: new drx(),
                ote: new drx()
            }
        },
        qva: {
            exo: new drx(0, 0, 800, 600),
            gqe: new drx(140, 105, 520, 390),
            oor: new drx(),
            khu: new drx(140, 295, 520, 21),
            ixj: new drx(192, 320, 416, 3),
            dgg: new drx(140, 275, 520, 95),
            fontSize: 18,
            tee: 24,
            oso: 0,
            myu: 12,
            ars: 7,
            hww: 3,
            gkj: 9,
            qaw: {
                exo: new drx(400, 459, 0, 3),
                x: 33,
                bqd: 15,
                noa: 20
            },
            sot: {
                gqe: new drx(50, 0, 700, 450),
                khu: new drx(100, 460, 600, 60),
                ote: new drx(200, 540, 400, 40)
            }
        },
        azk: {
            exo: new drx(0, 0, 800, 600),
            gqe: new drx(0, 0, 800, 600),
            oor: new drx(),
            khu: new drx(50, 420, 700, 21),
            ixj: new drx(),
            dgg: new drx(50, 410, 700, 80),
            fontSize: 18,
            tee: 24,
            oso: 0,
            myu: 12,
            ars: 7,
            hww: 0,
            gkj: 0,
            qaw: {
                exo: new drx(260, 119, 280, 280),
                x: 0,
                bqd: 0,
                noa: 0
            },
            sot: {
                gqe: new drx(50, 0, 700, 450),
                khu: new drx(100, 460, 600, 60),
                ote: new drx(200, 540, 400, 40)
            }
        }
    };
    this.xhi = {
        exo: new drx(0, 0, 800, 20),
        fontSize: 12,
        kgk: 19,
        jll: 15,
        etw: 120,
        myu: 2,
        ars: 2,
        qbk: 2,
        rmm: 40
    };
    this.zvt = {
        exo: new drx(0, 20, 800, 70),
        fontSize: 10,
        hls: 10,
        qjb: 20,
        dak: 40,
        lbi: 4,
        myu: 10,
        ars: 5,
        oso: 10,
        ofg: {
            fontSize: 17,
            oso: 2
        }
    };
    this.xho = {
        exo: new drx(0, 20, 800, 600),
        mxh: new drx(),
        ofg: {
            ogn: 20,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            crl: 8,
            tpl: 8,
            lbi: 0
        },
        iqs: new drx(0, 20, 800, 40),
        kga: new drx(0, 100, 800, 40),
        kii: new drx(0, 140, 800, 40),
        zeq: new drx(0, 180, 800, 40),
        pea: new drx(225, 275, 350, 100),
        bqr: new drx(200, 480, 400, 40),
        six: {
            biq: new drx(340, 540, 120, 55)
        },
        lvc: {
            biq: new drx(250, 540, 120, 55),
            dep: new drx(430, 540, 120, 55)
        },
        rjc: 36,
        fontSize: 30,
        rcv: 22,
        ars: 3,
        myu: 5,
        lbi: 2,
        uhw: 3,
        jsq: 10
    };
    this.ruq = {
        exo: new drx(-10, 25, 310, 50),
        iqs: new drx(10, 4, 240, 24),
        khu: new drx(10, 28, 240, 18),
        jbl: new drx(260, 10, 40, 30),
        aiv: new drx(7, 2, 26, 26),
        zoh: 16,
        ogn: 12,
        hhy: 18
    };
    this.oal = {
        exo: new drx(150, 160, 500, 280),
        zoh: 26,
        fontSize: 20,
        yoo: new drx(465, 5, 30, 30),
        iqs: new drx(30, 5, 440, 30),
        bqr: new drx(20, 40, 460, 160),
        kzp: new drx(20, 230, 460, 40),
        ofg: {
            fontSize: 20
        }
    };
    this.wxs = {
        exo: new drx(0, 55, 560, 430),
        lbi: 2,
        jfs: 0,
        wgk: 5,
        kkf: 10,
        zoh: 26,
        nlq: 20,
        iqs: new drx(30, 15, 500, 30),
        iyo: new drx(20, 50, 520, 60),
        pcv: new drx(40, 60, 220, 40),
        iqm: new drx(328, 60, 30, 40),
        ntu: new drx(360, 60, 120, 40),
        kcb: new drx(482, 60, 30, 40),
        qwx: new drx(20, 120, 520, 200),
        nby: new drx(40, 120, 480, 40),
        chr: new drx(30, 160, 280, 40),
        onj: new drx(328, 160, 30, 40),
        exe: new drx(360, 160, 120, 40),
        nsy: new drx(482, 160, 30, 40),
        rtz: new drx(30, 215, 280, 40),
        gch: new drx(328, 215, 30, 40),
        pca: new drx(360, 215, 120, 40),
        aem: new drx(482, 215, 30, 40),
        xlq: new drx(30, 270, 280, 40),
        guj: new drx(328, 270, 30, 40),
        qhw: new drx(360, 270, 120, 40),
        qow: new drx(482, 270, 30, 40),
        oor: new drx(30, 330, 500, 30),
        dua: new drx(210, 370, 140, 50),
        wcs: new drx(),
        ies: {
            khu: new drx(40, 0, 240, 40),
            pfy: new drx(7, 12, 16, 16),
            fontSize: 20,
            crl: 0,
            lbi: 2
        },
        cwu: {
            crl: 3,
            myu: -5,
            ars: -1,
            tpl: 6,
            fontSize: 20,
            lbi: 0
        },
        wpk: {
            crl: 3,
            myu: 5,
            ars: 0,
            tpl: 6,
            fontSize: 20,
            lbi: 0
        },
        qvw: {
            crl: 6,
            myu: 0,
            ars: 0,
            tpl: 6,
            fontSize: 26,
            lbi: 2
        },
        display: {
            zoh: 16,
            ogn: 24,
            ayh: 0,
            rgf: 0,
            lbi: 2,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        }
    };
    this.baa = {
        exo: [new drx(2, 20, 130, 46), new drx(668, 20, 130, 46)],
        display: {
            wwg: new drx(6, 16, 118, 22),
            zoh: 14,
            nvd: 20,
            ayh: -11,
            bmj: 10,
            oso: 8,
            lbi: 3,
            tmr: 0,
            nkz: 4
        },
        ivc: {
            exo: new drx(50, 130, 700, 300),
            wwg: new drx(),
            zoh: 66,
            nvd: 150,
            ayh: -90,
            bmj: 60,
            oso: 10,
            lbi: 0,
            tmr: 0,
            nkz: 0
        },
        ezl: {
            exo: new drx(38, 80, 724, 369),
            ram: new drx(100, 53, 525, 50),
            wwg: new drx(186, 153, 332, 94),
            czh: 340,
            thk: 30,
            mrw: {
                _0: new drx(2, 0, 90, 94),
                _1: new drx(98, 0, 90, 94),
                _2: new drx(194, 0, 90, 94),
                _3: new drx(290, 0, 90, 94),
                _4: new drx(386, 0, 90, 94),
                _5: new drx(482, 0, 90, 94),
                _6: new drx(578, 0, 90, 94),
                _7: new drx(674, 0, 90, 94),
                _8: new drx(770, 0, 90, 94),
                _9: new drx(866, 0, 90, 94),
                _cm: new drx(962, 0, 28, 94),
                _dt: new drx(999, 0, 28, 94),
                _sp: new drx(1036, 0, 28, 94)
            }
        }
    }
}
hkg.prototype = new ryk;

function gqs() {
    this.hfc = true
}
gqs.prototype = new hkg;

function abq() {
    this.zrj = true;
    this.gpr = true;
    this.yxe = false;
    this.hfc = true;
    this.canvas = {
        exo: new drx(0, 0, 800, 1165)
    };
    this.vbe = {
        exo: new drx(),
        ewh: 0
    };
    this.zbv = {
        exo: new drx(0, 550, 800, 615),
        lbi: 10
    };
    this.lzk = {
        mxh: new drx(0, 330, 440, 36),
        uub: new drx(5, 2, 140, 30),
        ndj: new drx(150, 2, 140, 30),
        wcy: new drx(295, 2, 140, 30),
        ofg: {
            fontSize: 14,
            textIndent: 32
        }
    };
    this.tnv = {
        zbv: {
            exo: new drx(0, 0, 500, 360),
            gqe: new drx(0, 0, 500, 360),
            oor: new drx(5, 325, 490, 30),
            khu: new drx(5, 329, 490, 14),
            ixj: new drx(50, 345, 400, 6),
            dgg: new drx(5, 285, 490, 70),
            fontSize: 14,
            tee: 18,
            oso: 5,
            myu: 12,
            ars: 5,
            hww: 2,
            gkj: 0,
            qaw: {
                exo: new drx(),
                x: 0,
                bqd: 0,
                noa: 0
            },
            sot: {
                gqe: new drx(),
                khu: new drx(),
                ote: new drx()
            }
        },
        qva: {
            exo: new drx(0, 0, 800, 600),
            gqe: new drx(100, 75, 600, 450),
            oor: new drx(),
            khu: new drx(100, 295, 600, 24),
            ixj: new drx(160, 325, 480, 3),
            dgg: new drx(100, 265, 600, 115),
            fontSize: 21,
            tee: 26,
            oso: 0,
            myu: 12,
            ars: 8,
            hww: 3,
            gkj: 10,
            qaw: {
                exo: new drx(400, 484, 0, 3),
                x: 38,
                bqd: 17,
                noa: 23
            },
            sot: {
                gqe: new drx(50, 0, 700, 450),
                khu: new drx(100, 460, 600, 60),
                ote: new drx(200, 540, 400, 40)
            }
        },
        azk: {
            exo: new drx(0, 0, 800, 600),
            gqe: new drx(0, 0, 800, 600),
            oor: new drx(),
            khu: new drx(50, 420, 700, 21),
            ixj: new drx(),
            dgg: new drx(50, 410, 700, 80),
            fontSize: 18,
            tee: 24,
            oso: 0,
            myu: 12,
            ars: 7,
            hww: 0,
            gkj: 0,
            qaw: {
                exo: new drx(260, 119, 280, 280),
                x: 0,
                bqd: 0,
                noa: 0
            },
            sot: {
                gqe: new drx(50, 0, 700, 450),
                khu: new drx(100, 460, 600, 60),
                ote: new drx(200, 540, 400, 40)
            }
        }
    };
    this.top = {
        exo: new drx(0, 20, 800, 520)
    };
    this.xhi = {
        exo: new drx(0, 0, 800, 20),
        fontSize: 12,
        kgk: 19,
        jll: 15,
        etw: 120,
        myu: 2,
        ars: 2,
        qbk: 2,
        rmm: 60
    };
    this.zvt = {
        exo: new drx(0, 20, 800, 70),
        fontSize: 10,
        hls: 10,
        qjb: 20,
        dak: 40,
        lbi: 4,
        myu: 10,
        ars: 5,
        oso: 10,
        ofg: {
            fontSize: 17,
            oso: 2
        }
    };
    this.xho = {
        exo: new drx(0, 550, 800, 615),
        mxh: new drx(),
        ofg: {
            ogn: 26,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            crl: 10,
            tpl: 10,
            lbi: 2
        },
        iqs: new drx(0, 20, 800, 40),
        kga: new drx(0, 100, 800, 40),
        kii: new drx(0, 140, 800, 40),
        zeq: new drx(0, 180, 800, 40),
        pea: new drx(225, 275, 350, 100),
        bqr: new drx(200, 480, 400, 40),
        six: {
            biq: new drx(340, 540, 120, 68)
        },
        lvc: {
            biq: new drx(250, 540, 120, 68),
            dep: new drx(430, 540, 120, 68)
        },
        rjc: 36,
        fontSize: 30,
        rcv: 22,
        ars: 3,
        myu: 5,
        lbi: 2,
        uhw: 3,
        jsq: 10,
    };
    this.ruq = {
        exo: new drx(-10, 545, 310, 50),
        iqs: new drx(10, 4, 240, 24),
        khu: new drx(10, 28, 240, 18),
        jbl: new drx(260, 10, 40, 30),
        aiv: new drx(7, 2, 26, 26),
        zoh: 16,
        ogn: 12,
        hhy: 18
    };
    this.oal = {
        exo: new drx(150, 690, 500, 280),
        zoh: 26,
        fontSize: 20,
        yoo: new drx(465, 5, 30, 30),
        iqs: new drx(30, 5, 440, 40),
        bqr: new drx(20, 40, 460, 160),
        kzp: new drx(20, 230, 460, 40),
        ofg: {
            fontSize: 20
        }
    };
    this.wxs = {
        exo: new drx(0, 585, 560, 430),
        lbi: 2,
        jfs: 0,
        wgk: 5,
        kkf: 10,
        zoh: 26,
        nlq: 20,
        iqs: new drx(30, 15, 500, 30),
        iyo: new drx(20, 50, 520, 60),
        pcv: new drx(40, 60, 220, 40),
        iqm: new drx(328, 60, 30, 40),
        ntu: new drx(360, 60, 120, 40),
        kcb: new drx(482, 60, 30, 40),
        qwx: new drx(20, 120, 520, 200),
        nby: new drx(40, 120, 480, 40),
        chr: new drx(30, 160, 280, 40),
        onj: new drx(328, 160, 30, 40),
        exe: new drx(360, 160, 120, 40),
        nsy: new drx(482, 160, 30, 40),
        rtz: new drx(30, 215, 280, 40),
        gch: new drx(328, 215, 30, 40),
        pca: new drx(360, 215, 120, 40),
        aem: new drx(482, 215, 30, 40),
        xlq: new drx(30, 270, 280, 40),
        guj: new drx(328, 270, 30, 40),
        qhw: new drx(360, 270, 120, 40),
        qow: new drx(482, 270, 30, 40),
        oor: new drx(30, 330, 500, 30),
        dua: new drx(210, 370, 140, 50),
        wcs: new drx(),
        ies: {
            khu: new drx(40, 0, 240, 40),
            pfy: new drx(7, 12, 16, 16),
            fontSize: 20,
            crl: 0,
            lbi: 2
        },
        cwu: {
            crl: 3,
            myu: -5,
            ars: -1,
            tpl: 6,
            fontSize: 20,
            lbi: 0
        },
        wpk: {
            crl: 3,
            myu: 5,
            ars: 0,
            tpl: 6,
            fontSize: 20,
            lbi: 0
        },
        qvw: {
            crl: 6,
            myu: 0,
            ars: 0,
            tpl: 6,
            fontSize: 26,
            lbi: 2
        },
        display: {
            zoh: 16,
            ogn: 24,
            ayh: 0,
            rgf: 0,
            lbi: 2,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        }
    };
    this.baa = {
        exo: [new drx(2, 550, 130, 46), new drx(668, 550, 130, 46)],
        display: {
            wwg: new drx(6, 16, 118, 23),
            zoh: 14,
            nvd: 20,
            ayh: -11,
            bmj: 10,
            oso: 8,
            lbi: 3,
            tmr: 0,
            nkz: 4
        },
        ivc: {
            exo: new drx(50, 660, 700, 300),
            wwg: new drx(),
            zoh: 66,
            nvd: 150,
            ayh: -90,
            bmj: 60,
            oso: 10,
            lbi: 0,
            tmr: 0,
            nkz: 0
        },
        ezl: {
            exo: new drx(38, 610, 724, 369),
            ram: new drx(100, 53, 525, 50),
            wwg: new drx(186, 153, 332, 94),
            czh: 360,
            thk: 30,
            mrw: {
                _0: new drx(2, 0, 90, 94),
                _1: new drx(98, 0, 90, 94),
                _2: new drx(194, 0, 90, 94),
                _3: new drx(290, 0, 90, 94),
                _4: new drx(386, 0, 90, 94),
                _5: new drx(482, 0, 90, 94),
                _6: new drx(578, 0, 90, 94),
                _7: new drx(674, 0, 90, 94),
                _8: new drx(770, 0, 90, 94),
                _9: new drx(866, 0, 90, 94),
                _cm: new drx(962, 0, 28, 94),
                _dt: new drx(999, 0, 28, 94),
                _sp: new drx(1036, 0, 28, 94)
            }
        }
    }
}
abq.prototype = new ryk;

function agh() {
    this.gpr = true;
    this.canvas = {
        exo: new drx(0, 0, 810, 625)
    };
    this.vbe = {
        exo: new drx(),
        ewh: 0
    };
    this.zbv = {
        exo: new drx(5, 20, 800, 600),
        lbi: 20
    };
    this.lzk = {
        mxh: new drx(5, 40, 440, 36),
        uub: new drx(5, 2, 140, 30),
        ndj: new drx(150, 2, 140, 30),
        wcy: new drx(295, 2, 140, 30),
        ofg: {
            fontSize: 14,
            textIndent: 32
        }
    };
    this.tnv = {
        zbv: {
            exo: new drx(0, 0, 500, 360),
            gqe: new drx(0, 0, 500, 360),
            oor: new drx(5, 325, 490, 30),
            khu: new drx(5, 329, 490, 14),
            ixj: new drx(50, 345, 400, 6),
            dgg: new drx(5, 285, 490, 70),
            fontSize: 14,
            tee: 18,
            oso: 5,
            myu: 12,
            ars: 5,
            hww: 2,
            gkj: 0,
            qaw: {
                exo: new drx(),
                x: 0,
                bqd: 0,
                noa: 0
            },
            sot: {
                gqe: new drx(),
                khu: new drx(),
                ote: new drx()
            }
        },
        qva: {
            exo: new drx(0, 0, 800, 600),
            gqe: new drx(140, 105, 520, 390),
            oor: new drx(),
            khu: new drx(140, 295, 520, 21),
            ixj: new drx(192, 320, 416, 3),
            dgg: new drx(140, 275, 520, 95),
            fontSize: 18,
            tee: 24,
            oso: 0,
            myu: 12,
            ars: 7,
            hww: 3,
            gkj: 9,
            qaw: {
                exo: new drx(400, 459, 0, 3),
                x: 33,
                bqd: 15,
                noa: 20
            },
            sot: {
                gqe: new drx(50, 0, 700, 450),
                khu: new drx(100, 460, 600, 60),
                ote: new drx(200, 540, 400, 40)
            }
        },
        azk: {
            exo: new drx(0, 0, 800, 600),
            gqe: new drx(0, 0, 800, 600),
            oor: new drx(),
            khu: new drx(50, 420, 700, 21),
            ixj: new drx(),
            dgg: new drx(50, 410, 700, 80),
            fontSize: 18,
            tee: 24,
            oso: 0,
            myu: 12,
            ars: 7,
            hww: 0,
            gkj: 0,
            qaw: {
                exo: new drx(260, 119, 280, 280),
                x: 0,
                bqd: 0,
                noa: 0
            },
            sot: {
                gqe: new drx(50, 0, 700, 450),
                khu: new drx(100, 460, 600, 60),
                ote: new drx(200, 540, 400, 40)
            }
        }
    };
    this.xhi = {
        exo: new drx(5, 0, 800, 20),
        fontSize: 12,
        kgk: 19,
        jll: 15,
        etw: 120,
        myu: 2,
        ars: 2,
        qbk: 2,
        rmm: 40
    };
    this.zvt = {
        exo: new drx(5, 20, 800, 70),
        fontSize: 10,
        hls: 10,
        qjb: 20,
        dak: 40,
        lbi: 4,
        myu: 10,
        ars: 5,
        oso: 10,
        ofg: {
            fontSize: 17,
            oso: 2
        }
    };
    this.xho = {
        exo: new drx(5, 20, 800, 600),
        mxh: new drx(),
        ofg: {
            ogn: 20,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            crl: 8,
            tpl: 8,
            lbi: 2
        },
        iqs: new drx(0, 20, 800, 40),
        kga: new drx(0, 100, 800, 40),
        kii: new drx(0, 140, 800, 40),
        zeq: new drx(0, 180, 800, 40),
        pea: new drx(225, 275, 350, 100),
        bqr: new drx(200, 480, 400, 40),
        six: {
            biq: new drx(340, 540, 120, 55)
        },
        lvc: {
            biq: new drx(250, 540, 120, 55),
            dep: new drx(430, 540, 120, 55)
        },
        rjc: 36,
        fontSize: 30,
        rcv: 22,
        ars: 3,
        myu: 5,
        lbi: 2,
        uhw: 3,
        jsq: 10
    };
    this.ruq = {
        exo: new drx(-10, 25, 310, 50),
        iqs: new drx(10, 4, 240, 24),
        khu: new drx(10, 28, 240, 18),
        jbl: new drx(260, 10, 40, 30),
        aiv: new drx(7, 2, 26, 26),
        zoh: 16,
        ogn: 12,
        hhy: 18
    };
    this.oal = {
        exo: new drx(155, 160, 500, 280),
        zoh: 26,
        fontSize: 20,
        yoo: new drx(465, 5, 30, 30),
        iqs: new drx(30, 5, 440, 40),
        bqr: new drx(20, 40, 460, 160),
        kzp: new drx(20, 230, 460, 40),
        ofg: {
            fontSize: 20
        }
    };
    this.wxs = {
        exo: new drx(5, 55, 560, 430),
        lbi: 2,
        jfs: 0,
        wgk: 5,
        kkf: 10,
        zoh: 26,
        nlq: 20,
        iqs: new drx(30, 15, 500, 30),
        iyo: new drx(20, 50, 520, 60),
        pcv: new drx(40, 60, 220, 40),
        iqm: new drx(328, 60, 30, 40),
        ntu: new drx(360, 60, 120, 40),
        kcb: new drx(482, 60, 30, 40),
        qwx: new drx(20, 120, 520, 200),
        nby: new drx(40, 120, 480, 40),
        chr: new drx(30, 160, 280, 40),
        onj: new drx(328, 160, 30, 40),
        exe: new drx(360, 160, 120, 40),
        nsy: new drx(482, 160, 30, 40),
        rtz: new drx(30, 215, 280, 40),
        gch: new drx(328, 215, 30, 40),
        pca: new drx(360, 215, 120, 40),
        aem: new drx(482, 215, 30, 40),
        xlq: new drx(30, 270, 280, 40),
        guj: new drx(328, 270, 30, 40),
        qhw: new drx(360, 270, 120, 40),
        qow: new drx(482, 270, 30, 40),
        oor: new drx(30, 330, 500, 30),
        dua: new drx(210, 370, 140, 50),
        wcs: new drx(),
        ies: {
            khu: new drx(40, 0, 240, 40),
            pfy: new drx(7, 12, 16, 16),
            fontSize: 20,
            crl: 0,
            lbi: 2
        },
        cwu: {
            crl: 3,
            myu: -5,
            ars: -1,
            tpl: 6,
            fontSize: 20,
            lbi: 0
        },
        wpk: {
            crl: 3,
            myu: 5,
            ars: 0,
            tpl: 6,
            fontSize: 20,
            lbi: 0
        },
        qvw: {
            crl: 6,
            myu: 0,
            ars: 0,
            tpl: 6,
            fontSize: 26,
            lbi: 2
        },
        display: {
            zoh: 16,
            ogn: 24,
            ayh: 0,
            rgf: 0,
            lbi: 2,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        }
    };
    this.baa = {
        exo: [new drx(7, 20, 130, 46), new drx(673, 20, 130, 46)],
        display: {
            wwg: new drx(6, 16, 118, 22),
            zoh: 14,
            nvd: 20,
            ayh: -11,
            bmj: 10,
            lbi: 3,
            oso: 8,
            tmr: 0,
            nkz: 4
        },
        ivc: {
            exo: new drx(55, 130, 700, 300),
            wwg: new drx(),
            zoh: 66,
            nvd: 150,
            ayh: -90,
            bmj: 60,
            oso: 10,
            lbi: 0,
            tmr: 0,
            nkz: 0
        },
        ezl: {
            exo: new drx(43, 80, 724, 369),
            ram: new drx(100, 53, 525, 50),
            wwg: new drx(186, 153, 332, 94),
            czh: 340,
            thk: 30,
            mrw: {
                _0: new drx(2, 0, 90, 94),
                _1: new drx(98, 0, 90, 94),
                _2: new drx(194, 0, 90, 94),
                _3: new drx(290, 0, 90, 94),
                _4: new drx(386, 0, 90, 94),
                _5: new drx(482, 0, 90, 94),
                _6: new drx(578, 0, 90, 94),
                _7: new drx(674, 0, 90, 94),
                _8: new drx(770, 0, 90, 94),
                _9: new drx(866, 0, 90, 94),
                _cm: new drx(962, 0, 28, 94),
                _dt: new drx(999, 0, 28, 94),
                _sp: new drx(1036, 0, 28, 94)
            }
        }
    }
}
agh.prototype = new ryk;

function ccs() {
    this.hfc = true
}
ccs.prototype = new agh;

function cbz() {
    this.yxe = false;
    this.dqo = true;
    this.kut = false;
    this.chn = true;
    this.btl = true;
    this.canvas = {
        exo: new drx(0, 0, 960, 600)
    };
    this.vbe = {
        exo: new drx(),
        ewh: 0,
        nkd: 0
    };
    this.zbv = {
        exo: new drx(0, 0, 800, 600),
        lbi: 0
    };
    this.lzk = {
        mxh: new drx(0, 25, 470, 36),
        uub: new drx(5, 2, 150, 30),
        ndj: new drx(160, 2, 150, 30),
        wcy: new drx(315, 2, 150, 30),
        ofg: {
            fontSize: 15,
            textIndent: 30
        }
    };
    this.tnv = {
        zbv: {
            exo: new drx(0, 0, 640, 460),
            gqe: new drx(0, 0, 640, 460),
            oor: new drx(6, 416, 628, 38),
            khu: new drx(6, 420, 628, 17),
            ixj: new drx(64, 442, 512, 7),
            dgg: new drx(6, 364, 628, 90),
            fontSize: 18,
            tee: 20,
            oso: 6,
            myu: 12,
            ars: 6,
            hww: 3,
            gkj: 0,
            qaw: {
                exo: new drx(),
                x: 0,
                bqd: 0,
                noa: 0
            },
            sot: {
                gqe: new drx(),
                khu: new drx(),
                ote: new drx()
            }
        },
        qva: {
            exo: new drx(0, 0, 800, 600),
            gqe: new drx(100, 75, 600, 450),
            oor: new drx(),
            khu: new drx(100, 295, 600, 24),
            ixj: new drx(160, 325, 480, 3),
            dgg: new drx(100, 265, 600, 115),
            fontSize: 21,
            tee: 26,
            oso: 0,
            myu: 12,
            ars: 8,
            hww: 3,
            gkj: 10,
            qaw: {
                exo: new drx(400, 484, 0, 3),
                x: 38,
                bqd: 17,
                noa: 23
            },
            sot: {
                gqe: new drx(50, 0, 700, 450),
                khu: new drx(100, 430, 600, 60),
                ote: new drx(200, 510, 400, 40)
            }
        },
        azk: {
            exo: new drx(0, 0, 800, 600),
            gqe: new drx(0, 0, 800, 600),
            oor: new drx(),
            khu: new drx(50, 420, 700, 21),
            ixj: new drx(),
            dgg: new drx(50, 410, 700, 80),
            fontSize: 18,
            tee: 24,
            oso: 0,
            myu: 12,
            ars: 7,
            hww: 0,
            gkj: 0,
            qaw: {
                exo: new drx(260, 119, 280, 280),
                x: 0,
                bqd: 0,
                noa: 0
            },
            sot: {
                gqe: new drx(50, 0, 700, 450),
                khu: new drx(100, 460, 600, 60),
                ote: new drx(200, 540, 400, 40)
            }
        }
    };
    this.xhi = {};
    this.zvt = {};
    this.xho = {
        exo: new drx(0, 0, 960, 600),
        mxh: new drx(800, 0, 160, 600),
        ofg: {
            ogn: 0,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            tpl: 8,
            crl: 16,
            lbi: 4
        },
        iqs: new drx(0, 20, 800, 40),
        kga: new drx(0, 100, 800, 40),
        kii: new drx(0, 140, 800, 40),
        zeq: new drx(0, 180, 800, 40),
        pea: new drx(225, 275, 350, 100),
        bqr: new drx(200, 480, 400, 40),
        six: {
            biq: new drx(815, 410, 130, 130),
        },
        lvc: {
            biq: new drx(815, 310, 130, 130),
            dep: new drx(815, 120, 130, 130)
        },
        rjc: 36,
        fontSize: 30,
        rcv: 22,
        ars: 3,
        myu: 5,
        lbi: 2,
        uhw: 3,
        jsq: 10
    };
    this.pnn = {
        exo: new drx(0, 0, 960, 600),
        lbi: 0,
        crl: 0,
        eos: 50,
        zhk: 30,
        nlq: 30,
        cox: new drx(70, 170, 470, 70),
        zfq: new drx(560, 170, 60, 70),
        bwo: new drx(622, 170, 210, 70),
        cps: new drx(834, 170, 60, 70),
        waz: new drx(70, 310, 470, 70),
        ibz: new drx(560, 310, 60, 70),
        wcl: new drx(622, 310, 210, 70),
        qxd: new drx(834, 310, 60, 70),
        ykz: new drx(70, 450, 470, 70),
        dzo: new drx(622, 450, 210, 70),
        gpq: new drx(90, 530, 780, 50),
        pcv: new drx(80, 120, 470, 60),
        iqm: new drx(570, 120, 50, 60),
        ntu: new drx(622, 120, 210, 60),
        kcb: new drx(834, 120, 50, 60),
        tuk: new drx(90, 200, 780, 70),
        chr: new drx(80, 280, 470, 60),
        onj: new drx(570, 280, 50, 60),
        exe: new drx(622, 280, 210, 60),
        nsy: new drx(834, 280, 50, 60),
        rtz: new drx(80, 360, 470, 60),
        gch: new drx(570, 360, 50, 60),
        pca: new drx(622, 360, 210, 60),
        aem: new drx(834, 360, 50, 60),
        xlq: new drx(80, 440, 470, 60),
        guj: new drx(570, 440, 50, 60),
        qhw: new drx(622, 440, 210, 60),
        qow: new drx(834, 440, 50, 60),
        oor: new drx(90, 530, 780, 50),
        tok: {
            cvv: new drx(0, 10, 240, 90),
            xtm: new drx(240, 10, 240, 90),
            glk: new drx(480, 10, 240, 90),
            dqu: new drx(720, 10, 240, 90)
        },
        szs: {
            cvv: new drx(0, 10, 192, 90),
            ufp: new drx(192, 10, 192, 90),
            xtm: new drx(384, 10, 192, 90),
            glk: new drx(576, 10, 192, 90),
            dqu: new drx(768, 10, 192, 90)
        },
        eyk: [new drx(190, 205, 200, 160), new drx(570, 205, 200, 160)],
        vvn: [new drx(90, 205, 200, 160), new drx(380, 205, 200, 160), new drx(670, 205, 200, 160)],
        zmc: [new drx(190, 130, 200, 160), new drx(570, 130, 200, 160), new drx(190, 360, 200, 160), new drx(570, 360, 200, 160)],
        djv: [new drx(90, 130, 200, 160), new drx(380, 130, 200, 160), new drx(670, 130, 200, 160), new drx(90, 360, 200, 160), new drx(380, 360, 200, 160), new drx(670, 360, 200, 160)],
        cwu: {
            crl: 3,
            myu: -10,
            ars: -1,
            tpl: 6,
            fontSize: 36,
            lbi: 0,
        },
        wpk: {
            crl: 3,
            myu: 10,
            ars: -1,
            tpl: 6,
            fontSize: 36,
            lbi: 0,
        },
        sxg: {
            fontSize: 36,
            myu: 0,
            ars: 0,
            tpl: 10,
            crl: 0,
            lbi: 0
        },
        zcl: {
            fontSize: 26,
            oso: 5,
            crl: 26,
            lbi: 4,
            lkp: 40
        },
        gee: {
            zoh: 16,
            ogn: 40,
            ayh: 0,
            rgf: 0,
            lbi: 2,
            oso: 3
        },
        jps: {
            zoh: 16,
            ogn: 40,
            ayh: 0,
            rgf: 0,
            lbi: 2,
            oso: 3
        },
        ies: {
            khu: new drx(50, 0, 360, 60),
            pfy: new drx(0, 13, 30, 30),
            fontSize: 30,
            crl: 0,
            lbi: 2
        }
    };
    this.ruq = {
        exo: new drx(-10, 5, 310, 60),
        iqs: new drx(10, 6, 240, 26),
        khu: new drx(10, 34, 240, 20),
        jbl: new drx(255, 11, 50, 38),
        aiv: new drx(8, 2, 34, 34),
        zoh: 16,
        ogn: 12,
        hhy: 24
    };
    this.oal = {
        exo: new drx(200, 135, 560, 330),
        zoh: 26,
        fontSize: 20,
        yoo: new drx(515, 5, 40, 40),
        iqs: new drx(40, 0, 480, 30),
        bqr: new drx(20, 40, 520, 195),
        kzp: new drx(20, 265, 520, 54),
        ofg: {
            fontSize: 20
        }
    };
    this.baa = {
        exo: [new drx(2, 0, 130, 46), new drx(668, 0, 130, 46)],
        display: {
            wwg: new drx(6, 16, 118, 23),
            zoh: 14,
            nvd: 20,
            ayh: -11,
            bmj: 10,
            oso: 8,
            lbi: 3,
            tmr: 0,
            nkz: 4
        },
        ivc: {
            exo: new drx(50, 110, 700, 300),
            wwg: new drx(),
            zoh: 66,
            nvd: 150,
            ayh: -90,
            bmj: 60,
            oso: 10,
            lbi: 0,
            tmr: 0,
            nkz: 0
        },
        ezl: {
            exo: new drx(38, 60, 724, 369),
            ram: new drx(100, 53, 525, 50),
            wwg: new drx(186, 153, 332, 94),
            czh: 340,
            thk: 30,
            mrw: {
                _0: new drx(2, 0, 90, 94),
                _1: new drx(98, 0, 90, 94),
                _2: new drx(194, 0, 90, 94),
                _3: new drx(290, 0, 90, 94),
                _4: new drx(386, 0, 90, 94),
                _5: new drx(482, 0, 90, 94),
                _6: new drx(578, 0, 90, 94),
                _7: new drx(674, 0, 90, 94),
                _8: new drx(770, 0, 90, 94),
                _9: new drx(866, 0, 90, 94),
                _cm: new drx(962, 0, 28, 94),
                _dt: new drx(999, 0, 28, 94),
                _sp: new drx(1036, 0, 28, 94)
            }
        }
    }
}
cbz.prototype = new ryk;

function pmy() {
    this.yxe = false;
    this.dqo = true;
    this.kut = false;
    this.chn = true;
    this.btl = true;
    this.canvas = {
        exo: new drx(0, 0, 960, 600)
    };
    this.vbe = {
        exo: new drx(),
        ewh: 0,
        nkd: 0
    };
    this.zbv = {
        exo: new drx(160, 0, 800, 600),
        lbi: 0
    };
    this.lzk = {
        mxh: new drx(490, 25, 470, 36),
        uub: new drx(5, 4, 150, 30),
        ndj: new drx(160, 4, 150, 30),
        wcy: new drx(315, 4, 150, 30),
        ofg: {
            fontSize: 15,
            textIndent: 30
        }
    };
    this.tnv = {
        zbv: {
            exo: new drx(0, 0, 640, 460),
            gqe: new drx(0, 0, 640, 460),
            oor: new drx(6, 416, 628, 38),
            khu: new drx(6, 420, 628, 17),
            ixj: new drx(64, 442, 512, 7),
            dgg: new drx(6, 364, 628, 90),
            fontSize: 18,
            tee: 20,
            oso: 6,
            myu: 12,
            ars: 6,
            hww: 3,
            gkj: 0,
            qaw: {
                exo: new drx(),
                x: 0,
                bqd: 0,
                noa: 0
            },
            sot: {
                gqe: new drx(),
                khu: new drx(),
                ote: new drx()
            }
        },
        qva: {
            exo: new drx(0, 0, 800, 600),
            gqe: new drx(100, 75, 600, 450),
            oor: new drx(),
            khu: new drx(100, 295, 600, 24),
            ixj: new drx(160, 325, 480, 3),
            dgg: new drx(100, 265, 600, 115),
            fontSize: 21,
            tee: 26,
            oso: 0,
            myu: 12,
            ars: 8,
            hww: 3,
            gkj: 10,
            qaw: {
                exo: new drx(400, 484, 0, 3),
                x: 38,
                bqd: 17,
                noa: 23
            },
            sot: {
                gqe: new drx(50, 0, 700, 450),
                khu: new drx(100, 430, 600, 60),
                ote: new drx(200, 510, 400, 40)
            }
        },
        azk: {
            exo: new drx(0, 0, 800, 600),
            gqe: new drx(0, 0, 800, 600),
            oor: new drx(),
            khu: new drx(50, 420, 700, 21),
            ixj: new drx(),
            dgg: new drx(50, 410, 700, 80),
            fontSize: 18,
            tee: 24,
            oso: 0,
            myu: 12,
            ars: 7,
            hww: 0,
            gkj: 0,
            qaw: {
                exo: new drx(260, 119, 280, 280),
                x: 0,
                bqd: 0,
                noa: 0
            },
            sot: {
                gqe: new drx(50, 0, 700, 450),
                khu: new drx(100, 460, 600, 60),
                ote: new drx(200, 540, 400, 40)
            }
        }
    };
    this.xhi = {};
    this.zvt = {};
    this.xho = {
        exo: new drx(0, 0, 960, 600),
        mxh: new drx(0, 0, 160, 600),
        ofg: {
            ogn: 0,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            tpl: 8,
            crl: 16,
            lbi: 4
        },
        iqs: new drx(160, 20, 800, 40),
        kga: new drx(160, 100, 800, 40),
        kii: new drx(160, 140, 800, 40),
        zeq: new drx(160, 180, 800, 40),
        pea: new drx(385, 275, 350, 100),
        bqr: new drx(360, 480, 400, 40),
        six: {
            biq: new drx(15, 410, 130, 130),
        },
        lvc: {
            biq: new drx(15, 310, 130, 130),
            dep: new drx(15, 120, 130, 130)
        },
        rjc: 36,
        fontSize: 30,
        rcv: 22,
        ars: 3,
        myu: 5,
        lbi: 2,
        uhw: 3,
        jsq: 10
    };
    this.pnn = {
        exo: new drx(0, 0, 960, 600),
        lbi: 0,
        crl: 0,
        eos: 50,
        zhk: 30,
        nlq: 30,
        cox: new drx(70, 170, 470, 70),
        zfq: new drx(560, 170, 60, 70),
        bwo: new drx(622, 170, 210, 70),
        cps: new drx(834, 170, 60, 70),
        waz: new drx(70, 310, 470, 70),
        ibz: new drx(560, 310, 60, 70),
        wcl: new drx(622, 310, 210, 70),
        qxd: new drx(834, 310, 60, 70),
        ykz: new drx(70, 450, 470, 70),
        dzo: new drx(622, 450, 210, 70),
        gpq: new drx(90, 530, 780, 50),
        pcv: new drx(80, 120, 470, 60),
        iqm: new drx(570, 120, 50, 60),
        ntu: new drx(622, 120, 210, 60),
        kcb: new drx(834, 120, 50, 60),
        tuk: new drx(90, 200, 780, 70),
        chr: new drx(80, 280, 470, 60),
        onj: new drx(570, 280, 50, 60),
        exe: new drx(622, 280, 210, 60),
        nsy: new drx(834, 280, 50, 60),
        rtz: new drx(80, 360, 470, 60),
        gch: new drx(570, 360, 50, 60),
        pca: new drx(622, 360, 210, 60),
        aem: new drx(834, 360, 50, 60),
        xlq: new drx(80, 440, 470, 60),
        guj: new drx(570, 440, 50, 60),
        qhw: new drx(622, 440, 210, 60),
        qow: new drx(834, 440, 50, 60),
        oor: new drx(90, 530, 780, 50),
        tok: {
            cvv: new drx(0, 10, 240, 90),
            xtm: new drx(240, 10, 240, 90),
            glk: new drx(480, 10, 240, 90),
            dqu: new drx(720, 10, 240, 90)
        },
        szs: {
            cvv: new drx(0, 10, 192, 90),
            ufp: new drx(192, 10, 192, 90),
            xtm: new drx(384, 10, 192, 90),
            glk: new drx(576, 10, 192, 90),
            dqu: new drx(768, 10, 192, 90)
        },
        eyk: [new drx(190, 205, 200, 160), new drx(570, 205, 200, 160)],
        vvn: [new drx(90, 205, 200, 160), new drx(380, 205, 200, 160), new drx(670, 205, 200, 160)],
        zmc: [new drx(190, 130, 200, 160), new drx(570, 130, 200, 160), new drx(190, 360, 200, 160), new drx(570, 360, 200, 160)],
        djv: [new drx(90, 130, 200, 160), new drx(380, 130, 200, 160), new drx(670, 130, 200, 160), new drx(90, 360, 200, 160), new drx(380, 360, 200, 160), new drx(670, 360, 200, 160)],
        cwu: {
            crl: 3,
            myu: -10,
            ars: -1,
            tpl: 6,
            fontSize: 36,
            lbi: 0,
        },
        wpk: {
            crl: 3,
            myu: 10,
            ars: -1,
            tpl: 6,
            fontSize: 36,
            lbi: 0,
        },
        sxg: {
            fontSize: 36,
            myu: 0,
            ars: 0,
            tpl: 10,
            crl: 0,
            lbi: 0
        },
        zcl: {
            fontSize: 26,
            oso: 5,
            crl: 26,
            lbi: 4,
            lkp: 40
        },
        gee: {
            zoh: 16,
            ogn: 40,
            ayh: 0,
            rgf: 0,
            lbi: 2,
            oso: 3
        },
        jps: {
            zoh: 16,
            ogn: 40,
            ayh: 0,
            rgf: 0,
            lbi: 2,
            oso: 3
        },
        ies: {
            khu: new drx(50, 0, 360, 60),
            pfy: new drx(0, 13, 30, 30),
            fontSize: 30,
            crl: 0,
            lbi: 2
        }
    };
    this.ruq = {
        exo: new drx(660, 5, 310, 60),
        iqs: new drx(60, 6, 240, 26),
        khu: new drx(60, 34, 240, 20),
        jbl: new drx(5, 11, 50, 38),
        aiv: new drx(8, 2, 34, 34),
        zoh: 16,
        ogn: 12,
        hhy: 24
    };
    this.oal = {
        exo: new drx(200, 135, 560, 330),
        zoh: 26,
        fontSize: 20,
        yoo: new drx(515, 5, 40, 40),
        iqs: new drx(40, 5, 480, 30),
        bqr: new drx(20, 40, 520, 195),
        kzp: new drx(20, 265, 520, 54),
        ofg: {
            fontSize: 20
        }
    };
    this.baa = {
        exo: [new drx(162, 0, 130, 46), new drx(828, 0, 130, 46)],
        display: {
            wwg: new drx(6, 16, 118, 23),
            zoh: 14,
            nvd: 20,
            ayh: -11,
            bmj: 10,
            oso: 8,
            lbi: 3,
            tmr: 0,
            nkz: 4
        },
        ivc: {
            exo: new drx(210, 110, 700, 300),
            wwg: new drx(),
            zoh: 66,
            nvd: 150,
            ayh: -90,
            bmj: 60,
            oso: 10,
            lbi: 0,
            tmr: 0,
            nkz: 0
        },
        ezl: {
            exo: new drx(198, 60, 724, 369),
            ram: new drx(100, 53, 525, 50),
            wwg: new drx(186, 153, 332, 94),
            czh: 340,
            thk: 30,
            mrw: {
                _0: new drx(2, 0, 90, 94),
                _1: new drx(98, 0, 90, 94),
                _2: new drx(194, 0, 90, 94),
                _3: new drx(290, 0, 90, 94),
                _4: new drx(386, 0, 90, 94),
                _5: new drx(482, 0, 90, 94),
                _6: new drx(578, 0, 90, 94),
                _7: new drx(674, 0, 90, 94),
                _8: new drx(770, 0, 90, 94),
                _9: new drx(866, 0, 90, 94),
                _cm: new drx(962, 0, 28, 94),
                _dt: new drx(999, 0, 28, 94),
                _sp: new drx(1036, 0, 28, 94)
            }
        }
    }
}
pmy.prototype = new ryk;

function rbo() {
    this.isp = true;
    this.vpc = true;
    this.jgx = true;
    this.vbe = {
        exo: new drx(0, 20, 800, 600),
        ewh: 0,
        nkd: 0
    };
    this.ics = {
        exo: new drx(0, 20, 800, 600),
        ewh: -20,
        nkd: 0
    };
    this.zyj = {
        exo: new drx(40, 110, 136, 360),
        plz: new drx(40, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.jhu = {
        exo: new drx(186, 110, 136, 360),
        plz: new drx(186, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.hwg = {
        exo: new drx(332, 110, 136, 360),
        plz: new drx(332, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.gmw = {
        exo: new drx(478, 110, 136, 360),
        plz: new drx(478, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.hme = {
        exo: new drx(624, 110, 136, 360),
        plz: new drx(624, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.npw = {
        exo: new drx(0, 20, 800, 86),
        fontSize: 50,
        myu: 0,
        ars: 6,
        oso: 0,
        qde: 2
    };
    this.tai = {
        exo: new drx(0, 20, 800, 80),
        fontSize: 50,
        myu: 0,
        ars: 8,
        oso: 0,
        qde: 2
    };
    this.lmc = {
        exo: new drx(4, 110, 0, 0),
        uyb: [25, 65, 165, 265, 305],
        rnl: 30,
        mip: 30
    };
    this.ulf = {
        exo: new drx(766, 110, 0, 0),
        uyb: [25, 65, 165, 265, 305],
        rnl: 30,
        mip: 30
    };
    this.htb = {
        exo: new drx(710, 35, 90, 450),
        iqs: new drx(5, 5, 80, 15),
        mpx: new drx(55, 25, 30, 410),
        fontSize: 15,
        aez: 20,
        lbi: 2,
        crl: 5,
        knx: 4,
        fba: 10,
        mam: 5
    };
    this.ndy = {
        exo: new drx(0, 35, 90, 450),
        iqs: new drx(5, 5, 80, 15),
        mpx: new drx(5, 25, 30, 410),
        fontSize: 15,
        aez: 20,
        lbi: 2,
        crl: 5,
        knx: 4,
        fba: 10,
        mam: 5
    };
    this.ehc = {
        exo: new drx(0, 20, 800, 600),
        mxh: new drx(0, 540, 800, 60),
        dep: new drx(711, 544, 73, 53),
        nbm: new drx(11, 544, 73, 53),
        aic: new drx(316, 544, 73, 53),
        elr: new drx(411, 544, 73, 53),
        ofg: {
            ogn: 16,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            tpl: 6,
            crl: 8,
            lbi: 2
        }
    };
    this.odb = {
        exo: new drx(0, 20, 800, 600),
        mxh: new drx(0, 485, 800, 115),
        gzz: {
            exo: new drx(187, 489, 470, 40),
            fontSize: 18,
            ars: 14,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 2
        },
        uhg: {
            exo: new drx(331, 216, 137, 187),
            khu: new drx(5, 8, 56, 34),
            wwg: new drx(37, 3, 98, 104),
            nue: new drx(33, 110, 72, 76),
            she: new drx(10, 42, 45, 45),
            hfz: new drx(5, 120, 126, 50),
            fontSize: 34,
            yec: 50,
            oso: 3,
            gou: 4
        },
        uap: {
            exo: new drx(380, 105, 380, 45),
            pxa: 2
        },
        ofg: {
            ogn: 18,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            tpl: 8,
            crl: 10,
            lbi: 2
        },
        display: {
            ayh: -12,
            rgf: 11,
            ogn: 26,
            zoh: 15,
            lbi: 2,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        sal: {
            ayh: 0,
            rgf: 0,
            ogn: 0,
            zoh: 0,
            lbi: 0,
            hix: 0,
            pda: 0,
            kud: 0,
            mbf: 0
        },
        hso: new drx(),
        flo: new drx(),
        juq: new drx(415, 544, 110, 53),
        qkb: new drx(275, 544, 110, 53),
        hfz: new drx(689, 485, 106, 48),
        dda: new drx(5, 485, 150, 48),
        mmj: new drx(73, 315, 91, 96),
        wdu: new drx(166, 315, 91, 96),
        lae: new drx(542, 315, 91, 96),
        gui: new drx(635, 315, 91, 96),
        oin: new drx(73, 218, 184, 92),
        uyt: new drx(542, 218, 184, 92),
        tex: new drx(65, 170, 200, 50),
        ofk: new drx(509, 170, 250, 50),
        imp: new drx(534, 410, 200, 50)
    };
    this.exn = {
        exo: new drx(0, 475, 800, 145),
        mga: new drx(0, 0, 800, 145),
        hzo: new drx(),
        gzz: {
            exo: new drx(187, 34, 470, 40),
            ars: 14,
            fontSize: 18,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 2
        },
        win: {
            exo: new drx(45, 2, 710, 25),
            fontSize: 20,
            ars: 4,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 0
        },
        hws: {
            exo: new drx(187, 51, 470, 70),
            mam: 10,
            rgf: 2,
            fontSize: 24,
            lbi: 2,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        yqk: {
            ogn: 22,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            crl: 10,
            tpl: 8,
            lbi: 2
        },
        wmv: {
            ogn: 16,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            crl: 8,
            tpl: 8,
            lbi: 2
        },
        vjn: {
            ogn: 0,
            nvd: 0,
            myu: 0,
            crl: 0,
            tpl: 0,
            lbi: 0,
            rgf: 0,
            bmj: 0
        },
        qij: {
            ogn: 16,
            nvd: 16,
            myu: 0,
            crl: 8,
            tpl: 6,
            lbi: 2,
            rgf: 24,
            bmj: -24
        },
        display: {
            ayh: -12,
            rgf: 11,
            ogn: 26,
            zoh: 15,
            lbi: 2,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        ldl: {
            ayh: 0,
            rgf: 0,
            ogn: 0,
            zoh: 0,
            lbi: 0,
            hix: 0,
            pda: 0,
            kud: 0,
            mbf: 0
        },
        sal: {
            exo: new drx(),
            ayh: 0,
            rgf: 0,
            ogn: 0,
            zoh: 0,
            lbi: 0,
            hix: 0,
            pda: 0,
            kud: 0,
            mbf: 0
        },
        hso: new drx(),
        flo: new drx(),
        ami: new drx(5, 30, 150, 48),
        que: new drx(689, 30, 106, 48),
        fhw: new drx(),
        qmo: {
            ote: new drx(686, 89, 110, 53),
            zhb: new drx(492, 89, 80, 53),
            jkk: new drx(382, 89, 80, 53),
            dep: new drx(272, 89, 80, 53),
            bjy: new drx(25, 89, 110, 53),
            fyi: new drx()
        },
        mzb: {
            ote: new drx(686, 89, 110, 53),
            zhb: new drx(532, 89, 80, 53),
            uyb: new drx(432, 89, 80, 53),
            jkk: new drx(332, 89, 80, 53),
            dep: new drx(232, 89, 80, 53),
            bjy: new drx(25, 89, 110, 53),
            fyi: new drx()
        },
        jun: {
            ote: new drx(686, 89, 110, 53),
            bjy: new drx(532, 89, 80, 53),
            zhb: new drx(432, 89, 80, 53),
            jkk: new drx(332, 89, 80, 53),
            dep: new drx(232, 89, 80, 53),
            omc: new drx(40, 89, 80, 53),
            fyi: new drx()
        },
        zry: {
            ote: new drx(686, 89, 110, 53),
            bjy: new drx(562, 89, 80, 53),
            zhb: new drx(472, 89, 80, 53),
            uyb: new drx(382, 89, 80, 53),
            jkk: new drx(292, 89, 80, 53),
            dep: new drx(202, 89, 80, 53),
            omc: new drx(40, 89, 80, 53),
            fyi: new drx()
        },
        mhr: {
            ote: new drx(686, 89, 110, 53),
            bjy: new drx(492, 89, 80, 53),
            zhb: new drx(382, 89, 80, 53),
            jkk: new drx(272, 89, 80, 53),
            omc: new drx(40, 89, 80, 53),
            fyi: new drx()
        },
        qoy: {
            ote: new drx(686, 89, 110, 53),
            bjy: new drx(532, 89, 80, 53),
            zhb: new drx(432, 89, 80, 53),
            uyb: new drx(332, 89, 80, 53),
            jkk: new drx(232, 89, 80, 53),
            omc: new drx(40, 89, 80, 53),
            fyi: new drx()
        },
        bcf: {
            ote: new drx(686, 89, 110, 53),
            zhb: new drx(492, 89, 80, 53),
            jkk: new drx(382, 89, 80, 53),
            dep: new drx(272, 89, 80, 53),
            bjy: new drx(25, 89, 110, 53),
            fyi: new drx()
        },
        qfr: {
            ote: new drx(686, 89, 110, 53),
            zhb: new drx(532, 89, 80, 53),
            uyb: new drx(432, 89, 80, 53),
            jkk: new drx(332, 89, 80, 53),
            dep: new drx(232, 89, 80, 53),
            bjy: new drx(25, 89, 110, 53),
            fyi: new drx()
        },
        oqo: {
            ote: new drx(686, 89, 110, 53),
            bjy: new drx(25, 89, 110, 53),
            fyi: new drx()
        },
        gtg: {
            ote: new drx(686, 89, 110, 53),
            bjy: new drx(25, 89, 110, 53),
            fyi: new drx()
        },
        owy: 60
    };
    this.qaw = {
        exo: new drx(40, 110, 720, 360),
        lineWidth: 4,
        vfi: 5,
        lbi: 1,
        ivv: 136,
        nql: 120,
        fontSize: 40,
        ixi: 10,
        dvt: 5,
        ztb: 100,
        nix: 96,
        w1: 136,
        w2: 126,
        w3: 116,
        w4: 140,
        w5: 320,
        w6: 210,
        h1: 120,
        h2: 110,
        h3: 90,
        h4: 100,
        h5: 88,
        h6: 280
    };
    this.erw = [
        [87, 290, 713, 290],
        [87, 170, 713, 170],
        [87, 410, 713, 410],
        [87, 170, 112, 170, 400, 410, 688, 170, 713, 170],
        [87, 410, 112, 410, 400, 170, 688, 410, 713, 410]
    ]
}
rbo.prototype = new hkg;

function yqu() {
    this.hfc = true
}
yqu.prototype = new rbo;

function qrn() {
    this.isp = true;
    this.vpc = true;
    this.jgx = true;
    this.vbe = {
        exo: new drx(0, 550, 800, 600),
        ewh: -14,
        nkd: 0
    };
    this.ics = {
        exo: new drx(0, 550, 800, 600),
        ewh: -550,
        nkd: 0
    };
    this.zyj = {
        exo: new drx(40, 640, 136, 360),
        plz: new drx(40, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.jhu = {
        exo: new drx(186, 640, 136, 360),
        plz: new drx(186, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.hwg = {
        exo: new drx(332, 640, 136, 360),
        plz: new drx(332, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.gmw = {
        exo: new drx(478, 640, 136, 360),
        plz: new drx(478, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.hme = {
        exo: new drx(624, 640, 136, 360),
        plz: new drx(624, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.npw = {
        exo: new drx(0, 550, 800, 86),
        fontSize: 50,
        myu: 0,
        ars: 6,
        oso: 0,
        qde: 2
    };
    this.tai = {
        exo: new drx(0, 550, 800, 80),
        fontSize: 50,
        myu: 0,
        ars: 8,
        oso: 0,
        qde: 2
    };
    this.lmc = {
        exo: new drx(4, 640, 0, 0),
        uyb: [25, 65, 165, 265, 305],
        rnl: 30,
        mip: 30
    };
    this.ulf = {
        exo: new drx(766, 640, 0, 0),
        uyb: [25, 65, 165, 265, 305],
        rnl: 30,
        mip: 30
    };
    this.htb = {
        exo: new drx(710, 565, 90, 450),
        iqs: new drx(5, 5, 80, 15),
        mpx: new drx(55, 25, 30, 410),
        fontSize: 15,
        aez: 20,
        lbi: 2,
        crl: 5,
        knx: 4,
        fba: 10,
        mam: 5
    };
    this.ndy = {
        exo: new drx(0, 565, 90, 450),
        iqs: new drx(5, 5, 80, 15),
        mpx: new drx(5, 25, 30, 410),
        fontSize: 15,
        aez: 20,
        lbi: 2,
        crl: 5,
        knx: 4,
        fba: 10,
        mam: 5
    };
    this.ehc = {
        exo: new drx(0, 550, 800, 615),
        mxh: new drx(0, 540, 800, 75),
        dep: new drx(695, 544, 90, 68),
        nbm: new drx(11, 544, 90, 68),
        aic: new drx(295, 544, 90, 68),
        elr: new drx(415, 544, 90, 68),
        ofg: {
            ogn: 21,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            tpl: 8,
            crl: 10,
            lbi: 2
        }
    };
    this.odb = {
        exo: new drx(0, 550, 800, 615),
        mxh: new drx(0, 485, 800, 130),
        gzz: {
            exo: new drx(187, 489, 470, 40),
            fontSize: 18,
            ars: 14,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 2
        },
        uhg: {
            exo: new drx(331, 216, 137, 187),
            khu: new drx(5, 8, 56, 34),
            wwg: new drx(37, 3, 98, 104),
            nue: new drx(33, 110, 72, 76),
            she: new drx(10, 42, 45, 45),
            hfz: new drx(5, 120, 126, 50),
            fontSize: 34,
            yec: 50,
            oso: 3,
            gou: 4
        },
        uap: {
            exo: new drx(380, 105, 380, 45),
            pxa: 2
        },
        ofg: {
            ogn: 23,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            tpl: 10,
            crl: 12,
            lbi: 2
        },
        display: {
            ayh: -12,
            rgf: 11,
            ogn: 26,
            zoh: 15,
            lbi: 2,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        sal: {
            ayh: 0,
            rgf: 0,
            ogn: 0,
            zoh: 0,
            lbi: 0,
            hix: 0,
            pda: 0,
            kud: 0,
            mbf: 0
        },
        hso: new drx(),
        flo: new drx(),
        juq: new drx(415, 544, 120, 68),
        qkb: new drx(265, 544, 120, 68),
        hfz: new drx(689, 485, 106, 48),
        dda: new drx(5, 485, 150, 48),
        mmj: new drx(73, 315, 91, 96),
        wdu: new drx(166, 315, 91, 96),
        lae: new drx(542, 315, 91, 96),
        gui: new drx(635, 315, 91, 96),
        oin: new drx(73, 218, 184, 92),
        uyt: new drx(542, 218, 184, 92),
        tex: new drx(65, 170, 200, 50),
        ofk: new drx(509, 170, 250, 50),
        imp: new drx(534, 410, 200, 50)
    };
    this.exn = {
        exo: new drx(0, 1005, 800, 160),
        mga: new drx(0, 0, 800, 160),
        hzo: new drx(),
        gzz: {
            exo: new drx(187, 34, 470, 40),
            ars: 14,
            fontSize: 18,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 2
        },
        win: {
            exo: new drx(45, 2, 710, 25),
            fontSize: 20,
            ars: 4,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 0
        },
        hws: {
            exo: new drx(187, 58, 470, 70),
            mam: 10,
            rgf: 2,
            fontSize: 24,
            lbi: 2,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        yqk: {
            ogn: 28,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            crl: 12,
            tpl: 10,
            lbi: 2
        },
        wmv: {
            ogn: 21,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            crl: 10,
            tpl: 8,
            lbi: 2
        },
        vjn: {
            ogn: 0,
            nvd: 0,
            myu: 0,
            crl: 0,
            tpl: 0,
            lbi: 0,
            rgf: 0,
            bmj: 0
        },
        qij: {
            ogn: 21,
            nvd: 21,
            myu: 0,
            crl: 8,
            tpl: 6,
            lbi: 2,
            rgf: 30,
            bmj: -32
        },
        display: {
            ayh: -12,
            rgf: 11,
            ogn: 26,
            zoh: 15,
            lbi: 2,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        ldl: {
            ayh: 0,
            rgf: 0,
            ogn: 0,
            zoh: 0,
            lbi: 0,
            hix: 0,
            pda: 0,
            kud: 0,
            mbf: 0
        },
        sal: {
            ayh: 0,
            rgf: 0,
            ogn: 0,
            zoh: 0,
            lbi: 0,
            hix: 0,
            pda: 0,
            kud: 0,
            mbf: 0
        },
        hso: new drx(),
        flo: new drx(),
        ami: new drx(5, 30, 150, 48),
        que: new drx(689, 30, 106, 48),
        fhw: new drx(),
        qmo: {
            ote: new drx(675, 89, 120, 68),
            zhb: new drx(486, 89, 100, 68),
            jkk: new drx(371, 89, 100, 68),
            dep: new drx(256, 89, 100, 68),
            bjy: new drx(20, 89, 120, 68),
            fyi: new drx()
        },
        mzb: {
            ote: new drx(675, 89, 120, 68),
            zhb: new drx(536, 89, 100, 68),
            uyb: new drx(426, 89, 100, 68),
            jkk: new drx(316, 89, 100, 68),
            dep: new drx(206, 89, 100, 68),
            bjy: new drx(20, 89, 120, 68),
            fyi: new drx()
        },
        jun: {
            ote: new drx(675, 89, 120, 68),
            bjy: new drx(536, 89, 100, 68),
            zhb: new drx(426, 89, 100, 68),
            jkk: new drx(316, 89, 100, 68),
            dep: new drx(206, 89, 100, 68),
            omc: new drx(30, 89, 100, 68),
            fyi: new drx()
        },
        zry: {
            ote: new drx(678, 89, 120, 68),
            bjy: new drx(576, 89, 90, 68),
            zhb: new drx(476, 89, 90, 68),
            uyb: new drx(376, 89, 90, 68),
            jkk: new drx(276, 89, 90, 68),
            dep: new drx(176, 89, 90, 68),
            omc: new drx(35, 89, 90, 68),
            fyi: new drx()
        },
        mhr: {
            ote: new drx(675, 89, 120, 68),
            bjy: new drx(486, 89, 100, 68),
            zhb: new drx(371, 89, 100, 68),
            jkk: new drx(256, 89, 100, 68),
            omc: new drx(30, 89, 100, 68),
            fyi: new drx()
        },
        qoy: {
            ote: new drx(675, 89, 120, 68),
            bjy: new drx(536, 89, 100, 68),
            zhb: new drx(426, 89, 100, 68),
            uyb: new drx(316, 89, 100, 68),
            jkk: new drx(206, 89, 100, 68),
            omc: new drx(30, 89, 100, 68),
            fyi: new drx()
        },
        bcf: {
            ote: new drx(675, 89, 120, 68),
            zhb: new drx(486, 89, 100, 68),
            jkk: new drx(371, 89, 100, 68),
            dep: new drx(256, 89, 100, 68),
            bjy: new drx(20, 89, 120, 68),
            fyi: new drx()
        },
        qfr: {
            ote: new drx(675, 89, 120, 68),
            zhb: new drx(536, 89, 100, 68),
            uyb: new drx(426, 89, 100, 68),
            jkk: new drx(316, 89, 100, 68),
            dep: new drx(206, 89, 100, 68),
            bjy: new drx(20, 89, 120, 68),
            fyi: new drx()
        },
        oqo: {
            ote: new drx(675, 90, 120, 68),
            bjy: new drx(20, 90, 120, 68),
            fyi: new drx()
        },
        gtg: {
            ote: new drx(675, 90, 120, 68),
            bjy: new drx(20, 90, 120, 68),
            fyi: new drx()
        },
        owy: 60
    };
    this.qaw = {
        exo: new drx(40, 640, 720, 360),
        lineWidth: 4,
        vfi: 5,
        lbi: 1,
        ivv: 136,
        nql: 120,
        fontSize: 40,
        ixi: 10,
        dvt: 5,
        ztb: 100,
        nix: 96,
        w1: 136,
        w2: 126,
        w3: 116,
        w4: 140,
        w5: 320,
        w6: 210,
        h1: 120,
        h2: 110,
        h3: 90,
        h4: 100,
        h5: 88,
        h6: 280
    };
    this.erw = [
        [87, 820, 713, 820],
        [87, 700, 713, 700],
        [87, 940, 713, 940],
        [87, 700, 112, 700, 400, 940, 688, 700, 713, 700],
        [87, 940, 112, 940, 400, 700, 688, 940, 713, 940]
    ];
    this.top = {
        exo: new drx(0, 20, 800, 520)
    }
}
qrn.prototype = new abq;

function sef() {
    this.isp = true;
    this.vpc = true;
    this.jgx = true;
    this.vbe = {
        exo: new drx(5, 20, 800, 600),
        ewh: 0,
        nkd: -10
    };
    this.ics = {
        exo: new drx(5, 20, 800, 600),
        ewh: -20,
        nkd: -5
    };
    this.zyj = {
        exo: new drx(45, 110, 136, 360),
        plz: new drx(40, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.jhu = {
        exo: new drx(191, 110, 136, 360),
        plz: new drx(186, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.hwg = {
        exo: new drx(337, 110, 136, 360),
        plz: new drx(332, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.gmw = {
        exo: new drx(483, 110, 136, 360),
        plz: new drx(478, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.hme = {
        exo: new drx(629, 110, 136, 360),
        plz: new drx(624, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.npw = {
        exo: new drx(5, 20, 800, 86),
        fontSize: 50,
        myu: 0,
        ars: 6,
        oso: 0,
        qde: 2
    };
    this.tai = {
        exo: new drx(5, 20, 800, 80),
        fontSize: 50,
        myu: 0,
        ars: 8,
        oso: 0,
        qde: 2
    };
    this.lmc = {
        exo: new drx(9, 110, 0, 0),
        uyb: [25, 65, 165, 265, 305],
        rnl: 30,
        mip: 30
    };
    this.ulf = {
        exo: new drx(771, 110, 0, 0),
        uyb: [25, 65, 165, 265, 305],
        rnl: 30,
        mip: 30
    };
    this.htb = {
        exo: new drx(715, 35, 90, 450),
        iqs: new drx(5, 5, 80, 15),
        mpx: new drx(55, 25, 30, 410),
        fontSize: 15,
        aez: 20,
        lbi: 2,
        crl: 5,
        knx: 4,
        fba: 10,
        mam: 5
    };
    this.ndy = {
        exo: new drx(5, 35, 90, 450),
        iqs: new drx(5, 5, 80, 15),
        mpx: new drx(5, 25, 30, 410),
        fontSize: 15,
        aez: 20,
        lbi: 2,
        crl: 5,
        knx: 4,
        fba: 10,
        mam: 5
    };
    this.ehc = {
        exo: new drx(5, 20, 800, 600),
        mxh: new drx(0, 540, 800, 60),
        dep: new drx(711, 544, 73, 53),
        nbm: new drx(11, 544, 73, 53),
        aic: new drx(316, 544, 73, 53),
        elr: new drx(411, 544, 73, 53),
        ofg: {
            ogn: 16,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            tpl: 6,
            crl: 8,
            lbi: 2
        }
    };
    this.odb = {
        exo: new drx(5, 20, 800, 600),
        mxh: new drx(0, 485, 800, 115),
        gzz: {
            exo: new drx(187, 489, 470, 40),
            fontSize: 18,
            ars: 14,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 2
        },
        uhg: {
            exo: new drx(331, 216, 137, 187),
            khu: new drx(5, 8, 56, 34),
            wwg: new drx(37, 3, 98, 104),
            nue: new drx(33, 110, 72, 76),
            she: new drx(10, 42, 45, 45),
            hfz: new drx(5, 120, 126, 50),
            fontSize: 34,
            yec: 50,
            oso: 3,
            gou: 4
        },
        uap: {
            exo: new drx(380, 105, 380, 45),
            pxa: 2
        },
        ofg: {
            ogn: 18,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            tpl: 8,
            crl: 10,
            lbi: 2
        },
        display: {
            ayh: -12,
            rgf: 11,
            ogn: 26,
            zoh: 15,
            lbi: 2,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        sal: {
            ayh: 0,
            rgf: 0,
            ogn: 0,
            zoh: 0,
            lbi: 0,
            hix: 0,
            pda: 0,
            kud: 0,
            mbf: 0
        },
        hso: new drx(),
        flo: new drx(),
        juq: new drx(415, 544, 110, 53),
        qkb: new drx(275, 544, 110, 53),
        hfz: new drx(689, 485, 106, 48),
        dda: new drx(5, 485, 150, 48),
        mmj: new drx(73, 315, 91, 96),
        wdu: new drx(166, 315, 91, 96),
        lae: new drx(542, 315, 91, 96),
        gui: new drx(635, 315, 91, 96),
        oin: new drx(73, 218, 184, 92),
        uyt: new drx(542, 218, 184, 92),
        tex: new drx(65, 170, 200, 50),
        ofk: new drx(509, 170, 250, 50),
        imp: new drx(534, 410, 200, 50)
    };
    this.exn = {
        exo: new drx(5, 475, 800, 145),
        mga: new drx(0, 0, 800, 145),
        hzo: new drx(),
        gzz: {
            exo: new drx(187, 34, 470, 40),
            ars: 14,
            fontSize: 18,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 2
        },
        win: {
            exo: new drx(45, 2, 710, 25),
            fontSize: 20,
            ars: 4,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 0
        },
        hws: {
            exo: new drx(187, 51, 470, 70),
            mam: 10,
            rgf: 2,
            fontSize: 24,
            lbi: 2,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        yqk: {
            ogn: 22,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            crl: 10,
            tpl: 8,
            lbi: 2
        },
        wmv: {
            ogn: 16,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            crl: 8,
            tpl: 6,
            lbi: 2
        },
        vjn: {
            ogn: 0,
            nvd: 0,
            myu: 0,
            crl: 0,
            tpl: 0,
            lbi: 0,
            rgf: 0,
            bmj: 0
        },
        qij: {
            ogn: 16,
            nvd: 16,
            myu: 0,
            crl: 8,
            tpl: 6,
            lbi: 2,
            rgf: 24,
            bmj: -24
        },
        display: {
            ayh: -12,
            rgf: 11,
            ogn: 26,
            zoh: 15,
            lbi: 2,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        ldl: {
            ayh: 0,
            rgf: 0,
            ogn: 0,
            zoh: 0,
            lbi: 0,
            hix: 0,
            pda: 0,
            kud: 0,
            mbf: 0
        },
        sal: {
            exo: new drx(),
            ayh: 0,
            rgf: 0,
            ogn: 0,
            zoh: 0,
            lbi: 0,
            hix: 0,
            pda: 0,
            kud: 0,
            mbf: 0
        },
        hso: new drx(),
        flo: new drx(),
        ami: new drx(5, 30, 150, 48),
        que: new drx(689, 30, 106, 48),
        fhw: new drx(),
        qmo: {
            ote: new drx(686, 89, 110, 53),
            zhb: new drx(492, 89, 80, 53),
            jkk: new drx(382, 89, 80, 53),
            dep: new drx(272, 89, 80, 53),
            bjy: new drx(25, 89, 110, 53),
            fyi: new drx()
        },
        mzb: {
            ote: new drx(686, 89, 110, 53),
            zhb: new drx(532, 89, 80, 53),
            uyb: new drx(432, 89, 80, 53),
            jkk: new drx(332, 89, 80, 53),
            dep: new drx(232, 89, 80, 53),
            bjy: new drx(25, 89, 110, 53),
            fyi: new drx()
        },
        jun: {
            ote: new drx(686, 89, 110, 53),
            bjy: new drx(532, 89, 80, 53),
            zhb: new drx(432, 89, 80, 53),
            jkk: new drx(332, 89, 80, 53),
            dep: new drx(232, 89, 80, 53),
            omc: new drx(40, 89, 80, 53),
            fyi: new drx()
        },
        zry: {
            ote: new drx(686, 89, 110, 53),
            bjy: new drx(562, 89, 80, 53),
            zhb: new drx(472, 89, 80, 53),
            uyb: new drx(382, 89, 80, 53),
            jkk: new drx(292, 89, 80, 53),
            dep: new drx(202, 89, 80, 53),
            omc: new drx(40, 89, 80, 53),
            fyi: new drx()
        },
        mhr: {
            ote: new drx(686, 89, 110, 53),
            bjy: new drx(492, 89, 80, 53),
            zhb: new drx(382, 89, 80, 53),
            jkk: new drx(272, 89, 80, 53),
            omc: new drx(40, 89, 80, 53),
            fyi: new drx()
        },
        qoy: {
            ote: new drx(686, 89, 110, 53),
            bjy: new drx(532, 89, 80, 53),
            zhb: new drx(432, 89, 80, 53),
            uyb: new drx(332, 89, 80, 53),
            jkk: new drx(232, 89, 80, 53),
            omc: new drx(40, 89, 80, 53),
            fyi: new drx()
        },
        bcf: {
            ote: new drx(686, 89, 110, 53),
            zhb: new drx(492, 89, 80, 53),
            jkk: new drx(382, 89, 80, 53),
            dep: new drx(272, 89, 80, 53),
            bjy: new drx(25, 89, 110, 53),
            fyi: new drx()
        },
        qfr: {
            ote: new drx(686, 89, 110, 53),
            zhb: new drx(532, 89, 80, 53),
            uyb: new drx(432, 89, 80, 53),
            jkk: new drx(332, 89, 80, 53),
            dep: new drx(232, 89, 80, 53),
            bjy: new drx(25, 89, 110, 53),
            fyi: new drx()
        },
        oqo: {
            ote: new drx(686, 89, 110, 53),
            bjy: new drx(25, 89, 110, 53),
            fyi: new drx()
        },
        gtg: {
            ote: new drx(686, 89, 110, 53),
            bjy: new drx(25, 89, 110, 53),
            fyi: new drx()
        },
        owy: 60
    };
    this.qaw = {
        exo: new drx(45, 110, 720, 360),
        lineWidth: 4,
        vfi: 5,
        lbi: 1,
        ivv: 136,
        nql: 120,
        fontSize: 40,
        ixi: 10,
        dvt: 5,
        ztb: 100,
        nix: 96,
        w1: 136,
        w2: 126,
        w3: 116,
        w4: 140,
        w5: 320,
        w6: 210,
        h1: 120,
        h2: 110,
        h3: 90,
        h4: 100,
        h5: 88,
        h6: 280
    };
    this.erw = [
        [92, 290, 718, 290],
        [92, 170, 718, 170],
        [92, 410, 718, 410],
        [92, 170, 117, 170, 405, 410, 693, 170, 718, 170],
        [92, 410, 117, 410, 405, 170, 693, 410, 718, 410]
    ]
}
sef.prototype = new agh;

function iom() {
    this.hfc = true
}
iom.prototype = new sef;

function whm() {
    this.isp = false;
    this.vpc = true;
    this.jgx = true;
    this.vbe = {
        exo: new drx(0, 0, 800, 600),
        ewh: 0,
        nkd: -160
    };
    this.ics = {
        exo: new drx(-160, 0, 1120, 600),
        nkd: 160,
        ewh: 0
    };
    this.zyj = {
        exo: new drx(40, 90, 136, 360),
        plz: new drx(40, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.jhu = {
        exo: new drx(186, 90, 136, 360),
        plz: new drx(186, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.hwg = {
        exo: new drx(332, 90, 136, 360),
        plz: new drx(332, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.gmw = {
        exo: new drx(478, 90, 136, 360),
        plz: new drx(478, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.hme = {
        exo: new drx(624, 90, 136, 360),
        plz: new drx(624, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.npw = {
        exo: new drx(0, 0, 800, 86),
        fontSize: 50,
        myu: 0,
        ars: 6,
        oso: 0,
        qde: 2
    };
    this.tai = {
        exo: new drx(0, 0, 800, 80),
        fontSize: 50,
        myu: 0,
        ars: 8,
        oso: 0,
        qde: 2
    };
    this.lmc = {
        exo: new drx(4, 90, 0, 0),
        uyb: [25, 65, 165, 265, 305],
        rnl: 30,
        mip: 30
    };
    this.ulf = {
        exo: new drx(766, 90, 0, 0),
        uyb: [25, 65, 165, 265, 305],
        rnl: 30,
        mip: 30
    };
    this.htb = {};
    this.ndy = {};
    this.ehc = {
        exo: new drx(0, 0, 960, 600),
        mxh: new drx(800, 0, 160, 600),
        dep: new drx(820, 400, 120, 120),
        nbm: new drx(),
        aic: new drx(820, 50, 120, 120),
        elr: new drx(820, 225, 120, 120),
        ofg: {
            ogn: 0,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            crl: 0,
            tpl: 16,
            lbi: 4
        }
    };
    this.odb = {
        exo: new drx(0, 0, 960, 600),
        mxh: new drx(800, 0, 160, 600),
        gzz: {
            exo: new drx(225, 520, 390, 70),
            fontSize: 20,
            ars: 14,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 2
        },
        uhg: {
            exo: new drx(331, 216, 137, 187),
            khu: new drx(5, 8, 56, 34),
            wwg: new drx(37, 3, 98, 104),
            nue: new drx(33, 110, 72, 76),
            she: new drx(10, 42, 45, 45),
            hfz: new drx(5, 120, 126, 50),
            fontSize: 34,
            yec: 50,
            oso: 3,
            gou: 4
        },
        uap: {
            exo: new drx(380, 105, 380, 45),
            pxa: 2
        },
        ofg: {
            ogn: 24,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            tpl: 10,
            crl: 0,
            lbi: 4
        },
        display: {
            ayh: -18,
            rgf: 16,
            ogn: 32,
            zoh: 18,
            lbi: 3,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        sal: {
            ayh: 0,
            rgf: 0,
            ogn: 16,
            zoh: 0,
            lbi: 2,
            hix: 0,
            pda: 0,
            kud: 0,
            mbf: 0
        },
        hso: new drx(800, 0, 160, 22),
        flo: new drx(800, 22, 160, 22),
        juq: new drx(820, 325, 120, 120),
        qkb: new drx(820, 125, 120, 120),
        hfz: new drx(655, 520, 140, 70),
        dda: new drx(5, 520, 180, 70),
        mmj: new drx(73, 315, 91, 96),
        wdu: new drx(166, 315, 91, 96),
        lae: new drx(542, 315, 91, 96),
        gui: new drx(635, 315, 91, 96),
        oin: new drx(73, 218, 184, 92),
        uyt: new drx(542, 218, 184, 92),
        tex: new drx(65, 170, 200, 50),
        ofk: new drx(509, 170, 250, 50),
        imp: new drx(534, 410, 200, 50)
    };
    this.exn = {
        exo: new drx(0, 0, 960, 600),
        mga: new drx(0, 455, 800, 145),
        hzo: new drx(800, 0, 160, 600),
        gzz: {
            exo: new drx(225, 520, 390, 70),
            ars: 14,
            fontSize: 24,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 2
        },
        win: {
            exo: new drx(45, 458, 710, 25),
            fontSize: 20,
            ars: 4,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 0
        },
        hws: {
            exo: new drx(225, 520, 390, 70),
            mam: 10,
            rgf: 2,
            fontSize: 20,
            lbi: 2,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        yqk: {
            ogn: 0,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            crl: 0,
            tpl: 10,
            lbi: 4
        },
        wmv: {
            ogn: 0,
            nvd: 20,
            myu: 0,
            rgf: 0,
            bmj: -30,
            crl: 0,
            tpl: 10,
            lbi: 4
        },
        qij: {
            ogn: 0,
            nvd: 24,
            myu: 0,
            crl: 0,
            tpl: 10,
            lbi: 6,
            rgf: 0,
            bmj: -40
        },
        vjn: {
            ogn: 24,
            nvd: 0,
            myu: 0,
            crl: 10,
            tpl: 0,
            lbi: 4,
            rgf: -2,
            bmj: 0
        },
        tic: {
            crl: 6,
            myu: 0,
            ars: -1,
            tpl: 6,
            fontSize: 36,
            lbi: 3
        },
        display: {
            ayh: -18,
            rgf: 16,
            ogn: 32,
            zoh: 18,
            lbi: 3,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        ldl: {
            ayh: 0,
            rgf: -40,
            ogn: 36,
            zoh: 0,
            lbi: 3,
            hix: 10,
            pda: 10,
            kud: 0,
            mbf: 0
        },
        sal: {
            ayh: 0,
            rgf: 0,
            ogn: 16,
            zoh: 0,
            lbi: 2,
            hix: 0,
            pda: 0,
            kud: 0,
            mbf: 0
        },
        hso: new drx(800, 0, 160, 22),
        flo: new drx(800, 22, 160, 22),
        ami: new drx(5, 520, 180, 70),
        que: new drx(655, 520, 140, 70),
        fhw: new drx(660, 400, 130, 120),
        ivt: {
            ote: new drx(805, 210, 150, 150),
            zhb: new drx(655, 495, 140, 30),
            uyb: new drx(),
            jkk: new drx(),
            dep: new drx(820, 400, 120, 120),
            bjy: new drx(),
            fyi: new drx(820, 50, 120, 120)
        },
        imf: {
            ote: new drx(815, 260, 140, 140),
            zhb: new drx(655, 495, 140, 30),
            uyb: new drx(),
            jkk: new drx(),
            dep: new drx(865, 50, 80, 80),
            bjy: new drx(840, 140, 110, 110),
            fyi: new drx(840, 410, 110, 110)
        },
        owy: 60
    };
    this.qaw = {
        exo: new drx(40, 90, 720, 360),
        lineWidth: 4,
        vfi: 5,
        lbi: 1,
        ivv: 136,
        nql: 120,
        fontSize: 40,
        ixi: 10,
        dvt: 5,
        ztb: 100,
        nix: 96,
        w1: 136,
        w2: 126,
        w3: 116,
        w4: 140,
        w5: 320,
        w6: 210,
        h1: 120,
        h2: 110,
        h3: 90,
        h4: 100,
        h5: 88,
        h6: 280
    };
    this.erw = [
        [87, 270, 713, 270],
        [87, 150, 713, 150],
        [87, 390, 713, 390],
        [87, 150, 112, 150, 400, 390, 688, 150, 713, 150],
        [87, 390, 112, 390, 400, 150, 688, 390, 713, 390]
    ]
}
whm.prototype = new cbz;

function qor() {
    this.isp = false;
    this.vpc = true;
    this.jgx = true;
    this.vbe = {
        exo: new drx(160, 0, 800, 600),
        ewh: 0,
        nkd: 0
    };
    this.ics = {
        exo: new drx(0, 0, 1120, 600),
        nkd: 0,
        ewh: 0
    };
    this.zyj = {
        exo: new drx(200, 90, 136, 360),
        plz: new drx(40, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.jhu = {
        exo: new drx(346, 90, 136, 360),
        plz: new drx(186, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.hwg = {
        exo: new drx(492, 90, 136, 360),
        plz: new drx(332, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.gmw = {
        exo: new drx(638, 90, 136, 360),
        plz: new drx(478, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.hme = {
        exo: new drx(784, 90, 136, 360),
        plz: new drx(624, 90, 136, 360),
        xwy: 30,
        ezr: 30
    };
    this.npw = {
        exo: new drx(160, 0, 800, 86),
        fontSize: 50,
        myu: 0,
        ars: 6,
        oso: 0,
        qde: 2
    };
    this.tai = {
        exo: new drx(160, 0, 800, 80),
        fontSize: 50,
        myu: 0,
        ars: 8,
        oso: 0,
        qde: 2
    };
    this.lmc = {
        exo: new drx(164, 90, 0, 0),
        uyb: [25, 65, 165, 265, 305],
        rnl: 30,
        mip: 30
    };
    this.ulf = {
        exo: new drx(926, 90, 0, 0),
        uyb: [25, 65, 165, 265, 305],
        rnl: 30,
        mip: 30
    };
    this.htb = {};
    this.ndy = {};
    this.ehc = {
        exo: new drx(0, 0, 960, 600),
        mxh: new drx(0, 0, 160, 600),
        dep: new drx(20, 400, 120, 120),
        nbm: new drx(),
        aic: new drx(20, 50, 120, 120),
        elr: new drx(20, 225, 120, 120),
        ofg: {
            ogn: 0,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            crl: 0,
            tpl: 16,
            lbi: 4
        }
    };
    this.odb = {
        exo: new drx(0, 0, 960, 600),
        mxh: new drx(0, 0, 160, 600),
        gzz: {
            exo: new drx(385, 520, 390, 70),
            fontSize: 20,
            ars: 14,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 2
        },
        uhg: {
            exo: new drx(491, 216, 137, 187),
            khu: new drx(5, 8, 56, 34),
            wwg: new drx(37, 3, 98, 104),
            nue: new drx(33, 110, 72, 76),
            she: new drx(10, 42, 45, 45),
            hfz: new drx(5, 120, 126, 50),
            fontSize: 34,
            yec: 50,
            oso: 3,
            gou: 4
        },
        uap: {
            exo: new drx(540, 105, 380, 45),
            pxa: 2
        },
        ofg: {
            ogn: 24,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            tpl: 10,
            crl: 0,
            lbi: 4
        },
        display: {
            ayh: -18,
            rgf: 16,
            ogn: 32,
            zoh: 18,
            lbi: 3,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        sal: {
            ayh: 0,
            rgf: 0,
            ogn: 16,
            zoh: 0,
            lbi: 2,
            hix: 0,
            pda: 0,
            kud: 0,
            mbf: 0
        },
        hso: new drx(0, 0, 160, 22),
        flo: new drx(0, 22, 160, 22),
        juq: new drx(20, 325, 120, 120),
        qkb: new drx(20, 125, 120, 120),
        hfz: new drx(815, 520, 140, 70),
        dda: new drx(165, 520, 180, 70),
        mmj: new drx(233, 315, 91, 96),
        wdu: new drx(326, 315, 91, 96),
        lae: new drx(702, 315, 91, 96),
        gui: new drx(795, 315, 91, 96),
        oin: new drx(233, 218, 184, 92),
        uyt: new drx(702, 218, 184, 92),
        tex: new drx(225, 170, 200, 50),
        ofk: new drx(669, 170, 250, 50),
        imp: new drx(694, 410, 200, 50)
    };
    this.exn = {
        exo: new drx(0, 0, 960, 600),
        mga: new drx(160, 455, 800, 145),
        hzo: new drx(0, 0, 160, 600),
        gzz: {
            exo: new drx(385, 520, 390, 70),
            ars: 14,
            fontSize: 24,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 2
        },
        win: {
            exo: new drx(205, 458, 710, 25),
            fontSize: 20,
            ars: 4,
            crl: 3,
            ysq: 2,
            tpl: 6,
            lbi: 0
        },
        hws: {
            exo: new drx(385, 520, 390, 70),
            mam: 10,
            rgf: 2,
            fontSize: 20,
            lbi: 2,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        yqk: {
            ogn: 0,
            nvd: 0,
            myu: 0,
            rgf: 0,
            bmj: 0,
            crl: 0,
            tpl: 10,
            lbi: 4
        },
        wmv: {
            ogn: 0,
            nvd: 20,
            myu: 0,
            rgf: 0,
            bmj: -30,
            crl: 0,
            tpl: 10,
            lbi: 4
        },
        qij: {
            ogn: 0,
            nvd: 24,
            myu: 0,
            crl: 0,
            tpl: 10,
            lbi: 6,
            rgf: 0,
            bmj: -40
        },
        vjn: {
            ogn: 24,
            nvd: 0,
            myu: 0,
            crl: 10,
            tpl: 0,
            lbi: 4,
            rgf: -2,
            bmj: 0
        },
        tic: {
            crl: 6,
            myu: 0,
            ars: -1,
            tpl: 6,
            fontSize: 36,
            lbi: 3
        },
        display: {
            ayh: -18,
            rgf: 16,
            ogn: 32,
            zoh: 18,
            lbi: 3,
            hix: 3,
            pda: 3,
            kud: 3,
            mbf: 3
        },
        ldl: {
            ayh: 0,
            rgf: -40,
            ogn: 36,
            zoh: 0,
            lbi: 3,
            hix: 10,
            pda: 10,
            kud: 0,
            mbf: 0
        },
        sal: {
            ayh: 0,
            rgf: 0,
            ogn: 16,
            zoh: 0,
            lbi: 2,
            hix: 0,
            pda: 0,
            kud: 0,
            mbf: 0
        },
        hso: new drx(0, 0, 160, 22),
        flo: new drx(0, 22, 160, 22),
        ami: new drx(165, 520, 180, 70),
        que: new drx(815, 520, 140, 70),
        fhw: new drx(820, 400, 130, 120),
        ivt: {
            ote: new drx(5, 210, 150, 150),
            zhb: new drx(815, 495, 140, 30),
            uyb: new drx(),
            jkk: new drx(),
            dep: new drx(20, 400, 120, 120),
            bjy: new drx(),
            fyi: new drx(20, 50, 120, 120)
        },
        imf: {
            ote: new drx(5, 260, 140, 140),
            zhb: new drx(815, 495, 140, 30),
            uyb: new drx(),
            jkk: new drx(),
            dep: new drx(15, 50, 80, 80),
            bjy: new drx(10, 140, 110, 110),
            fyi: new drx(10, 410, 110, 110)
        },
        owy: 60
    };
    this.qaw = {
        exo: new drx(200, 90, 720, 360),
        lineWidth: 4,
        vfi: 5,
        lbi: 1,
        ivv: 136,
        nql: 120,
        fontSize: 40,
        ixi: 10,
        dvt: 5,
        ztb: 100,
        nix: 96,
        w1: 136,
        w2: 126,
        w3: 116,
        w4: 140,
        w5: 320,
        w6: 210,
        h1: 120,
        h2: 110,
        h3: 90,
        h4: 100,
        h5: 88,
        h6: 280
    };
    this.erw = [
        [247, 270, 873, 270],
        [247, 150, 873, 150],
        [247, 390, 873, 390],
        [247, 150, 272, 150, 560, 390, 848, 150, 873, 150],
        [247, 390, 272, 390, 560, 150, 848, 390, 873, 390]
    ]
}
qor.prototype = new pmy;

function mfp() {
    this.odb.uap.exo = new drx(380, 110, 380, 45);
    this.odb.imp = new drx(534, 405, 200, 50);
    this.npw.exo = new drx(0, 20, 800, 78);
    this.npw.ars = 5;
    this.npw.oso = 225;
    this.tai.exo = new drx(0, 20, 800, 78);
    this.tai.ars = 5;
    this.tai.oso = 225;
    this.lmc = {
        exo: new drx(4, 110, 0, 0),
        uyb: [-4, 32, 68, 104, 140, 176, 212, 248, 284, 320],
        rnl: 32,
        mip: 35
    };
    this.ulf = {
        exo: new drx(764, 110, 0, 0),
        uyb: [-4, 32, 68, 104, 140, 176, 212, 248, 284, 320],
        rnl: 32,
        mip: 35
    };
    this.erw = [
        [87, 290, 713, 290],
        [87, 170, 713, 170],
        [87, 410, 713, 410],
        [87, 170, 112, 170, 400, 410, 688, 170, 713, 170],
        [87, 410, 112, 410, 400, 170, 688, 410, 713, 410],
        [87, 170, 256, 170, 400, 290, 544, 170, 713, 170],
        [87, 410, 256, 410, 400, 290, 544, 410, 713, 410],
        [87, 290, 112, 290, 256, 170, 544, 170, 688, 290, 713, 290],
        [87, 290, 112, 290, 256, 410, 544, 410, 688, 290, 713, 290],
        [87, 170, 112, 170, 256, 290, 544, 290, 688, 170, 713, 170]
    ];
    this.qrl = {
        exo: new drx(120, 110, 560, 360),
        start: {
            syy: new drx(50, 50, 460, 40),
            bzy: new drx(55, 130, 450, 80),
            oor: new drx(230, 225, 270, 110),
            zel: 28,
            rjc: 56,
            nlq: 20,
            qde: 3,
            crl: 4
        },
        qar: {
            syy: new drx(50, 30, 460, 40),
            bzy: new drx(55, 85, 450, 120),
            oor: new drx(55, 220, 450, 40),
            zel: 28,
            rjc: 120,
            nlq: 24,
            qde: 3,
            crl: 4
        }
    };
    this.dbe = {
        exo: new drx(120, 110, 560, 360),
        rjm: new drx(50, 20, 460, 45),
        uts: new drx(70, 80, 180, 40),
        mwg: new drx(310, 80, 180, 40),
        hfz: new drx(70, 130, 180, 120),
        wnk: new drx(310, 130, 180, 120),
        zel: 40,
        hhy: 120,
        nlq: 26,
        ulo: 4,
        pmf: 8,
        qlz: 2,
        mhi: 3,
        lbi: 3,
        crl: 3
    };
    this.ehc.win = {
        exo: new drx(0, 0, 800, 600),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(70, 450, 680, 40)]
    };
    this.ehc.kza = {
        exo: new drx(0, 0, 800, 600),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(280, 50, 470, 80), new drx(280, 130, 470, 40), new drx(280, 195, 470, 120), new drx(280, 340, 470, 120)]
    };
    this.ehc.yiz = {
        exo: new drx(0, 0, 800, 600),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(280, 50, 470, 120), new drx(280, 195, 470, 120), new drx(280, 340, 470, 120)]
    };
    this.ehc.wvo = {
        exo: new drx(0, 0, 800, 600),
        iqs: new drx(),
        fontSize: 14,
        fhd: 20,
        zoh: 40,
        nlq: 12,
        lineWidth: 1,
        oor: new drx(20, 512, 760, 30),
        khu: [new drx(170, 415, 220, 60), new drx(135, 480, 260, 20), new drx(410, 465, 360, 30)],
        hfz: [new drx(360, 165, 130, 90), new drx(160, 45, 100, 80), new drx(655, 45, 100, 80), new drx(160, 170, 100, 80), new drx(655, 182, 100, 60), new drx(565, 309, 100, 60), new drx(255, 297, 100, 80)]
    }
}
mfp.prototype = new rbo;

function rka() {
    this.hfc = true
}
rka.prototype = new mfp;

function ddi() {
    this.odb.uap.exo = new drx(380, 110, 380, 45);
    this.odb.imp = new drx(534, 405, 200, 50);
    this.npw.exo = new drx(0, 550, 800, 78);
    this.npw.ars = 5;
    this.npw.oso = 225;
    this.tai.exo = new drx(0, 550, 800, 78);
    this.tai.ars = 5;
    this.tai.oso = 225;
    this.lmc = {
        exo: new drx(4, 640, 0, 0),
        uyb: [-4, 32, 68, 104, 140, 176, 212, 248, 284, 320],
        rnl: 32,
        mip: 35
    };
    this.ulf = {
        exo: new drx(764, 640, 0, 0),
        uyb: [-4, 32, 68, 104, 140, 176, 212, 248, 284, 320],
        rnl: 32,
        mip: 35
    };
    this.erw = [
        [87, 820, 713, 820],
        [87, 700, 713, 700],
        [87, 940, 713, 940],
        [87, 700, 112, 700, 400, 940, 688, 700, 713, 700],
        [87, 940, 112, 940, 400, 700, 688, 940, 713, 940],
        [87, 700, 256, 700, 400, 820, 544, 700, 713, 700],
        [87, 940, 256, 940, 400, 820, 544, 940, 713, 940],
        [87, 820, 112, 820, 256, 700, 544, 700, 688, 820, 713, 820],
        [87, 820, 112, 820, 256, 940, 544, 940, 688, 820, 713, 820],
        [87, 700, 112, 700, 256, 820, 544, 820, 688, 700, 713, 700]
    ];
    this.qrl = {
        exo: new drx(120, 640, 560, 360),
        start: {
            syy: new drx(50, 50, 460, 40),
            bzy: new drx(55, 130, 450, 80),
            oor: new drx(230, 225, 270, 110),
            zel: 28,
            rjc: 56,
            nlq: 20,
            qde: 3,
            crl: 4
        },
        qar: {
            syy: new drx(50, 30, 460, 40),
            bzy: new drx(55, 85, 450, 120),
            oor: new drx(55, 220, 450, 40),
            zel: 28,
            rjc: 120,
            nlq: 24,
            qde: 3,
            crl: 4
        }
    };
    this.dbe = {
        exo: new drx(120, 640, 560, 360),
        rjm: new drx(50, 20, 460, 45),
        uts: new drx(70, 80, 180, 40),
        mwg: new drx(310, 80, 180, 40),
        hfz: new drx(70, 130, 180, 120),
        wnk: new drx(310, 130, 180, 120),
        zel: 40,
        hhy: 120,
        nlq: 26,
        ulo: 4,
        pmf: 8,
        qlz: 2,
        mhi: 3,
        lbi: 3,
        crl: 3
    };
    this.ehc.win = {
        exo: new drx(0, 0, 800, 615),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(70, 450, 680, 40)]
    };
    this.ehc.kza = {
        exo: new drx(0, 0, 800, 615),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(280, 50, 470, 80), new drx(280, 130, 470, 40), new drx(280, 195, 470, 120), new drx(280, 340, 470, 120)]
    };
    this.ehc.yiz = {
        exo: new drx(0, 0, 800, 615),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(280, 50, 470, 120), new drx(280, 195, 470, 120), new drx(280, 340, 470, 120)]
    };
    this.ehc.wvo = {
        exo: new drx(0, 0, 800, 600),
        iqs: new drx(),
        fontSize: 14,
        fhd: 20,
        zoh: 40,
        nlq: 12,
        lineWidth: 1,
        oor: new drx(20, 512, 760, 30),
        khu: [new drx(170, 415, 220, 60), new drx(135, 480, 260, 20), new drx(410, 465, 360, 30)],
        hfz: [new drx(360, 165, 130, 90), new drx(160, 45, 100, 80), new drx(655, 45, 100, 80), new drx(160, 170, 100, 80), new drx(655, 182, 100, 60), new drx(565, 309, 100, 60), new drx(255, 297, 100, 80)]
    };
    this.top.wvo = {
        exo: new drx(0, 0, 800, 520),
        iqs: new drx(),
        fontSize: 14,
        fhd: 18,
        zoh: 40,
        nlq: 12,
        lineWidth: 1,
        oor: new drx(20, 488, 760, 30),
        khu: [new drx(170, 385, 220, 60), new drx(135, 450, 260, 20), new drx(410, 442, 360, 30)],
        hfz: [new drx(360, 156, 130, 88), new drx(160, 42, 100, 78), new drx(655, 42, 100, 78), new drx(160, 162, 100, 78), new drx(655, 172, 100, 60), new drx(565, 294, 100, 60), new drx(255, 284, 100, 76)]
    };
    this.top.yiz = {
        exo: new drx(0, 0, 800, 520),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        hhy: 0,
        lineWidth: 1,
        jnb: 1,
        idf: new drx(),
        ute: new drx(),
        hbr: new drx(),
        khu: [new drx(280, 50, 470, 120), new drx(280, 195, 470, 120), new drx(280, 340, 470, 120)]
    }
}
ddi.prototype = new qrn;

function uep() {
    this.odb.uap.exo = new drx(380, 110, 380, 45);
    this.odb.imp = new drx(534, 405, 200, 50);
    this.npw.exo = new drx(5, 20, 800, 78);
    this.npw.ars = 5;
    this.npw.oso = 225;
    this.tai.exo = new drx(5, 20, 800, 78);
    this.tai.ars = 5;
    this.tai.oso = 225;
    this.lmc = {
        exo: new drx(9, 110, 0, 0),
        uyb: [-4, 32, 68, 104, 140, 176, 212, 248, 284, 320],
        rnl: 32,
        mip: 35
    };
    this.ulf = {
        exo: new drx(769, 110, 0, 0),
        uyb: [-4, 32, 68, 104, 140, 176, 212, 248, 284, 320],
        rnl: 32,
        mip: 35
    };
    this.erw = [
        [92, 290, 718, 290],
        [92, 170, 718, 170],
        [92, 410, 718, 410],
        [92, 170, 117, 170, 405, 410, 693, 170, 718, 170],
        [92, 410, 117, 410, 405, 170, 693, 410, 718, 410],
        [92, 170, 261, 170, 405, 290, 549, 170, 718, 170],
        [92, 410, 261, 410, 405, 290, 549, 410, 718, 410],
        [92, 290, 117, 290, 261, 170, 549, 170, 693, 290, 718, 290],
        [92, 290, 117, 290, 261, 410, 549, 410, 693, 290, 718, 290],
        [92, 170, 117, 170, 261, 290, 549, 290, 693, 170, 718, 170]
    ];
    this.qrl = {
        exo: new drx(125, 110, 560, 360),
        start: {
            syy: new drx(50, 50, 460, 40),
            bzy: new drx(55, 130, 450, 80),
            oor: new drx(230, 225, 270, 110),
            zel: 28,
            rjc: 56,
            nlq: 20,
            qde: 3,
            crl: 4
        },
        qar: {
            syy: new drx(50, 30, 460, 40),
            bzy: new drx(55, 85, 450, 120),
            oor: new drx(55, 220, 450, 40),
            zel: 28,
            rjc: 120,
            nlq: 24,
            qde: 3,
            crl: 4
        }
    };
    this.dbe = {
        exo: new drx(125, 110, 560, 360),
        rjm: new drx(50, 20, 460, 45),
        uts: new drx(70, 80, 180, 40),
        mwg: new drx(310, 80, 180, 40),
        hfz: new drx(70, 130, 180, 120),
        wnk: new drx(310, 130, 180, 120),
        zel: 40,
        hhy: 120,
        nlq: 26,
        ulo: 4,
        pmf: 8,
        qlz: 2,
        mhi: 3,
        lbi: 3,
        crl: 3
    };
    this.ehc.win = {
        exo: new drx(0, 0, 800, 600),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(70, 450, 680, 40)]
    };
    this.ehc.kza = {
        exo: new drx(0, 0, 800, 600),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(280, 50, 470, 80), new drx(280, 130, 470, 40), new drx(280, 195, 470, 120), new drx(280, 340, 470, 120)]
    };
    this.ehc.yiz = {
        exo: new drx(0, 0, 800, 600),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(280, 50, 470, 120), new drx(280, 195, 470, 120), new drx(280, 340, 470, 120)]
    };
    this.ehc.wvo = {
        exo: new drx(0, 0, 800, 600),
        iqs: new drx(),
        fontSize: 14,
        fhd: 20,
        zoh: 40,
        nlq: 12,
        lineWidth: 1,
        oor: new drx(20, 512, 760, 30),
        khu: [new drx(170, 415, 220, 60), new drx(135, 480, 260, 20), new drx(410, 465, 360, 30)],
        hfz: [new drx(360, 165, 130, 90), new drx(160, 45, 100, 80), new drx(655, 45, 100, 80), new drx(160, 170, 100, 80), new drx(655, 182, 100, 60), new drx(565, 309, 100, 60), new drx(255, 297, 100, 80)]
    }
}
uep.prototype = new sef;

function mtn() {
    this.hfc = true
}
mtn.prototype = new uep;

function gkr() {
    this.odb.uap.exo = new drx(380, 110, 380, 45);
    this.odb.imp = new drx(534, 435, 200, 50);
    this.npw.exo = new drx(0, 0, 800, 78);
    this.npw.ars = 5;
    this.npw.oso = 225;
    this.tai.exo = new drx(0, 0, 800, 78);
    this.tai.ars = 5;
    this.tai.oso = 225;
    this.lmc = {
        exo: new drx(4, 90, 0, 0),
        uyb: [-4, 32, 68, 104, 140, 176, 212, 248, 284, 320],
        rnl: 32,
        mip: 35
    };
    this.ulf = {
        exo: new drx(764, 90, 0, 0),
        uyb: [-4, 32, 68, 104, 140, 176, 212, 248, 284, 320],
        rnl: 32,
        mip: 35
    };
    this.erw = [
        [87, 270, 713, 270],
        [87, 150, 713, 150],
        [87, 390, 713, 390],
        [87, 150, 112, 150, 400, 390, 688, 150, 713, 150],
        [87, 390, 112, 390, 400, 150, 688, 390, 713, 390],
        [87, 150, 256, 150, 400, 270, 544, 150, 713, 150],
        [87, 390, 256, 390, 400, 270, 544, 390, 713, 390],
        [87, 270, 112, 270, 256, 150, 544, 150, 688, 270, 713, 270],
        [87, 270, 112, 270, 256, 390, 544, 390, 688, 270, 713, 270],
        [87, 150, 112, 150, 256, 270, 544, 270, 688, 150, 713, 150]
    ];
    this.qrl = {
        exo: new drx(120, 90, 560, 360),
        start: {
            syy: new drx(50, 50, 460, 40),
            bzy: new drx(55, 130, 450, 80),
            oor: new drx(230, 225, 270, 110),
            zel: 28,
            rjc: 56,
            nlq: 20,
            qde: 3,
            crl: 4
        },
        qar: {
            syy: new drx(50, 30, 460, 40),
            bzy: new drx(55, 85, 450, 120),
            oor: new drx(55, 220, 450, 40),
            zel: 28,
            rjc: 120,
            nlq: 24,
            qde: 3,
            crl: 4
        }
    };
    this.dbe = {
        exo: new drx(120, 90, 560, 360),
        rjm: new drx(50, 20, 460, 45),
        uts: new drx(70, 80, 180, 40),
        mwg: new drx(310, 80, 180, 40),
        hfz: new drx(70, 130, 180, 120),
        wnk: new drx(310, 130, 180, 120),
        zel: 40,
        hhy: 120,
        nlq: 26,
        ulo: 4,
        pmf: 8,
        qlz: 2,
        mhi: 3,
        lbi: 3,
        crl: 3
    };
    this.ehc.win = {
        exo: new drx(0, 0, 800, 600),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(70, 500, 680, 40)]
    };
    this.ehc.kza = {
        exo: new drx(0, 0, 800, 600),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(290, 70, 470, 80), new drx(290, 150, 470, 40), new drx(290, 240, 470, 120), new drx(290, 405, 470, 120)]
    };
    this.ehc.yiz = {
        exo: new drx(0, 0, 800, 600),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(290, 70, 470, 120), new drx(290, 240, 470, 120), new drx(290, 405, 470, 120)]
    };
    this.ehc.wvo = {
        exo: new drx(0, 0, 800, 600),
        iqs: new drx(),
        fontSize: 14,
        fhd: 20,
        zoh: 40,
        nlq: 14,
        lineWidth: 1,
        oor: new drx(0, 542, 800, 40),
        khu: [new drx(170, 415, 220, 60), new drx(135, 480, 260, 20), new drx(410, 475, 360, 30)],
        hfz: [new drx(360, 167, 130, 90), new drx(160, 46, 100, 80), new drx(655, 46, 100, 80), new drx(160, 174, 100, 80), new drx(655, 186, 100, 60), new drx(565, 314, 100, 60), new drx(255, 302, 100, 80)]
    }
}
gkr.prototype = new whm;

function gyi() {
    this.odb.uap.exo = new drx(540, 110, 380, 45);
    this.odb.imp = new drx(694, 435, 200, 50);
    this.npw.exo = new drx(160, 0, 800, 78);
    this.npw.ars = 5;
    this.npw.oso = 225;
    this.tai.exo = new drx(160, 0, 800, 78);
    this.tai.ars = 5;
    this.tai.oso = 225;
    this.lmc = {
        exo: new drx(164, 90, 0, 0),
        uyb: [-4, 32, 68, 104, 140, 176, 212, 248, 284, 320],
        rnl: 32,
        mip: 35
    };
    this.ulf = {
        exo: new drx(924, 90, 0, 0),
        uyb: [-4, 32, 68, 104, 140, 176, 212, 248, 284, 320],
        rnl: 32,
        mip: 35
    };
    this.erw = [
        [247, 270, 873, 270],
        [247, 150, 873, 150],
        [247, 390, 873, 390],
        [247, 150, 272, 150, 560, 390, 848, 150, 873, 150],
        [247, 390, 272, 390, 560, 150, 848, 390, 873, 390],
        [247, 150, 416, 150, 560, 270, 704, 150, 873, 150],
        [247, 390, 416, 390, 560, 270, 704, 390, 873, 390],
        [247, 270, 272, 270, 416, 150, 704, 150, 848, 270, 873, 270],
        [247, 270, 272, 270, 416, 390, 704, 390, 848, 270, 873, 270],
        [247, 150, 272, 150, 416, 270, 704, 270, 848, 150, 873, 150]
    ];
    this.qrl = {
        exo: new drx(280, 90, 560, 360),
        start: {
            syy: new drx(50, 50, 460, 40),
            bzy: new drx(55, 130, 450, 80),
            oor: new drx(230, 225, 270, 110),
            zel: 28,
            rjc: 56,
            nlq: 20,
            qde: 3,
            crl: 4
        },
        qar: {
            syy: new drx(50, 30, 460, 40),
            bzy: new drx(55, 85, 450, 120),
            oor: new drx(55, 220, 450, 40),
            zel: 28,
            rjc: 120,
            nlq: 24,
            qde: 3,
            crl: 4
        }
    };
    this.dbe = {
        exo: new drx(280, 90, 560, 360),
        rjm: new drx(50, 20, 460, 45),
        uts: new drx(70, 80, 180, 40),
        mwg: new drx(310, 80, 180, 40),
        hfz: new drx(70, 130, 180, 120),
        wnk: new drx(310, 130, 180, 120),
        zel: 40,
        hhy: 120,
        nlq: 26,
        ulo: 4,
        pmf: 8,
        qlz: 2,
        mhi: 3,
        lbi: 3,
        crl: 3
    };
    this.ehc.win = {
        exo: new drx(160, 0, 800, 600),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(70, 500, 680, 40)]
    };
    this.ehc.kza = {
        exo: new drx(160, 0, 800, 600),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(280, 70, 470, 80), new drx(280, 150, 470, 40), new drx(280, 240, 470, 120), new drx(280, 405, 470, 120)]
    };
    this.ehc.yiz = {
        exo: new drx(160, 0, 800, 600),
        iqs: new drx(),
        fontSize: 20,
        zoh: 40,
        lineWidth: 1,
        khu: [new drx(280, 70, 470, 120), new drx(280, 240, 470, 120), new drx(280, 405, 470, 120)]
    };
    this.ehc.wvo = {
        exo: new drx(160, 0, 800, 600),
        iqs: new drx(),
        fontSize: 14,
        fhd: 20,
        zoh: 40,
        nlq: 14,
        lineWidth: 1,
        oor: new drx(0, 542, 800, 40),
        khu: [new drx(170, 415, 220, 60), new drx(135, 480, 260, 20), new drx(410, 475, 360, 30)],
        hfz: [new drx(360, 167, 130, 90), new drx(160, 46, 100, 80), new drx(655, 46, 100, 80), new drx(160, 174, 100, 80), new drx(655, 186, 100, 60), new drx(565, 314, 100, 60), new drx(255, 302, 100, 80)]
    }
}
gyi.prototype = new qor;
var tbl = {
    language: {
        EN: "en",
        RU: "ru",
        EE: "et",
        ES: "es",
        DE: "de",
        TR: "tr",
        CZ: "cs",
        GR: "el",
        AT: "at",
        US: "us",
        BG: "bg",
        CO: "co",
        CL: "cl",
        MX: "mx",
        VE: "ve",
        BR: "br",
        GE: "ka",
        HU: "hu",
        RO: "ro",
        PT: "pt",
        FR: "fr",
        HR: "hr",
        IT: "it",
        SE: "sv"
    },
    hxu: {
        qsl: 0,
        amd: 1,
        zly: 2,
        mxs: 3,
        vaw: 4,
        kzj: 5,
        cwq: 10,
        dia: 11,
        ecu: 12,
        azr: 13,
        ahq: 14,
        rom: 15,
        crd: 16
    },
    os: {
        bic: 0,
        xhe: 1,
        rvi: 2,
        ufm: 3,
        ijc: 4
    },
    bnl: {
        lpq: 1,
        lyw: 3,
        mjj: 4,
        kak: 5,
        xxd: 7,
        lcm: 8,
        qlv: 11,
        chg: 13,
        tqx: 14,
        fae: 6,
        tqe: 9,
        kax: 10
    },
    hro: {
        vdd: 1,
        akv: 2,
        cwi: 4,
        opm: 8,
        usg: 16,
        xwp: 32
    },
    lgc: {
        aij: 1,
        msa: 2,
        goj: 3,
        ylh: 4,
        jpi: 5,
        kbw: 6,
        lka: 7,
        pkz: 94,
        quq: 95,
        rag: 96,
        omh: 97,
        zag: 98,
        uvk: 99,
        roulette: {
            byz: 2,
            vso: 9,
            tgq: 10
        }
    },
    ui: {
        csy: "minimal",
        phg: "modern",
        mjj: "classic"
    },
    fax: {
        krg: "auto",
        srp: "left",
        cwp: "right"
    },
    tnv: {
        jok: 0,
        rnk: 1,
        xjq: 2,
        yqw: 3,
        nhj: 4
    },
    baa: {
        xqq: {
            kdl: "ji",
            wlt: "jv",
            ozl: "jh"
        }
    },
    axj: {
        ujx: {
            mbr: 1,
            mta: 2
        },
        scb: {
            olb: 1,
            oxx: 2,
            gtf: 3
        }
    }
};
tbl.kjw = (function() {
    var g = ["moz", "webkit", "ms", "o"],
        f = 0,
        d = 0;
    var b = document.createElement("canvas");
    if (!(b.getContext && b.getContext("2d"))) {
        f += tbl.hro.vdd
    }
    if (!(window.WebSocket || window.MozWebSocket)) {
        f += tbl.hro.akv
    }
    try {
        if (!(window.localStorage && window.sessionStorage)) {
            f += tbl.hro.cwi
        } else {
            sessionStorage.dummy = true;
            sessionStorage.removeItem("dummy")
        }
    } catch (c) {
        f += tbl.hro.cwi
    }
    if (!(b.style.MozTransform != undefined || b.style.WebkitTransform != undefined || b.style.OTransform != undefined || b.style.msTransform != undefined)) {
        f += tbl.hro.opm
    }
    try {
        if (window.hasOwnProperty("webkitAudioContext") && !window.hasOwnProperty("AudioContext")) {
            window.AudioContext = webkitAudioContext;
            if (!AudioContext.prototype.hasOwnProperty("createGain")) {
                AudioContext.prototype.createGain = AudioContext.prototype.createGainNode
            }
            AudioContext.prototype.zsh = AudioContext.prototype.createBufferSource;
            AudioContext.prototype.createBufferSource = function() {
                var e = this.zsh();
                if (!e.start) {
                    e.start = e.noteOn
                }
                if (!e.stop) {
                    e.stop = e.noteOff
                }
                return e
            }
        }
        if (window.requestAnimationFrame) {
            window.cyh = window.requestAnimationFrame;
            window.vcu = window.cancelAnimationFrame || window.cancelRequestAnimationFrame
        }
        for (var a = 0; a < g.length && !window.cyh; ++a) {
            window.cyh = window[g[a] + "RequestAnimationFrame"];
            window.vcu = window[g[a] + "CancelAnimationFrame"] || window[g[a] + "CancelRequestAnimationFrame"]
        }
        if (!window.cyh || !window.vcu) {
            window.cyh = function(m, j) {
                var e = new Date().getTime();
                var k = Math.max(0, 16 - (e - d));
                var l = window.setTimeout(function() {
                    m(e + k)
                }, k);
                d = e + k;
                return l
            }
        }
        if (!window.vcu) {
            window.vcu = function(e) {
                clearTimeout(e)
            }
        }
        if (window.MozWebSocket) {
            window.WebSocket = window.MozWebSocket
        }
        if (navigator.browserLanguage) {
            navigator.language = navigator.browserLanguage
        }
    } catch (c) {
        console.error(c.lgc)
    }
    return f
})();

function kqn() {
    var a = {};
    this.vgz = 1;
    this.fgc = 1;
    this.nkx = 0.6;
    this.hmc = 0.4;
    this.brv = function() {};
    this.huh = function(b, c) {
        a[b] = c
    };
    this.yyn = function(b) {
        if (a[b]) {
            return a[b]
        } else {
            return this.vgz
        }
    }
}

function rlv() {
    this.audio = {
        raz: 65,
        zxv: -1,
        value: "A",
        vzp: null
    };
    this.jcg = {
        raz: 70,
        zxv: 122,
        value: "F",
        vzp: "F11"
    };
    this.uap = {
        raz: 72,
        zxv: -1,
        value: "H",
        vzp: null
    };
    this.xho = {
        raz: 83,
        zxv: -1,
        value: "S",
        vzp: null
    };
    this.jsr = {
        raz: 68,
        zxv: -1,
        value: "D",
        vzp: null
    };
    this.ok = {
        raz: 13,
        zxv: -1,
        value: "OK",
        vzp: null
    };
    this.jkr = [this.audio, this.jcg, this.uap, this.xho, this.jsr, this.ok]
}

function rqd() {
    var q = this;
    this.whc = false;
    this.fyb = null;
    this.hff = false;
    this.fin = false;
    var f = {};
    var j = {};
    var d = [];
    var a = [];
    var l = [];
    var k = 30;
    var g = 0;
    var b = 0;
    var e = 0;
    var n = [];
    var m = null;
    var c = false;
    var o = false;
    var p = false;
    this.brv = function() {
        this.srt();
        this.kww();
        this.hff = false;
        this.fin = false
    };
    this.srt = function() {
        try {
            if (webAudioEngine == null) {
                webAudioEngine = new AudioContext()
            }
            this.fyb = webAudioEngine.createGain();
            this.fyb.connect(webAudioEngine.destination);
            this.whc = true
        } catch (r) {
            this.whc = false
        }
    };
    this.kww = function() {
        n = tbl.vpf.ems()
    };
    this.coo = function(r) {
        m = r
    };
    this.rrc = function(r) {
        c = r
    };
    this.rdn = function(r) {
        o = r
    };
    this.zcd = function(v, u, r, s) {
        var t = new kto(v);
        t.brv(this.whc, u, r, m.yyn(v));
        j[v] = t;
        l.push(t);
        d.push({
            ytm: t,
            mtz: s,
            zbr: q.qjz,
            zcv: n
        })
    };
    this.odq = function(t, s) {
        var r = new Image();
        f[t] = r;
        d.push({
            ytm: r,
            mtz: s,
            zbr: null
        })
    };
    this.nux = function(s, r) {
        d.unshift({
            ytm: null,
            mtz: s,
            zbr: q.rnp,
            fbm: r
        })
    };
    this.rrn = function() {
        p = true;
        g = d.length;
        b = 0;
        while (d.length > 0) {
            q.nxo(d.shift())
        }
    };
    this.start = function() {
        if (!q.hff) {
            return
        }
        q.hff = false;
        p = false;
        g = d.length;
        b = 0;
        k = 1;
        for (var s = 0; s < k && d.length > 0; s++) {
            a.push(d.shift())
        }
        for (var r = 0; r < a.length; r++) {
            q.nxo(a.shift())
        }
    };
    this.fja = function() {
        b++;
        if (q.cpg()) {
            q.hff = true;
            tbl.zbv.ywb()
        }
    };
    this.cfl = function() {
        q.szq()
    };
    this.vvw = function() {
        q.fin = true;
        q.szq()
    };
    this.szq = function() {
        b++;
        q.riq();
        if (q.cpg()) {
            q.yde()
        } else {
            q.kbd()
        }
    };
    this.riq = function() {
        var r = tbl.zbv.zwb.aar("loading");
        e = Math.round(100 * b / g);
        if (e < 100) {
            if (r) {
                r.yud(e)
            }
        }
    };
    this.yde = function() {
        var t = tbl.zbv.zwb.aar("loading");
        if (q.fin) {
            tbl.zbv.yay(tbl.zbv.language.eps);
            var s = confirm(tbl.zbv.language.hdz);
            if (s == true) {
                tbl.zbv.lcu = false;
                q.gza();
                tbl.zbv.ziz()
            } else {
                tbl.zbv.hch({
                    type: "gameDataLoaded",
                    sender: tbl.zbv.wkz,
                    lang: sessionStorage.sessionValue1.toUpperCase(),
                    data: {
                        success: false
                    }
                });
                setTimeout(tbl.zbv.mgs, 1000)
            }
        } else {
            if (!tbl.zbv.njh) {
                e = 100;
                if (t) {
                    t.yud(e)
                }
                if (c === true) {
                    if (o === true) {
                        t.jge((tbl.zbv.ajb() === true) ? tbl.zbv.language.pme : tbl.zbv.language.ooh, tbl.zbv.hly.lrj("device_info"))
                    } else {
                        t.jge(tbl.zbv.language.sim, null)
                    }
                } else {
                    setTimeout(tbl.zbv.ziz, 200)
                }
            }
        }
    };
    this.xya = function() {
        return e
    };
    this.kbd = function() {
        if (d.length > 0) {
            a.push(d.shift());
            if (k === 1 && (a[0].ytm instanceof Image || a[0].ytm instanceof kto)) {
                k = 30;
                for (var r = 0; r < k && d.length > 0; r++) {
                    a.push(d.shift())
                }
            }
        } else {}
        if (a.length > 0) {
            q.nxo(a.shift())
        }
    };
    this.cpg = function() {
        return (g > 0 && b == g)
    };
    this.nxo = function(r) {
        if (r.ytm instanceof Image) {
            if (p === true) {
                this.qyt(r.ytm, r.mtz)
            } else {
                this.rmu(r.ytm, r.mtz)
            }
        } else {
            if (r.ytm instanceof kto) {
                this.dxy(r.ytm, r.mtz, r.zbr, r.zcv)
            } else {
                this.pnp(r.mtz, r.fbm, r.zbr)
            }
        }
    };
    this.qyt = function(s, r) {
        s.onload = function() {
            tbl.zbv.hly.fja()
        };
        s.onerror = function() {
            console.error("can not load image " + r)
        };
        s.src = r + "?v=" + tbl.zbv.mag
    };
    this.rmu = function(s, r) {
        s.onload = function() {
            tbl.zbv.hly.cfl()
        };
        s.onerror = function() {
            console.error("can not load image " + r);
            tbl.zbv.yay(tbl.zbv.language.rch);
            setTimeout(tbl.zbv.mgs, 3000)
        };
        s.src = r + "?v=" + tbl.zbv.mag
    };
    this.dxy = function(s, t, u, r) {
        s.load(t, u, r)
    };
    this.pnp = function(u, r, v) {
        var s = new XMLHttpRequest();
        s.open("GET", u + r, true);
        s.responseType = "text";
        s.onreadystatechange = function() {
            if (s.readyState == 4 && s.status == 200) {
                var w = JSON.parse(s.responseText);
                v(u, w)
            }
        };
        s.onerror = function() {
            console.error("can not load " + u + r);
            tbl.zbv.yay(tbl.zbv.language.rch);
            setTimeout(tbl.zbv.mgs, 3000)
        };
        try {
            s.send()
        } catch (t) {
            console.error("can not load from " + u + r);
            tbl.zbv.yay(tbl.zbv.language.rch);
            setTimeout(tbl.zbv.mgs, 3000)
        }
    };
    this.qjz = function(s, r) {
        j[s].eno = r
    };
    this.rnp = function(t, s) {
        var r = new Image();
        r.onload = function() {
            q.rof(r, s.data)
        };
        r.onerror = function() {
            console.error("can not load image " + t + s.src);
            tbl.zbv.yay(tbl.zbv.language.rch);
            setTimeout(tbl.zbv.mgs, 3000)
        };
        r.src = t + s.src + "?v=" + tbl.zbv.mag
    };
    this.rof = function(t, w) {
        var u = null,
            s = null;
        for (var v = 0, r = w.length; v < r; v++) {
            u = document.createElement("canvas");
            u.width = w[v].rect.w;
            u.height = w[v].rect.h;
            s = u.getContext("2d");
            s.drawImage(t, w[v].rect.x, w[v].rect.y, w[v].rect.w, w[v].rect.h, 0, 0, w[v].rect.w, w[v].rect.h);
            q.ztt(w[v].id, u)
        }
        tbl.zbv.hly.cfl()
    };
    this.uvl = function(r) {
        if (j && j[r]) {
            return j[r]
        } else {}
        return null
    };
    this.ztt = function(s, r) {
        if (r && !f[s]) {
            f[s] = r
        } else {}
        return null
    };
    this.lrj = function(r) {
        if (f[r]) {
            return f[r]
        } else {}
        return null
    };
    this.mok = function(r) {
        if (!j) {
            return 0
        }
        var s = 0,
            t = true;
        while (t) {
            if (j[r + s]) {
                s++
            } else {
                t = false
            }
        }
        return s
    };
    this.npl = function(r) {
        if (!f) {
            return 0
        }
        var s = 0,
            t = true;
        while (t) {
            if (f[r + s]) {
                s++
            } else {
                t = false
            }
        }
        return s
    };
    this.dvl = function(s, r) {
        if (j && j[s]) {
            j[s].play(r)
        } else {}
    };
    this.jsl = function(r) {
        if (j && j[r]) {
            j[r].stop()
        } else {}
    };
    this.beb = function(s, r) {
        if (j && j[s]) {
            j[s].yuq(r)
        } else {}
    };
    this.jib = function(u, s, t, r) {
        r = (r != null && r === true);
        if (j && j[u]) {
            j[u].fkq(m.yyn(u) * s, t, r)
        }
    };
    this.rbe = function(r) {
        if (j && j[r]) {
            return j[r].jrm()
        }
        return 0
    };
    this.wef = function(r) {
        if (this.whc) {
            this.fyb.gain.setValueAtTime(r, webAudioEngine.currentTime)
        }
    };
    this.wrj = function(s) {
        if (this.whc) {
            this.fyb.gain.setValueAtTime((s) ? 0 : 1, webAudioEngine.currentTime)
        } else {
            if (l) {
                for (var r = 0; r < l.length; r++) {
                    l[r].yuq(s)
                }
            }
        }
    };
    this.gza = function() {
        if (l) {
            for (var r = 0; r < l.length; r++) {
                l[r].clear()
            }
        }
        l = null;
        j = null
    }
}

function nhr() {
    this.guu = {};
    this.ynh = {};
    this.omv = [];
    this.brv = function() {
        this.guu = {};
        this.ynh = {};
        this.omv = []
    };
    this.hbx = function(b) {
        this.guu[b] = b
    };
    this.oro = function(f, e, d) {
        this.ynh[f] = e;
        this.ynh[f].ayz = [];
        if (d && this.guu) {
            for (var c = 0, b = d.length; c < b; c++) {
                if (this.guu[d[c]]) {
                    this.ynh[f].ayz.push(d[c])
                } else {}
            }
        }
        this.omv.push(this.ynh[f])
    };
    this.ofm = function() {
        var c = [];
        for (var d = 0, b = this.omv.length; d < b; d++) {
            if (this.omv[d] != null) {
                c.push(this.omv[d])
            }
        }
        return c
    };
    this.aar = function(b) {
        if (this.ynh && this.ynh[b]) {
            return this.ynh[b]
        }
        return null
    };
    this.kew = function(g) {
        if (this.guu && this.guu[g]) {
            var d = [];
            for (var f = 0, b = this.omv.length; f < b; f++) {
                for (var e = 0, c = this.omv[f].ayz.length; e < c; e++) {
                    if (this.omv[f].ayz[e] == g) {
                        d.push(this.omv[f])
                    }
                }
            }
            return d
        }
        return []
    };
    this.xmt = function() {
        return this.guu
    };
    this.vbi = function(e) {
        var d = -1;
        if (this.ynh && this.ynh[e]) {
            for (var c = 0, b = this.omv.length; c < b; c++) {
                if (this.omv[c] == this.ynh[e]) {
                    d = c;
                    this.ynh[e] = null
                }
            }
        }
        if (d >= 0) {
            this.omv.splice(d, 1)
        }
    };
    this.ury = function(f) {
        if (this.guu && this.guu[f]) {
            this.guu[f] = null;
            for (var e = 0, b = this.omv.length; e < b; e++) {
                for (var d = 0, c = this.omv[e].ayz.length; d < c; d++) {
                    if (this.omv[e].ayz[d] == f) {
                        this.omv[e].ayz.splice(d, 1)
                    }
                }
            }
        }
    };
    this.nwi = function(e, d, c, b) {
        return a(this.aar(e), d, c, b)
    };
    this.qml = function(f, d, c) {
        for (var e = 0, b = this.omv.length; e < b; e++) {
            a(this.omv[e], f, d, c)
        }
    };
    this.jle = function(k, l, f, e) {
        if (this.guu && this.guu[k]) {
            for (var g = 0, b = this.omv.length; g < b; g++) {
                for (var d = 0, c = this.omv[g].ayz.length; d < c; d++) {
                    if (this.omv[g].ayz[d] == k) {
                        a(this.omv[g], l, f, e)
                    }
                }
            }
        }
    };

    function a(d, g, c, b) {
        if (!b) {
            b = Object
        }
        try {
            if ((d) && (d instanceof b) && (typeof g === "string" && g.indexOf("#") == 0)) {
                g = d[g.substring(1, g.length)];
                if (typeof g === "function") {
                    if (c) {
                        return g.apply(d, c)
                    } else {
                        return g.call(d)
                    }
                }
            }
        } catch (f) {
            console.error(f)
        }
    }
}

function kto(b) {
    var a = this;
    this.qxq = null;
    this.loop = false;
    this.muted = false;
    this.volume = 1;
    this.id = b;
    this.nzm = false;
    this.eno = null;
    this.pje = null;
    this.yvw = 0;
    this.abx = 0;
    this.mtc = 0;
    this.xfk = 0;
    this.vwc = 30000;
    this.qug = "";
    this.gbf = "";
    this.btk = "";
    this.lox = null;
    this.ovp = 1;
    this.ugo = 0;
    this.vfk = -1;
    this.bro = 0;
    this.pqo = 0;
    this.mxf = false;
    this.brv = function(c, f, d, e) {
        this.nzm = c;
        if (e) {
            this.ovp = e;
            this.volume = e
        }
        if (f) {
            this.qxq = f
        }
        if (d) {
            this.loop = d
        }
    };
    this.play = function(c) {
        if (typeof c == "undefined") {
            c = 0
        }
        if (this.nzm) {
            clearTimeout(this.vfk);
            if (this.eno) {
                this.volume = (this.muted === true) ? 0 : tbl.xyy.value40 * this.ovp;
                this.mxf = false;
                this.pje = webAudioEngine.createBufferSource();
                this.pje.buffer = this.eno;
                this.pje.loop = this.loop;
                this.yvw = webAudioEngine.createGain();
                this.yvw.gain.setValueAtTime(this.volume, webAudioEngine.currentTime);
                this.pje.connect(this.yvw);
                this.yvw.connect(tbl.zbv.hly.fyb);
                this.pje.start(0, c);
                this.ugo = webAudioEngine.currentTime;
                if (this.qxq) {
                    this.abx = setTimeout(a.qxq, a.eno.duration * 1000)
                }
            }
        } else {
            if (this.pje) {
                if (this.loop) {
                    if (tbl.vpf.ddh != tbl.hxu.vaw && tbl.vpf.ddh != tbl.hxu.ahq) {
                        this.mtc = setInterval(a.kyb, a.pje.duration * 1000)
                    }
                }
                this.pje.currentTime = 0;
                this.pje.play()
            }
        }
    };
    this.kyb = function() {
        if (!a.pje.paused || (tbl.vpf.ddh != tbl.hxu.zly && tbl.vpf.ddh != tbl.hxu.ecu)) {
            a.pje.currentTime = 0
        }
    };
    this.stop = function() {
        if (a) {
            if (a.nzm) {
                a.ugo = 0;
                if (a.pje) {
                    a.pje.stop(0);
                    a.pje = null
                }
                clearTimeout(a.abx);
                if (a.vfk >= 0) {
                    clearTimeout(a.vfk);
                    a.vfk = -1
                }
            } else {
                if (a.pje) {
                    a.pje.currentTime = 0;
                    a.pje.pause();
                    clearInterval(a.mtc);
                    if (a.vfk >= 0) {
                        clearTimeout(a.vfk);
                        a.vfk = -1
                    }
                }
            }
        }
    };
    this.load = function(e, c, d) {
        this.qug = d[0];
        if (d.length >= 2) {
            this.gbf = d[1];
            this.btk = e;
            this.lox = c
        }
        e += this.qug + "?v=" + tbl.zbv.mag;
        if (this.nzm) {
            this.lbu(e, c)
        } else {
            this.vhc(e)
        }
    };
    this.sti = function() {
        if (this.nzm) {
            this.lbu(this.btk + this.gbf + "?v=" + tbl.zbv.mag, this.lox)
        }
    };
    this.vhc = function(c) {
        this.pje = new Audio();
        this.xfk = setTimeout(function() {
            console.error("can not load audio " + c);
            tbl.zbv.hly.vvw()
        }, this.vwc);
        this.pje.addEventListener("canplaythrough", function() {
            this.removeEventListener("canplaythrough", arguments.callee, false);
            clearTimeout(a.xfk);
            tbl.zbv.hly.cfl();
            a.utq()
        }, false);
        this.pje.addEventListener("error", function() {
            clearTimeout(a.xfk);
            console.error("can not load audio " + c);
            tbl.zbv.hly.vvw()
        }, false);
        this.pje.volume = tbl.xyy.value40 * this.volume;
        this.pje.src = c;
        this.pje.load()
    };
    this.lbu = function(f, g) {
        var c = new XMLHttpRequest();
        c.open("GET", f, true);
        c.responseType = "arraybuffer";
        c.onload = function() {
            webAudioEngine.decodeAudioData(c.response, function(e) {
                if (g) {
                    if (a.id) {
                        g(a.id, e)
                    } else {
                        g(e)
                    }
                }
                tbl.zbv.hly.cfl()
            }, function() {
                a.lzb("can not decode audio ", f)
            })
        };
        c.onerror = function() {
            a.lzb("can not load audio ", f)
        };
        try {
            c.send()
        } catch (d) {
            a.lzb("can not load audio from ", f)
        }
    };
    this.lzb = function(d, c) {
        console.error(d + c);
        if (a.gbf != "" && c.indexOf(a.gbf) < 0) {
            a.sti()
        } else {
            tbl.zbv.hly.vvw()
        }
    };
    this.ynq = function(c) {
        this.qxq = c;
        this.utq()
    };
    this.utq = function() {
        if (!this.nzm) {
            if (this.qxq) {
                if (this.pje) {
                    this.pje.addEventListener("ended", function() {
                        a.qxq()
                    }, false)
                }
            }
            if (tbl.vpf.ddh == tbl.hxu.vaw || tbl.vpf.ddh == tbl.hxu.ahq) {
                if (this.loop) {
                    if (this.pje) {
                        this.pje.addEventListener("ended", function() {
                            this.play()
                        }, false)
                    }
                }
            }
        }
    };
    this.xwo = function() {
        if (!this.lcp) {
            if (this.qxq) {
                if (this.pje) {
                    this.pje.removeEventListener("ended", function() {
                        a.qxq()
                    }, false)
                }
            }
            if (tbl.vpf.ddh == tbl.hxu.vaw || tbl.vpf.ddh == tbl.hxu.ahq) {
                if (this.loop) {
                    if (this.pje) {
                        this.pje.removeEventListener("ended", function() {
                            this.play()
                        }, false)
                    }
                }
            }
        }
    };
    this.fkq = function(d, e, c) {
        if (this.nzm === true && this.yvw) {
            this.volume = (this.muted === true) ? 0 : tbl.xyy.value40 * d * this.ovp;
            if (e > 0) {
                this.yvw.gain.linearRampToValueAtTime(this.volume, webAudioEngine.currentTime + (e / 1000))
            } else {
                this.yvw.gain.setValueAtTime(this.volume, webAudioEngine.currentTime)
            }
            if (c === true) {
                this.vfk = setTimeout(this.stop, e)
            }
        } else {
            if (!this.nzm && c === true) {
                this.vfk = setTimeout(this.stop, e)
            }
        }
    };
    this.yuq = function(c) {
        this.muted = c;
        if (!this.nzm) {
            if (this.pje && this.pje.readyState > 0) {
                this.pje.muted = c
            }
        } else {
            if (this.yvw) {
                this.yvw.gain.linearRampToValueAtTime((this.muted === true) ? 0 : tbl.xyy.value40 * this.volume, webAudioEngine.currentTime)
            }
        }
    };
    this.clear = function() {
        if (this.nzm) {
            if (this.pje) {
                this.pje.stop(0);
                clearTimeout(this.abx);
                this.pje = null
            }
        } else {
            if (this.pje && this.pje.readyState > 0) {
                this.pje.currentTime = 0;
                this.pje.pause();
                if (this.qxq) {
                    this.xwo(this.qxq)
                }
                this.pje = null
            }
        }
    };
    this.jrm = function() {
        if (this.nzm && this.ugo > 0) {
            return (webAudioEngine.currentTime - this.ugo) % this.eno.duration
        }
        return 0
    }
}

function gah() {
    var a = null;
    this.iax = "";
    var b = null;
    this.connect = function(c) {
        a = this;
        this.iax = c;
        b = new WebSocket(this.iax);
        b.onopen = function(d) {
            a.ekh(d)
        };
        b.onclose = function(d) {
            a.ufl(d)
        };
        b.onmessage = function(d) {
            a.lcd(d)
        };
        b.onerror = function(d) {
            a.wpf(d)
        }
    };
    this.fbn = function(c) {};
    this.rfx = function(c) {
        b.send(c)
    };
    this.ekh = function(c) {
        this.rfx("A/u25vlt")
    };
    this.ufl = function(c) {};
    this.lcd = function(c) {
        this.fbn(c.data)
    };
    this.wpf = function(c) {}
}

function ecs() {
    var b = null;
    this.agu = null;
    this.kjw = 0;
    this.tia = -1;
    this.lgc = -1;
    this.vul = -1;
    this.ooc = 0;
    this.iax = "";
    this.tsa = "";
    this.wvv = "";
    this.opv = "";
    this.wkz = "";
    this.mag = "";
    this.zeb = "";
    this.enw = "";
    this.xyj = [];
    this.ibb = [];
    this.emv = [];
    this.nfc = [];
    var g = false;
    var a = false;
    var d = false;
    var f = false;
    var c = null;
    var e = 1;
    this.brv = function(j) {
        this.agu = j;
        b = this;
        g = false;
        a = false;
        d = false;
        f = false;
        c = new WebSocket(this.iax);
        c.onopen = function(k) {
            b.ekh(k)
        };
        c.onclose = function(k) {
            b.ufl(k)
        };
        c.onmessage = function(k) {
			
			var tmpA=k.data.split("_");
			
			if(tmpA[1]!=undefined){
			gameController.reels=JSON.parse(tmpA[1]);
			}
			k.data=tmpA[0];
			
            b.lcd(k)
        };
        c.onerror = function(k) {
            b.wpf(k)
        }
    };
    this.iei = function(j) {
        var k = parseInt(j.charAt(this.ooc), 16);
        this.ooc++;
        return k
    };
    this.nyx = function(j) {
        var l = 0;
        var k = j.charAt(this.ooc);
        k += j.charAt(this.ooc + 1);
        this.ooc += 2;
        l = parseInt(k, 16);
        return l
    };
    this.osb = function(m) {
        var j = this.yom(m);
        var n = [];
        for (var k = 0; k < j; k++) {
            n[k] = parseInt(m.charAt(this.ooc), 16);
            this.ooc += 1
        }
        return n
    };
    this.yom = function(n) {
        var m = 0;
        var j = parseInt(n.charAt(this.ooc), 16);
        this.ooc++;
        var o = "";
        for (var k = 0; k < j; k++) {
            o += n.charAt(this.ooc);
            this.ooc += 1
        }
        m = parseInt(o, 16);
        return m
    };
    this.yqb = function(j) {
        var k = "";
        if (this.ooc < j.length) {
            k = j.substring(this.ooc, j.length)
        }
        return k
    };
    this.fbn = function(j) {};
    this.qhp = function(o) {
        var u = o.substr(0, 2),
            l = o.substring(2),
            k = [],
            t = [],
            s = [],
            q = null;
        if (l && l.length > 0) {
            if (u === tbl.baa.xqq.kdl || u === tbl.baa.xqq.wlt) {
                k = l.split("|");
                for (var p = 0, r = k.length; p < r; p++) {
                    t = k[p].split(":");
                    if (u === tbl.baa.xqq.kdl && t.length >= 3) {
                        if (t[2].toLowerCase() != "mystery") {
                            this.xyj[p] = {
                                jqn: t[0],
                                value: Number(t[1]),
                                lbd: t[2]
                            };
                            if (t.length >= 5) {
                                this.xyj[p].isw = t[3];
                                this.xyj[p].uab = t[4]
                            }
                        }
                    } else {
                        if (u === tbl.baa.xqq.wlt && t.length >= 2) {
                            for (var p = 0, r = this.xyj.length; p < r; p++) {
                                if (this.xyj[p].jqn === t[0]) {
                                    this.xyj[p].value = Number(t[1])
                                }
                            }
                        }
                    }
                }
                if (u === tbl.baa.xqq.kdl) {
                    s = [];
                    for (var p = 0, r = this.xyj.length; p < r; p++) {
                        s.push({
                            jqn: this.xyj[p].jqn,
                            value: (Number)(this.xyj[p].jqn.split("_")[1])
                        })
                    }
                    s.sort(function(v, j) {
                        return v.value - j.value
                    });
                    for (var p = 0, r = this.xyj.length; p < r; p++) {
                        for (var n = 0, m = s.length; n < m; n++) {
                            if (this.xyj[p].jqn == s[n].jqn) {
                                this.xyj[p].exo = n;
                                break
                            }
                        }
                    }
                } else {
                    if (u === tbl.baa.xqq.wlt) {
                        this.agu.teh(this.xyj)
                    }
                }
            } else {
                if (u === tbl.baa.xqq.ozl) {
                    t = l.split(":");
                    if (t.length >= 3) {
                        q = {
                            jqn: t[0],
                            value: Number(t[1]),
                            nko: Number(t[2])
                        };
                        if (t.length >= 5) {
                            q.tsa = t[3];
                            q.ccf = t[4]
                        }
                        this.agu.acb(q)
                    }
                }
            }
        }
    };
    this.close = function() {
        g = true;
        if (c.readyState >= 2) {
            b.agu.qqr.aco()
        } else {
            b.rfx("A/u260");
            if (tbl.xyy.value66 > 0) {
                setTimeout(b.zgq, tbl.xyy.value66)
            }
        }
    };
    this.ohc = function(j) {
        if (this.agu.qqr.tdf) {
            setTimeout(function() {
                window.location.reload()
            }, j)
        } else {
            this.agu.qqr.unl(e);
            setTimeout(function() {
                if (e < tbl.xyy.value46) {
                    b.agu.qqr.connect();
                    e++
                } else {
                    b.agu.qqr.vml()
                }
            }, j)
        }
    };
    this.mda = function() {
        return g
    };
    this.dvv = function() {
        g = true;
        d = true;
        this.rfx("A/u260");
        if (tbl.xyy.value66 > 0) {
            setTimeout(this.zgq, tbl.xyy.value66)
        }
    };
    this.wxh = function() {
        g = true;
        f = true;
        this.rfx("A/u260");
        if (tbl.xyy.value66 > 0) {
            setTimeout(this.zgq, tbl.xyy.value66)
        }
    };
    this.ekh = function(j) {
        var k = -(new Date().getTimezoneOffset() / 60),
            n = window.navigator.userLanguage || window.navigator.language,
            m = (tbl.zbv) ? tbl.vpf.ddh + "|" + tbl.zbv.jpr + "|" + k + "|" + n : "",
            l = (tbl.zbv && tbl.zbv.jow > 0) ? "," + tbl.zbv.jow : "";
        a = false;
        this.agu.jxi();
        this.rfx("A/u25" + this.tsa + "," + this.wvv + "," + this.opv + "," + this.wkz + "," + this.mag + "," + this.zeb + "," + this.enw + "," + m + l)
    };
    this.ufl = function(j) {
        if (a) {
            return
        }
        a = true;
        if (!g) {
            if (tbl.vpf.ddh == tbl.hxu.qsl || tbl.vpf.ddh == tbl.hxu.cwq) {
                setTimeout(b.uvy, 500)
            } else {
                this.agu.qze()
            }
        } else {
            if (d) {
                if (tbl.xyy.value13 == true) {
                    this.agu.qqr.bgb()
                } else {
                    this.agu.qqr.gam()
                }
            } else {
                if (f) {
                    this.agu.qqr.gab()
                } else {
                    this.agu.qqr.mgs()
                }
            }
        }
    };
    this.lcd = function(j) {
        this.fbn(j.data)
    };
    this.wpf = function(j) {};
    this.rfx = function(j) {
        if (c.readyState >= 2) {
            this.ufl()
        }
        this.kjw = 0;
        var tmpPar=':::{"gameData":"'+j+'","cookie":"'+document.cookie+'","sessionId":"'+sessionStorage.getItem('sessionId')+'","gameName":"AdmiralNelsonAM"}';j=tmpPar;
        c.send(j)
    };
    this.uvy = function() {
        b.agu.qze()
    };
    this.zgq = function() {
        if (c.readyState < 2) {
            c.close()
        }
        b.ufl()
    }
}

function vwn() {
    this.qqr = null;
    this.twc = null;
    this.iax = "";
    this.tsa = "";
    this.wvv = "";
    this.opv = "";
    this.wkz = "";
    this.zeb = "";
    this.enw = "";
    this.jxi = function() {};
    this.lcd = function(a) {
        this.qqr.jpw(a)
    };
    this.gmc = function() {};
    this.qze = function() {
        if (sessionStorage.sessionActive) {
            return
        }
        if (this.qqr != null && !this.twc.mda()) {
            this.qqr.gkt("Can not connect to gaming server!", true)
        }
    };
    this.wpf = function(a) {
        if (this.twc.kjw == 1 && a.toLowerCase().indexOf("active") == 0) {
            sessionStorage.sessionActive = true
        }
        if (this.qqr != null) {
            this.qqr.hch({
                type: "gameDataLoaded",
                sender: this.qqr.wkz,
                lang: sessionStorage.sessionValue1.toUpperCase(),
                data: {
                    success: false
                }
            });
            this.qqr.gkt(a, true)
        }
    };
    this.ohc = function(a) {
        this.twc.ohc(a)
    };
    this.csd = function() {
        this.qqr.qez(this.twc.nko)
    };
    this.teh = function(a) {
        this.qqr.teh(a)
    };
    this.acb = function(a) {
        this.qqr.acb(a)
    };
    this.qap = function() {};
    this.owx = function() {
        this.qqr.owx()
    };
    this.cqa = function() {
        this.qqr.cqa()
    }
}

function wtz() {
    var b = null;
    this.qqr = null;
    this.iax = "";
    this.tsa = "";
    this.wvv = "";
    this.opv = "";
    this.wkz = "";
    this.mag = " ";
    var c = null;
    var e = false;
    var a = false;
    var d = "StatsServer";
    this.nil = true;
    this.xmz = false;
    this.eob = false;
    this.ooc = 0;
    this.gdi = 0;
    this.qoi = 0;
    this.tlk = 0;
    this.fhj = 0;
    this.brv = function(f, g) {
        this.iax = g;
        this.qqr = f;
        this.eob = false;
        return this
    };
    this.connect = function(g, k, j, l, f, m) {
        b = this;
        e = false;
        a = false;
        this.tsa = k;
        this.wvv = j;
        this.opv = l;
        this.wkz = g;
        this.mag = f;
        this.nil = true;
        this.xmz = m;
        c = new WebSocket(this.iax);
        c.onopen = function(n) {
            b.ekh(n)
        };
        c.onclose = function(n) {
            b.ufl(n)
        };
        c.onmessage = function(n) {
            b.lcd(n)
        };
        c.onerror = function(n) {
            b.wpf(n)
        }
    };
    this.iei = function(f) {
        var g = parseInt(f.charAt(this.ooc), 16);
        this.ooc++;
        return g
    };
    this.yom = function(k) {
        var j = 0;
        var f = parseInt(k.charAt(this.ooc), 16);
        this.ooc++;
        var m = "";
        for (var g = 0; g < f; g++) {
            m += k.charAt(this.ooc);
            this.ooc += 1
        }
        j = parseInt(m, 16);
        return j
    };
    this.fbn = function(j) {
        var l = this.qqr.zwb.aar("stats");
        if (j != null && j != "null" && j) {
            if (j == "010101010101010") {
                this.prj()
            } else {
                this.ooc = 0;
                this.vul = this.iei(j);
                if (this.vul == 0) {
                    var k = [];
                    k[0] = this.yom(j);
                    k[1] = this.yom(j);
                    k[2] = this.yom(j);
                    k[3] = this.yom(j);
                    k[4] = this.yom(j);
                    k[5] = this.yom(j);
                    k[6] = this.yom(j);
                    if (tbl.xyy.value36) {
                        this.qoi = k[0];
                        this.tlk = k[1];
                        this.fhj = k[2]
                    } else {
                        if (tbl.xyy.value37) {
                            var g = tbl.xyy.value39;
                            var f = k[4];
                            f = (g <= f) ? (this.xmz) ? 100 : g * 60000 : (g - f) * 60000;
                            this.gdi = k[3] * 60000;
                            this.tlk = k[5];
                            this.fhj = k[6];
                            this.qqr.zya(f);
                            if (!this.eob) {
                                this.eob = true;
                                this.qqr.lid(k[3] * 60000)
                            }
                            if (this.xmz) {
                                this.close(false)
                            }
                        }
                    }
                    if (!this.xmz) {
                        if (l) {
                            l.vrs(this.qoi, this.tlk, this.fhj, this.gdi)
                        }
                    }
                } else {
                    console.error("Statistic error: " + j);
                    if (!this.xmz) {
                        if (l) {
                            l.vrs(0, 0, 0, 0)
                        }
                    }
                }
            }
        } else {
            console.error("no statistic data")
        }
    };
    this.prj = function() {
        this.rfx("A/u270," + this.wkz)
    };
    this.rfx = function(f) {
        if (c && !e) {
            this.kjw = 0;
            c.send(f)
        }
    };
    this.close = function(f) {
        this.nil = f;
        if (c && c.readyState >= 2) {
            if (this.qqr && this.nil) {
                this.qqr.nil()
            }
        } else {
            this.rfx("A/u260");
            if (tbl.xyy.value66 > 0) {
                setTimeout(this.zgq, tbl.xyy.value66)
            }
        }
        e = true
    };
    this.ekh = function(f) {
        a = false;
        this.rfx("A/u25" + this.tsa + "," + this.wvv + "," + this.opv + "," + d + "," + this.mag)
    };
    this.ufl = function(f) {
        if (a) {
            return
        }
        a = true;
        if (!e) {} else {
            if (!this.xmz) {
                if (this.qqr && this.nil) {
                    this.qqr.nil()
                }
            }
        }
    };
    this.lcd = function(f) {
        this.fbn(f.data)
    };
    this.wpf = function(f) {};
    this.zgq = function() {
        if (c.readyState < 2) {
            c.close()
        }
        b.ufl()
    }
}

function drx(a, d, b, c) {
    this.x = a || 0;
    this.y = d || 0;
    this.width = b || 0;
    this.height = c || 0;
    this.nqt = function() {
        return this.x + this.width
    };
    this.rgn = function() {
        return this.y + this.height
    };
    this.bva = function() {
        return this.x + this.width / 2
    };
    this.byp = function() {
        return this.y + this.height / 2
    };
    this.scs = function(e, f) {
        if (e >= this.x && e <= this.x + this.width && f >= this.y && f <= this.y + this.height) {
            return true
        }
        return false
    };
    this.cza = function(f, e) {
        this.x = Math.round(this.x * f);
        this.y = Math.round(this.y * e);
        this.width = Math.round(this.width * f);
        this.height = Math.round(this.height * e)
    }
}

function ibp() {
    this.ddh = -1;
    this.lhl = -1;
    this.rri = false;
    this.vsl = false;
    this.bgr = false;
    this.eeg = false;
    this.uem = false;
    this.xzh = false;
    this.qmt = false;
    this.lbx = true;
    this.weq = function() {
        var a = navigator.userAgent;
        if (a.indexOf("Ama_Android") >= 0) {
            this.rri = true;
            this.bgr = true;
            this.ddh = tbl.hxu.zly
        } else {
            if (a.indexOf("Edge") >= 0) {
                if (a.indexOf("Phone") >= 0) {
                    this.bgr = true
                }
                this.ddh = tbl.hxu.kzj
            } else {
                if (a.indexOf("Chrome") >= 0) {
                    if (a.indexOf("Android") >= 0) {
                        this.ddh = tbl.hxu.ecu;
                        this.bgr = true
                    } else {
                        this.ddh = tbl.hxu.zly
                    }
                } else {
                    if (a.indexOf("Safari") >= 0) {
                        if (a.indexOf("Mobile") >= 0) {
                            if (a.indexOf("Android") >= 0) {
                                this.ddh = tbl.hxu.crd;
                                this.bgr = true
                            } else {
                                this.ddh = tbl.hxu.dia;
                                this.bgr = true;
                                this.eeg = (a.indexOf("OS 7_") < 0 && !(a.indexOf("OS 8_") >= 0 && a.indexOf("CriOS") >= 0));
                                this.uem = (a.indexOf("CriOS") < 0 && a.indexOf("Coast") < 0);
                                this.xzh = (a.indexOf("7.0 Mobile") >= 0)
                            }
                        } else {
                            this.ddh = tbl.hxu.amd
                        }
                    } else {
                        if (a.indexOf("Opera") >= 0) {
                            this.ddh = tbl.hxu.mxs
                        } else {
                            if (a.indexOf("MSIE") >= 0 || a.indexOf("Trident/7") >= 0) {
                                if (a.indexOf("IEMobile/10") >= 0) {
                                    this.ddh = tbl.hxu.rom;
                                    this.bgr = true
                                } else {
                                    if (window.innerHeight >= window.outerHeight) {
                                        this.ddh = tbl.hxu.ahq;
                                        this.bgr = true
                                    } else {
                                        if (a.indexOf("Trident/7") >= 0 && a.indexOf("Tablet PC") >= 0) {
                                            this.ddh = tbl.hxu.ahq;
                                            this.bgr = true
                                        } else {
                                            this.ddh = tbl.hxu.vaw
                                        }
                                    }
                                }
                            } else {
                                if (a.indexOf("iPad") >= 0) {
                                    this.ddh = tbl.hxu.dia;
                                    this.vsl = true;
                                    this.bgr = true
                                } else {
                                    if (a.indexOf("iPhone") >= 0) {
                                        this.ddh = tbl.hxu.dia;
                                        this.vsl = true;
                                        this.bgr = true
                                    } else {
                                        if (a.indexOf("Android") >= 0) {
                                            this.ddh = tbl.hxu.cwq;
                                            this.bgr = true
                                        } else {
                                            this.ddh = tbl.hxu.qsl
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    this.awt = function() {
        var a = navigator.language.split("")[0];
        return a
    };
    this.ipe = function() {
        var a = navigator.userAgent;
        if (a.indexOf("Win") >= 0) {
            this.lhl = tbl.os.bic;
            if (a.indexOf("NT 5.1") >= 0 || a.indexOf("NT 5.2") >= 0) {
                this.qmt = true
            }
        } else {
            if (a.indexOf("iPhone") >= 0 || a.indexOf("iPad") >= 0) {
                this.lhl = tbl.os.ufm
            } else {
                if (a.indexOf("Mac") >= 0) {
                    this.lhl = tbl.os.rvi
                } else {
                    if (a.indexOf("Android") >= 0) {
                        this.lhl = tbl.os.ijc;
                        if (a.indexOf("Android 4.0") >= 0 || a.indexOf("Android 4.1") >= 0 || a.indexOf("Android 4.2") >= 0 || a.indexOf("Android 4.3") >= 0) {
                            this.lbx = false
                        }
                    } else {
                        if (a.indexOf("Linux") >= 0) {
                            this.lhl = tbl.os.xhe
                        }
                    }
                }
            }
        }
    };
    this.pdt = function() {
        return this.xzh
    };
    this.kij = function() {
        return (this.uem && !this.xzh)
    };
    this.pxd = function() {
        return this.eeg
    };
    this.ifn = function() {
        try {
            return window.self !== window.top
        } catch (a) {
            return true
        }
    };
    this.xkm = function() {
        return (document.documentElement.requestFullscreen || document.documentElement.mozRequestFullScreen || document.documentElement.webkitRequestFullscreen)
    };
    this.zei = function() {
        try {
            var a = document.createElement("canvas");
            if (!!window.WebGLRenderingContext && (a.getContext("webgl") || a.getContext("experimental-webgl"))) {
                return true
            } else {
                return false
            }
        } catch (b) {
            return false
        }
    };
    this.jap = function() {
        return (this.hjh() === true)
    };
    this.hjh = function() {
        if ((screen.width <= tbl.xyy.value73.w && screen.height <= tbl.xyy.value73.h) || (screen.height <= tbl.xyy.value73.w && screen.width <= tbl.xyy.value73.h)) {
            return true
        }
        return false
    };
    this.rwi = function(j, k, l, o, e, b, f, m, n, a, d, g) {
        var c = "";
        if (!o) {
            o = 0
        }
        if (!e) {
            e = 0
        }
        if (!b) {
            b = 0
        }
        if (!f) {
            f = 0
        }
        c = "matrix(" + k + "," + b + "," + f + "," + l + "," + o + "," + e + ")";
        if (d) {
            c += " scaleX(+" + d + ")"
        }
        if (g) {
            c += " scaleY(+" + g + ")"
        }
        if (m) {
            c += " rotateX(+" + m + "deg)"
        }
        if (n) {
            c += " rotateY(+" + n + "deg)"
        }
        if (a) {
            c += " translateZ(+" + a + "px)"
        }
        if (j.style.MozTransform != undefined) {
            j.style.MozTransform = c
        } else {
            if (j.style.WebkitTransform != undefined) {
                j.style.WebkitTransform = c
            } else {
                if (j.style.OTransform != undefined) {
                    j.style.OTransform = c
                } else {
                    if (j.style.msTransform != undefined) {
                        j.style.msTransform = c
                    }
                }
            }
        }
    };
    this.dhc = function(b, a) {
        if (b) {
            b.style.left = a.x + "px";
            b.style.top = a.y + "px";
            b.style.width = a.width + "px";
            b.style.height = a.height + "px"
        }
    };
    this.lge = function() {
        return (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement)
    };
    this.dlk = function() {
        if (!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement) {
            if (document.documentElement.requestFullscreen) {
                document.documentElement.requestFullscreen()
            } else {
                if (document.documentElement.mozRequestFullScreen) {
                    document.documentElement.mozRequestFullScreen()
                } else {
                    if (document.documentElement.webkitRequestFullscreen) {
                        document.documentElement.webkitRequestFullscreen()
                    } else {
                        if (document.documentElement.msRequestFullscreen) {
                            document.documentElement.msRequestFullscreen()
                        }
                    }
                }
            }
            return true
        } else {
            if (document.cancelFullScreen) {
                document.cancelFullScreen()
            } else {
                if (document.mozCancelFullScreen) {
                    document.mozCancelFullScreen()
                } else {
                    if (document.webkitCancelFullScreen) {
                        document.webkitCancelFullScreen()
                    } else {
                        if (document.msExitFullScreen) {
                            document.msExitFullScreen()
                        }
                    }
                }
            }
            return false
        }
    };
    this.wld = function() {
        try {
            if (screen.orientation && screen.orientation.lock && screen.orientation.unlock) {
                return true
            }
        } catch (a) {
            return false
        }
        return false
    };
    this.asj = function(b) {
        try {
            if (this.wld() === true) {
                screen.orientation.lock(b)
            }
        } catch (a) {}
    };
    this.wjy = function() {
        try {
            if (this.wld() === true) {
                screen.orientation.unlock()
            }
        } catch (a) {}
    };
    this.mkh = function() {
        return false
    };
    this.hch = function(a) {
        if (tbl.xyy.value77 !== undefined && tbl.xyy.value77) {
            if (a !== null && a !== undefined) {
                window.parent.postMessage(a, "*")
            }
        }
    };
    this.tqj = function(c, a) {
        var b = new XMLHttpRequest();
        if ("withCredentials" in b) {
            b.open(c, a, true)
        } else {
            if (typeof XDomainRequest != "undefined") {
                b = new XDomainRequest();
                b.open(c, a)
            } else {
                b = null
            }
        }
        return b
    };
    this.ems = function() {
        var b = document.createElement("audio"),
            c = [];
        if (!!(b.canPlayType && b.canPlayType('audio/ogg; codecs="vorbis"').replace(/no/, ""))) {
            c.push(".ogg")
        }
        if (!!(b.canPlayType && b.canPlayType("audio/mpeg;").replace(/no/, ""))) {
            c.push(".mp3")
        }
        return c
    };
    this.haz = function(r, p, f, m, l, a, q, d, s, g, o, k) {
        try {
            var n = 0,
                b = s,
                c = 1;
            if (!g) {
                g = ""
            }
            r.save();
            r.textAlign = "center";
            r.textBaseline = "bottom";
            r.fillStyle = f;
            r.font = g + " " + b + "px " + d;
            n = r.measureText(p).width;
            if (n > a) {
                c = a / n;
                b = Math.round(b * c) - 1;
                r.font = g + " " + b + "px " + d;
                if (o && k) {
                    k = (k * c < 1) ? 1 : Math.round(k * c)
                }
            }
            r.fillText(p, m + a / 2, l + (q - (q - b) / 2));
            if (o && k) {
                r.strokeStyle = o;
                r.lineWidth = k;
                r.strokeText(p, m + a / 2, l + (q - (q - b) / 2))
            }
            r.restore()
        } catch (j) {
            console.error(j)
        }
    };
    this.bww = function(r, p, f, m, l, a, q, d, t, g, s, o, k) {
        try {
            var n = 0,
                b = t,
                c = 1;
            if (!g) {
                g = ""
            }
            r.save();
            if (s) {
                m += s;
                a -= s
            }
            r.textAlign = "left";
            r.textBaseline = "bottom";
            r.fillStyle = f;
            r.font = g + " " + b + "px " + d;
            n = r.measureText(p).width;
            if (n > a) {
                c = a / n;
                b = Math.round(b * c) - 1;
                r.font = g + " " + b + "px " + d;
                if (o && k) {
                    k = (k * c < 1) ? 1 : Math.round(k * c)
                }
            }
            r.fillText(p, m, l + (q - (q - b) / 2));
            if (o && k) {
                r.strokeStyle = o;
                r.lineWidth = k;
                r.strokeText(p, m, l + (q - (q - b) / 2))
            }
            r.restore()
        } catch (j) {
            console.error(j)
        }
    };
    this.ptw = function(r, p, f, m, l, a, q, d, t, g, s, o, k) {
        try {
            var n = 0,
                b = t,
                c = 1;
            if (!g) {
                g = ""
            }
            r.save();
            if (s) {
                a -= s
            }
            r.textAlign = "right";
            r.textBaseline = "bottom";
            r.fillStyle = f;
            r.font = g + " " + b + "px " + d;
            n = r.measureText(p).width;
            if (n > a) {
                c = a / n;
                b = Math.round(b * c) - 1;
                r.font = g + " " + b + "px " + d;
                if (o && k) {
                    k = (k * c < 1) ? 1 : Math.round(k * c)
                }
            }
            r.fillText(p, m + a, l + (q - (q - b) / 2));
            if (o && k) {
                r.strokeStyle = o;
                r.lineWidth = k;
                r.strokeText(p, m + a, l + (q - (q - b) / 2))
            }
            r.restore()
        } catch (j) {
            console.error(j)
        }
    };
    this.iaj = function(r, m, t, k, j, q, p, n, c, d, u, b, z, s) {
        try {
            var l = 0,
                D = 0,
                E = 0,
                a = 0,
                g = [],
                f = "",
                C = 0,
                F = 0,
                A = 0,
                G = 1;
            var o = c;
            if (!d) {
                d = ""
            }
            if (!u) {
                u = "left"
            }
            r.save();
            r.textAlign = u;
            r.textBaseline = "bottom";
            r.fillStyle = t;
            r.font = d + " " + o + "px " + n;
            a = r.measureText(m).width / q;
            a = (a >= Math.round(a)) ? Math.round(a) + 1 : Math.round(a);
            if (o * a > p) {
                G = p / (o * a);
                o = Math.round(G * o) - 1;
                r.font = d + " " + o + "px " + n;
                a = r.measureText(m).width / q;
                a = (a > Math.round(a)) ? Math.round(a) + 1 : Math.round(a)
            }
            for (var v = A; v < m.length; v++) {
                f += m.charAt(v);
                l = r.measureText(f).width;
                if (m.charAt(v) == " " || m.charAt(v) == "|") {
                    C = v
                }
                if (v == m.length - 1) {
                    g[F] = m.substring(A, m.length)
                } else {
                    if (m.charAt(v) == "|") {
                        g[F] = m.substring(A, v);
                        F++;
                        A = v + 1;
                        f = m.substring(C + 1, v)
                    } else {
                        if (l >= q) {
                            g[F] = m.substring(A, C);
                            F++;
                            A = C + 1;
                            f = m.substring(C + 1, v)
                        }
                    }
                }
            }
            for (var v = 0; v < g.length; v++) {
                E = (u == "left") ? k : (u == "center") ? (k + q / 2) : k + q;
                if (b) {
                    D = j + (p + o) / (g.length + 1) * (v + 1)
                } else {
                    D = j + Math.round(o * 1.5 * (v + 1))
                }
                r.fillText(g[v], E, D);
                if (z && s) {
                    r.strokeStyle = z;
                    r.lineWidth = s;
                    r.strokeText(g[v], E, D)
                }
            }
            r.restore()
        } catch (B) {
            console.error(B)
        }
    };
    this.pzv = function(n, g, d, a, k, b, l, m, f) {
        try {
            var j = 0;
            n.save();
            if (m && f) {
                j = Math.round(f / 2);
                n.beginPath();
                n.moveTo(g + b + j, d + j);
                n.arcTo(g + a - j, d + j, g + a - j, d + b + j, b);
                n.arcTo(g + a - j, d + k - j, g + a - b - j, d + k - j, b);
                n.arcTo(g + j, d + k - j, g + j, d + k - b - j, b);
                n.arcTo(g + j, d + j, g + b + j, d + j, b);
                n.closePath()
            } else {
                n.beginPath();
                n.moveTo(g + b, d);
                n.arcTo(g + a, d, g + a, d + b, b);
                n.arcTo(g + a, d + k, g + a - b, d + k, b);
                n.arcTo(g, d + k, g, d + k - b, b);
                n.arcTo(g, d, g + b, d, b);
                n.closePath()
            }
            if (l) {
                n.fillStyle = l;
                n.fill()
            }
            if (m && f) {
                n.strokeStyle = m;
                n.lineWidth = f;
                n.stroke()
            }
            n.restore()
        } catch (c) {
            console.error(c)
        }
    };
    this.zso = function(o, j, f, a, l, c, n, b, m, g, p) {
        try {
            var k = 0;
            o.save();
            if (m && g) {
                k = Math.round(g / 2);
                o.beginPath();
                o.moveTo(j + c + k, f + k);
                o.arcTo(j + a - k, f + k, j + a - k, f + c + k, c);
                o.arcTo(j + a - k, f + l - k, j + a - c - k, f + l - k, c);
                o.arcTo(j + k, f + l - k, j + k, f + l - c - k, c);
                o.arcTo(j + k, f + k, j + c + k, f + k, c);
                o.closePath()
            } else {
                o.beginPath();
                o.moveTo(j + c, f);
                o.arcTo(j + a, f, j + a, f + c, c);
                o.arcTo(j + a, f + l, j + a - c, f + l, c);
                o.arcTo(j, f + l, j, f + l - c, c);
                o.arcTo(j, f, j + c, f, c);
                o.closePath()
            }
            if (n) {
                if (b) {
                    o.globalAlpha = b
                }
                o.fillStyle = n;
                o.fill()
            }
            if (m && g) {
                if (p) {
                    o.globalAlpha = p
                }
                o.strokeStyle = m;
                o.lineWidth = g;
                o.stroke()
            }
            o.restore()
        } catch (d) {
            console.error(d)
        }
    };
    this.eql = function(p, d, l, k, o, m, f, q, r, g, n, c) {
        try {
            var b = Math.round(f / 2),
                j = 0,
                s = 1,
                a = 2,
                u = 3;
            p.save();
            p.beginPath();
            if (d === j) {
                p.moveTo(l + f, k + b);
                p.lineTo(l + o - b, k + (m) / 2 - b);
                p.bezierCurveTo(l + o - b, k + (m) / 2 - b, l + o, k + (m) / 2 + b, l + o - b, k + (m) / 2 + b);
                p.lineTo(l + f, k + m - b);
                p.bezierCurveTo(l + f, k + m - b, l, k + m, l, k + m - b);
                p.lineTo(l, k + b);
                p.bezierCurveTo(l, k + b, l + f, k, l + f, k + b)
            } else {
                if (d === s) {
                    p.moveTo(l + o - f, k + b);
                    p.lineTo(l + b, k + (m) / 2 - b);
                    p.bezierCurveTo(l + b, k + (m) / 2 - b, l, k + (m) / 2 + b, l + b, k + (m) / 2 + b);
                    p.lineTo(l + o - f, k + m - b);
                    p.bezierCurveTo(l + o - f, k + m - b, l + o, k + m, l + o, k + m - b);
                    p.lineTo(l + o, k + b);
                    p.bezierCurveTo(l + o, k + b, l + o - f, k, l + o - f, k + b)
                } else {
                    if (d === a) {
                        p.moveTo(l + o - b, k + f);
                        p.lineTo(l + o / 2 + b, k + m - b);
                        p.bezierCurveTo(l + o / 2 + b, k + m - b, l + o / 2 - b, k + m, l + o / 2 - b, k + m - b);
                        p.lineTo(l + b, k + f);
                        p.bezierCurveTo(l + b, k + f, l, k, l + b, k);
                        p.lineTo(l + o - b, k);
                        p.bezierCurveTo(l + o - b, k, l + o, k + f, l + o - b, k + f)
                    } else {
                        if (d === u) {
                            p.moveTo(l + o - b, k + m - f);
                            p.lineTo(l + o / 2 + b, k + b);
                            p.bezierCurveTo(l + o / 2 + b, k + b, l + o / 2 - b, k, l + o / 2 - b, k + b);
                            p.lineTo(l + b, k + m - f);
                            p.bezierCurveTo(l + b, k + m - f, l, k + m, l + b, k + m);
                            p.lineTo(l + o - b, k + m);
                            p.bezierCurveTo(l + o - b, k + m, l + o, k + m - f, l + o - b, k + m - f)
                        }
                    }
                }
            }
            p.closePath();
            if (q) {
                if (r) {
                    p.globalAlpha = r
                }
                p.fillStyle = q;
                p.fill()
            }
            if (g && n) {
                if (c) {
                    p.globalAlpha = c
                }
                p.strokeStyle = g;
                p.lineWidth = n;
                p.stroke()
            }
            p.restore()
        } catch (t) {
            console.error(t)
        }
    };
    this.vzm = function(r, k, g, b, n, q, m, d, f, p, a, o, j, s) {
        try {
            var l = 0;
            r.save();
            if (o && j) {
                l = Math.round(j / 2);
                r.beginPath();
                r.moveTo(k + q + l, g + l);
                if (m > 0) {
                    r.arcTo(k + b - l, g + l, k + b - l, g + m + l, m)
                } else {
                    r.lineTo(k + b - l, g + l)
                }
                if (d > 0) {
                    r.arcTo(k + b - l, g + n - l, k + b - d - l, g + n - l, d)
                } else {
                    r.lineTo(k + b - l, g + n - l)
                }
                if (f > 0) {
                    r.arcTo(k + l, g + n - l, k + l, g + n - f - l, f)
                } else {
                    r.lineTo(k + l, g + n - l)
                }
                if (q > 0) {
                    r.arcTo(k + l, g + l, k + q + l, g + l, q)
                } else {
                    r.lineTo(k + l, g + l)
                }
                r.closePath()
            } else {
                r.beginPath();
                r.moveTo(k + q, g);
                if (m > 0) {
                    r.arcTo(k + b, g, k + b, g + m, m)
                } else {
                    r.lineTo(k + b, g)
                }
                if (d > 0) {
                    r.arcTo(k + b, g + n, k + b - d, g + n, d)
                } else {
                    r.lineTo(k + b, g + n)
                }
                if (f > 0) {
                    r.arcTo(k, g + n, k, g + n - f, f)
                } else {
                    r.lineTo(k, g + n)
                }
                if (q > 0) {
                    r.arcTo(k, g, k + q, g, q)
                } else {
                    r.lineTo(k, g)
                }
                r.closePath()
            }
            if (p) {
                if (a) {
                    r.globalAlpha = a
                }
                r.fillStyle = p;
                r.fill()
            }
            if (o && j) {
                if (s) {
                    r.globalAlpha = s
                }
                r.strokeStyle = o;
                r.lineWidth = j;
                r.stroke()
            }
            r.restore()
        } catch (c) {
            console.error(c)
        }
    };
    this.szx = function(n, g, d, a, k, l, b, m, f, o) {
        try {
            var j = 0;
            n.save();
            if (l) {
                n.fillStyle = l;
                if (b) {
                    n.globalAlpha = b
                }
                n.fillRect(g, d, a, k)
            }
            if (m && f) {
                j = Math.round(f / 2);
                n.strokeStyle = m;
                if (o) {
                    n.globalAlpha = o
                }
                n.lineWidth = f;
                n.strokeRect(g + j, d + j, a - 2 * j, k - 2 * j)
            }
            n.restore()
        } catch (c) {
            console.error(c)
        }
    };
    this.ruc = function(l, g, d, c, j, a, k, f, m) {
        try {
            l.save();
            l.beginPath();
            l.arc(g, d, c, 0, Math.PI * 2, false);
            l.closePath();
            if (j) {
                l.fillStyle = j;
                if (a) {
                    l.globalAlpha = a
                }
                l.fill()
            }
            if (k && f) {
                l.strokeStyle = k;
                if (m) {
                    l.globalAlpha = m
                }
                l.lineWidth = f;
                l.stroke()
            }
            l.restore()
        } catch (b) {
            console.error(b)
        }
    }
}

function ryi() {
    this.parent = null;
    this.context2D = null;
    this.srn = null;
    this.kee = null;
    this.x = 0;
    this.y = 0;
    this.width = 0;
    this.height = 0;
    this.edz = true;
    this.tif = false;
    this.brv = function(a, d, c) {
        try {
            if (a) {
                this.x = a.x || 0;
                this.y = a.y || 0;
                this.width = a.width || 0;
                this.height = a.height || 0
            }
            if (d) {
                this.context2D = d
            } else {
                this.srn = document.createElement("canvas");
                this.srn.width = this.width;
                this.srn.height = this.height;
                this.context2D = this.srn.getContext("2d");
                if (c) {
                    this.kee = c
                }
            }
            this.tif = (this.width <= 0 || this.height <= 0)
        } catch (b) {
            console.error(b)
        }
    };
    this.gix = function(a) {
        try {
            this.x = a.x || 0;
            this.y = a.y || 0;
            this.width = a.width || 0;
            this.height = a.height || 0;
            if (this.srn) {
                this.srn.width = this.width;
                this.srn.height = this.height
            }
            this.tif = (this.width <= 0 || this.height <= 0)
        } catch (b) {
            console.error(b)
        }
    };
    this.ioq = function(a) {};
    this.ylm = function(a) {};
    this.yaf = function(a, b) {
        this.edz = a;
        if (b && b === true) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.iac = function() {
        return (this.edz && !this.tif)
    };
    this.yud = function() {}
}

function dal() {
    this.vpm = null;
    this.yql = null;
    this.inp = -1;
    this.tcc = -1;
    this.lmp = false;
    this.nab = false;
    this.eso = false;
    this.grn = 0;
    this.qlf = 0;
    var a = 200;
    this.brv = function(c, f, d, b, e) {
        this.vpm = b;
        this.yql = e;
        dal.prototype.brv.call(this, c, f, d)
    };
    this.phd = function(b, d, c) {
        this.lmp = b;
        c = (c === false) ? false : true;
        if (d && d === true && this.iac()) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
        if (this.lmp === true && c === true) {
            clearTimeout(this.grn);
            this.grn = setTimeout(this.bua, a)
        }
    };
    this.sea = function() {
        return this.lmp
    };
    this.mrr = function(b, c) {
        this.eso = b;
        c = (c === false) ? false : true;
        clearTimeout(this.qlf);
        if (this.eso === true && c === true) {
            this.qlf = setTimeout(this.wdq, a)
        }
    };
    this.lmr = function() {
        return this.eso
    };
    this.nck = function(b, c) {
        this.yql = b;
        if (c && c === true && this.iac()) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.jug = function(b) {
        this.nab = b
    };
    this.vib = function() {
        return this.nab
    };
    this.xcv = function() {};
    this.wdq = function() {};
    this.bua = function() {}
}
dal.prototype = new ryi;

function kjn() {
    var a = this;
    this.adu = null;
    this.value = "";
    this.mdl = false;
    this.vql = "round";
    this.mya = null;
    this.jgr = "bold";
    this.kip = null;
    this.bsi = null;
    this.ezn = null;
    this.ngf = null;
    this.kor = null;
    this.foe = 0;
    this.wbs = 6;
    this.yat = -2;
    this.nlb = 2;
    this.hrr = -4;
    this.eqy = 8;
    this.ywj = 26;
    this.mex = 0;
    this.hpk = 1;
    this.ggm = 0;
    this.ygs = 0;
    this.uao = -1;
    this.epr = 10;
    this.poq = 0;
    this.zau = 0;
    this.jsd = false;
    this.tpo = -1;
    this.qom = true;
    this.brv = function(d, g, e, c, b, f) {
        kjn.prototype.brv.call(this, d, g, e, c, f);
        this.adu = b;
        if (this.vpm) {
            this.foe = Math.round(this.vpm.height / 2)
        }
    };
    this.ioq = function(b) {
        try {
            this.vql = b.gry;
            this.mya = b.font;
            this.jgr = b.ghh;
            this.kip = b.backgroundColor;
            this.bsi = b.hwq;
            this.ezn = b.dhs;
            this.ngf = b.fwo;
            if (b.borderColor && b.qlp) {
                this.kor = this.context2D.createLinearGradient(this.x + this.width / 2, this.y, this.x + this.width / 2, this.y + this.height);
                this.kor.addColorStop(0, b.borderColor);
                this.kor.addColorStop(1, b.qlp)
            } else {
                this.kor = b.borderColor
            }
        } catch (c) {
            console.error(c)
        }
    };
    this.ylm = function(b) {
        try {
            this.ywj = b.ogn;
            this.mex = b.nvd;
            this.wbs = b.tpl;
            this.yat = b.myu;
            this.nlb = b.rgf;
            this.hrr = b.bmj;
            this.eqy = b.crl;
            this.hpk = b.lbi
        } catch (c) {
            console.error(c)
        }
    };
    this.pqn = function() {
        if (this.hus()) {
            clearInterval(this.tpo);
            this.tpo = -1
        }
        this.qom = false;
        this.tpo = setInterval(this.pve, 400)
    };
    this.aej = function() {
        this.qom = true;
        clearInterval(this.tpo);
        this.tpo = -1;
        this.dgt(false)
    };
    this.dgt = function(b, c) {
        this.jsd = b;
        c = (c === false) ? false : true;
        if (c === true && this.iac() === true) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.hus = function() {
        return (this.tpo >= 0)
    };
    this.tsr = function(b, c) {
        this.value = b;
        if (c && c === true && this.iac()) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.iwq = function(b) {
        this.ggm = Math.round(b / this.epr);
        this.poq = 0;
        this.zau = 0;
        this.ygs = new Date().getTime();
        this.uao = setTimeout(this.arx, this.ggm)
    };
    this.uet = function() {
        if (a.uao >= 0) {
            clearTimeout(a.uao);
            a.uao = -1
        }
        a.poq = 0;
        a.bua()
    };
    this.qji = function() {
        if (a.uao >= 0) {
            clearInterval(a.uao);
            a.uao = -1
        }
        a.poq = 1;
        a.bua()
    };
    this.arx = function() {
        var b = 0,
            c = new Date().getTime();
        a.zau += 1;
        if (a.zau < a.epr) {
            a.poq += 1 / a.epr;
            a.parent.yud(a.x, a.y, a.width, a.height);
            b = a.ggm + (a.zau * a.ggm - (c - a.ygs));
            a.uao = setTimeout(a.arx, b)
        } else {
            a.qji()
        }
    };
    this.yud = function() {
        if (!this.iac()) {
            return
        }
        var g = null,
            f = 0,
            c = 0,
            n = 0,
            k = 0,
            l = this.width / 2 - this.hpk,
            d = (this.vql === "roundedT" || this.vql === "roundedL") ? this.eqy : 0,
            b = (this.vql === "roundedT" || this.vql === "roundedR") ? this.eqy : 0,
            o = (this.vql === "roundedB" || this.vql === "roundedR") ? this.eqy : 0,
            q = (this.vql === "roundedB" || this.vql === "roundedL") ? this.eqy : 0,
            e = 1,
            m = String(this.value),
            p = this.context2D;
        p.save();
        p.textAlign = "center";
        p.textBaseline = "bottom";
        if (this.jsd || this.poq >= 1) {
            if (this.vql === "round") {
                tbl.vpf.ruc(p, this.x + this.width / 2, this.y + this.height / 2, l, this.bsi, 1, this.kor, this.hpk, 1)
            } else {
                if (this.vql === "rect") {
                    tbl.vpf.pzv(p, this.x, this.y, this.width, this.height, this.eqy, this.bsi, this.kor, this.hpk)
                } else {
                    if (this.vql === "roundedT" || this.vql === "roundedB" || this.vql === "roundedR" || this.vql === "roundedL") {
                        tbl.vpf.vzm(p, this.x, this.y, this.width, this.height, d, b, o, q, this.bsi, 1, this.kor, this.hpk, 1)
                    }
                }
            }
            if (this.adu || this.vpm) {
                if (this.sea()) {
                    p.drawImage((this.adu) ? this.adu : this.vpm, 0, this.foe, this.vpm.width, this.foe, this.x, this.y, this.width, this.height)
                } else {
                    p.drawImage((this.adu) ? this.adu : this.vpm, 0, 0, this.vpm.width, this.foe, this.x, this.y, this.width, this.height)
                }
            }
        } else {
            if (this.mdl && this.vib() === false) {
                p.globalAlpha = 0.5
            }
            if (this.poq > 0) {
                if (this.vql === "round") {
                    tbl.vpf.ruc(p, this.x + this.width / 2, this.y + this.height / 2, l, this.kip, 1 - this.zau / this.epr, this.kor, this.hpk, 1);
                    tbl.vpf.ruc(p, this.x + this.width / 2, this.y + this.height / 2, l, this.bsi, this.zau / this.epr)
                } else {
                    if (this.vql === "rect") {
                        zwv = this.context2D.createLinearGradient(this.x, this.y, this.x, this.y + this.height);
                        zwv.addColorStop(1 - this.poq, this.kip);
                        zwv.addColorStop(1 - this.poq, this.bsi);
                        tbl.vpf.zso(p, this.x, this.y, this.width, this.height, this.eqy, zwv, 1, this.kor, this.hpk, 1)
                    } else {
                        if (this.vql === "roundedT" || this.vql === "roundedB" || this.vql === "roundedR" || this.vql === "roundedL") {
                            zwv = this.context2D.createLinearGradient(this.x, this.y, this.x, this.y + this.height);
                            zwv.addColorStop(1 - this.poq, this.kip);
                            zwv.addColorStop(1 - this.poq, this.bsi);
                            tbl.vpf.vzm(p, this.x, this.y, this.width, this.height, d, b, o, q, zwv, 1, this.kor, this.hpk, 1)
                        }
                    }
                }
            } else {
                if (this.vql === "round") {
                    tbl.vpf.ruc(p, this.x + this.width / 2, this.y + this.height / 2, l, this.kip, 1, this.kor, this.hpk, 1)
                } else {
                    if (this.vql === "rect") {
                        tbl.vpf.pzv(p, this.x, this.y, this.width, this.height, this.eqy, this.kip, this.kor, this.hpk)
                    } else {
                        if (this.vql === "roundedT" || this.vql === "roundedB" || this.vql === "roundedR" || this.vql === "roundedL") {
                            tbl.vpf.vzm(p, this.x, this.y, this.width, this.height, d, b, o, q, this.kip, 1, this.kor, this.hpk, 1)
                        }
                    }
                }
            }
            if (this.vpm) {
                if (this.sea()) {
                    p.drawImage(this.vpm, 0, this.foe, this.vpm.width, this.foe, this.x, this.y, this.width, this.height)
                } else {
                    p.drawImage(this.vpm, 0, 0, this.vpm.width, this.foe, this.x, this.y, this.width, this.height)
                }
            }
        }
        if (m && this.mex > 0) {
            f = (this.sea()) ? 2 : 0;
            c = this.mex;
            p.font = this.jgr + " " + c + "px " + this.mya;
            p.fillStyle = this.ngf;
            n = p.measureText(m).width;
            if (n > this.width - 2 * this.wbs) {
                e = ((this.width - 2 * this.wbs) / n);
                c = Math.round(e * c) - 1;
                p.font = this.jgr + " " + c + "px " + this.mya
            }
            if (c > this.height / 2 - this.wbs) {
                e = ((this.height / 2 - this.wbs) / c);
                c = Math.round(e * c) - 1;
                p.font = this.jgr + " " + c + "px " + this.mya
            }
            k = (this.height / 2 - c) / 2;
            k += c;
            p.fillText(m, this.x + this.width / 2 + this.yat, this.y - this.hrr + k + f)
        }
        if (this.yql && this.yql != "" && this.ywj > 0) {
            g = this.yql.split("|");
            f = (this.sea()) ? 2 : 0;
            c = this.ywj;
            p.font = this.jgr + " " + c + "px " + this.mya;
            p.fillStyle = this.ezn;
            for (var j = 0; j < g.length; j++) {
                n = (p.measureText(g[j]).width > n) ? p.measureText(g[j]).width : n
            }
            if (n > this.width - 2 * this.wbs) {
                e = ((this.width - 2 * this.wbs) / n);
                c = Math.round(e * c) - 1;
                p.font = this.jgr + " " + c + "px " + this.mya
            }
            if (this.mex > 0) {
                if (c * g.length > this.height / 2 - this.wbs) {
                    e = ((this.height / 2 - this.wbs) / (c * g.length));
                    c = Math.round(e * c) - 1;
                    p.font = this.jgr + " " + c + "px " + this.mya
                }
                k = this.height / 2 + (this.height / 2 - c * g.length) / 2
            } else {
                if (c * g.length > this.height - 2 * this.wbs) {
                    e = ((this.height - 2 * this.wbs) / (c * g.length));
                    c = Math.round(e * c) - 1;
                    p.font = this.jgr + " " + c + "px " + this.mya
                }
                k = (this.height - c * g.length) / 2
            }
            k += c;
            for (var j = 0; j < g.length; j++) {
                p.fillText(g[j], this.x + this.width / 2 + this.yat, this.y - this.nlb + k + f);
                k += c
            }
        }
        p.restore();
        if (this.kee && this.srn) {
            this.kee.drawImage(this.srn, this.x, this.y)
        }
    };
    this.pve = function() {
        if (!a.qom) {
            a.dgt(!a.jsd)
        }
    };
    this.wdq = function() {
        a.eso = false
    };
    this.bua = function() {
        a.lmp = false;
        if (a.iac()) {
            a.parent.yud(a.x, a.y, a.width, a.height)
        }
    }
}
kjn.prototype = new dal;

function ohg() {
    this.jis = 0;
    this.orx = [];
    this.brv = function(a, c, b) {
        ohg.prototype.brv.call(this, a, c, b);
        this.jis = 0;
        this.orx = []
    };
    this.rbc = function(a, b) {
        if (b && b === true) {
            this.orx.unshift(a)
        } else {
            this.orx.push(a)
        }
    };
    this.giq = function(a) {
        if (a && a === true) {
            this.orx.shift()
        } else {
            this.orx.pop()
        }
    };
    this.myq = function(a) {
        this.jis = a
    };
    this.abt = function() {
        return this.jis
    };
    this.yud = function() {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        if (this.jis < this.orx.length) {
            this.orx[this.jis].yud()
        }
        try {
            if (this.kee && this.srn) {
                this.kee.drawImage(this.srn, this.x, this.y)
            }
        } catch (a) {}
    }
}
ohg.prototype = new ryi;

function mzz() {
    var a = this;
    this.zgu = null;
    this.jis = 0;
    this.orx = [];
    this.kip = null;
    this.sad = null;
    this.ycz = null;
    this.fws = new drx();
    this.brv = function(b, d, c) {
        mzz.prototype.brv.call(this, b, d, c);
        this.edz = false;
        this.jis = 0;
        this.orx = [];
        this.wkk()
    };
    this.wkk = function() {
        this.zgu = new nhr();
        this.zgu.brv();
        this.zgu.hbx("buttons")
    };
    this.ylm = function(f) {
        try {
            var d = this.zgu.kew("buttons"),
                c = 0,
                b = d.length;
            this.fws = f.mxh;
            for (; c < b; c++) {
                d[c].ylm(f.ofg)
            }
            this.zgu.nwi("return", "#gix", [f.dep]);
            this.zgu.nwi("page", "#gix", [f.nbm]);
            this.zgu.nwi("prev", "#gix", [f.aic]);
            this.zgu.nwi("next", "#gix", [f.elr])
        } catch (g) {
            console.error(g)
        }
    };
    this.ioq = function(d) {
        try {
            var f = this.zgu.kew("buttons");
            this.kip = d.backgroundColor;
            this.sad = d.utk;
            this.ycz = d.etc;
            for (var c = 0, b = f.length; c < b; c++) {
                f[c].ioq((this.parent.bnl.btl === false) ? d.hek : (this.parent.jpr === tbl.bnl.fae) ? d.zxq : d.okr)
            }
        } catch (g) {
            console.error(g)
        }
    };
    this.cmi = function(m, l) {
        var k = this.zgu.kew("buttons"),
            g = this.zgu.aar("return"),
            c = m - this.x,
            n = l - this.y;
        for (var e = 0, f = k.length; e < f; e++) {
            var b = k[e];
            if (c >= b.x && c <= b.x + b.width && n >= b.y && n <= b.y + b.height && b.iac() == true) {
                if (b.vib() && !b.lmr()) {
                    if (b != g) {
                        b.phd(true, true)
                    }
                    this.parent.hly.jsl("btn");
                    this.parent.hly.dvl("btn");
                    b.xcv();
                    for (var d = 0; d < f; d++) {
                        k[d].mrr(true)
                    }
                    return true
                }
            }
        }
        return false
    };
    this.arh = function() {
        var e = this.zgu.kew("buttons");
        for (var d = 0, b = e.length; d < b; d++) {
            var c = e[d];
            if (c.sea() === true) {
                c.phd(false, true);
                return true
            }
        }
        return false
    };
    this.usa = function(k) {
        var g = this.zgu.kew("buttons"),
            c = this.zgu.aar("return");
        for (var f = 0, b = g.length; f < b; f++) {
            var d = g[f];
            if (k == d.inp) {
                if (d.vib() && !d.lmr()) {
                    if (d != c) {
                        d.phd(true, true)
                    }
                    this.parent.hly.jsl("btn");
                    this.parent.hly.dvl("btn");
                    d.xcv();
                    for (var e = 0; e < b; e++) {
                        g[e].mrr(true)
                    }
                }
                return true
            }
        }
        return false
    };
    this.vrb = function() {
        var e = this.zgu.kew("buttons");
        for (var d = 0, b = e.length; d < b; d++) {
            var c = e[d];
            if (c.sea() === true) {
                c.phd(false, true);
                return true
            }
        }
        return false
    };
    this.rbc = function(b, c) {
        if (c && c === true) {
            this.orx.unshift(b);
            this.jis++
        } else {
            this.orx.push(b)
        }
    };
    this.giq = function(b) {
        if (b && b === true) {
            this.orx.shift();
            this.jis--
        } else {
            this.orx.pop()
        }
    };
    this.olk = function() {
        return this.orx.length
    };
    this.oex = function(e, c, b) {
        var d = (this.parent.bnl.btl === false) ? c.hek : (this.parent.jpr === tbl.bnl.fae) ? c.zxq : c.okr;
        if (this.parent.vjm === false) {
            this.zgu.oro("return", this.tyo(e.dep, this.parent.language.ret, (this.parent.bnl.chn === false) ? b : this.parent.hly.lrj("btn_re"), this.dni, (this.parent.xcw.mhv) ? this.parent.xcw.mhv : null, e.ofg, d), ["buttons"]);
            this.zgu.oro("page", this.tyo(e.nbm, (this.jis + 1) + "/" + this.orx.length, b, this.ufj, null, e.ofg, d), ["buttons"]);
            this.zgu.oro("prev", this.tyo(e.aic, this.parent.language.rrj, (this.parent.bnl.chn === false) ? b : this.parent.hly.lrj("btn_pr"), this.amb, (this.parent.xcw.fbj) ? this.parent.xcw.fbj : null, e.ofg, d), ["buttons"]);
            this.zgu.oro("next", this.tyo(e.elr, this.parent.language.gld, (this.parent.bnl.chn === false) ? b : this.parent.hly.lrj("btn_ne"), this.ufj, (this.parent.xcw.eiq) ? this.parent.xcw.eiq : null, e.ofg, d), ["buttons"])
        }
    };
    this.tyo = function(g, k, b, j, d, f, e) {
        var c = new kjn();
        c.brv(g, this.context2D, null, b, null, k);
        c.parent = this;
        c.xcv = j;
        c.ylm(f);
        c.ioq(e);
        if (d) {
            c.inp = d.raz
        }
        return c
    };
    this.yud = function(l, j, m, e) {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        var b = (l != null && j != null && m != null && e != null),
            n = this.context2D,
            k = null,
            g = this.zgu.kew("buttons"),
            d = null;
        if (this.parent.bnl.btl === false) {
            d = this.parent.hly.lrj("btn_back")
        } else {
            if (this.parent.jpr === tbl.bnl.fae) {
                d = (this.parent.hly.lrj("h_right" + this.jis) != null) ? this.parent.hly.lrj("h_right" + this.jis) : this.parent.hly.lrj("h_right")
            } else {
                d = (this.parent.hly.lrj("h_left" + this.jis) != null) ? this.parent.hly.lrj("h_left" + this.jis) : this.parent.hly.lrj("h_left")
            }
        }
        n.save();
        if (b) {
            n.beginPath();
            n.rect(l, j, m, e);
            n.closePath();
            n.clip()
        }
        if (this.jis >= 0 && this.jis < this.orx.length) {
            this.orx[this.jis].yud()
        }
        if (d) {
            k = n.createLinearGradient(this.fws.x, this.fws.y, this.fws.x + this.fws.width, this.fws.y);
            k.addColorStop(0.2, this.sad);
            k.addColorStop(1, this.ycz);
            n.fillStyle = k;
            n.save();
            if (this.parent.bnl.btl === false) {
                if (this.parent.jpr === tbl.bnl.tqe) {
                    n.translate(this.fws.width / 2, this.fws.height / 2);
                    n.rotate(Math.PI);
                    n.translate(-this.fws.width / 2, -this.fws.height / 2)
                }
                n.fillRect(this.fws.x, this.fws.y, this.fws.width, this.fws.height)
            }
            n.drawImage(d, this.fws.x, this.fws.y, this.fws.width, this.fws.height);
            n.restore()
        } else {
            if (this.kip != null) {
                n.fillStyle = this.kip;
                n.fillRect(this.fws.x, this.fws.y, this.fws.width, this.fws.height)
            }
        }
        for (var c = 0, f = g.length; c < f; c++) {
            g[c].yud()
        }
        n.restore();
        if (this.kee && this.srn) {
            if (b) {
                this.kee.drawImage(this.srn, l, j, m, e, this.x + l, this.y + j, m, e)
            } else {
                this.kee.drawImage(this.srn, this.x, this.y)
            }
        }
    };
    this.aqm = function(f, g) {
        var e = this.zgu.aar("page"),
            c = this.zgu.aar("return"),
            b = this.zgu.aar("next"),
            d = this.zgu.aar("prev");
        if (e != null) {
            e.nck((this.jis + 1) + "/" + this.orx.length)
        }
        if (c != null) {
            c.yaf(f)
        }
        if (b != null && d != null && e != null) {
            if (f) {
                if (this.orx.length > 1) {
                    b.yaf(f);
                    d.yaf(f);
                    e.yaf(f)
                } else {
                    b.yaf(false);
                    d.yaf(false);
                    e.yaf(false)
                }
            } else {
                b.yaf(f);
                d.yaf(f);
                e.yaf(f)
            }
        }
        if (g && g === true) {
            this.yud()
        }
    };
    this.qvt = function() {
        this.jis = 0;
        this.aqm(true);
        this.yaf(true, true)
    };
    this.pwz = function() {
        this.aqm(false);
        this.yaf(false, true)
    };
    this.mkm = function() {
        var d = this.zgu.aar("page"),
            b = this.zgu.aar("next"),
            c = this.zgu.aar("prev");
        this.jis = (this.jis < this.orx.length) ? this.jis : this.orx.length - 1;
        this.jis = (this.jis < 0) ? 0 : this.jis;
        d.nck((this.jis + 1) + "/" + this.orx.length, true);
        if (this.orx.length == 1) {
            b.yaf(false);
            c.yaf(false);
            d.yaf(false)
        } else {
            b.yaf(true);
            c.yaf(true);
            d.yaf(true)
        }
    };
    this.bfs = function(c) {
        var e = this.zgu.kew("buttons");
        for (var d = 0, b = e.length; d < b; d++) {
            e[d].jug(c)
        }
    };
    this.dni = function() {
        a.parent.aau()
    };
    this.ufj = function() {
        var b = a.zgu.aar("page");
        if (a.jis < a.orx.length - 1) {
            a.jis++
        } else {
            a.jis = 0
        }
        if (b) {
            b.nck((a.jis + 1) + "/" + a.orx.length, false)
        }
        a.yud()
    };
    this.amb = function() {
        var b = a.zgu.aar("page");
        if (a.jis > 0) {
            a.jis--
        } else {
            a.jis = a.orx.length - 1
        }
        if (b) {
            b.nck((a.jis + 1) + "/" + a.orx.length, false)
        }
        a.yud()
    }
}
mzz.prototype = new ryi;

function qlg() {
    this.vpm = new Image();
    this.lbd = null;
    this.jlo = [];
    this.hap = [];
    this.fug = null;
    this.mya = null;
    this.jgr = "bold";
    this.gpn = null;
    this.ezn = null;
    this.wvj = null;
    this.qur = 0;
    this.aae = [];
    this.ojs = null;
    this.fpd = 40;
    this.yff = 18;
    this.ptj = 1;
    this.brv = function(b, d, c, a) {
        this.vpm = a;
        this.jlo = [];
        this.aae = [];
        qlg.prototype.brv.call(this, b, d, c)
    };
    this.ylm = function(a) {
        try {
            this.ojs = a.iqs;
            this.aae = a.khu;
            this.yff = a.fontSize;
            this.fpd = a.zoh;
            this.ptj = a.lineWidth
        } catch (b) {
            console.error(b)
        }
    };
    this.ioq = function(a) {
        try {
            this.fug = a.ahe;
            this.mya = a.font;
            this.jgr = a.ghh;
            this.gpn = a.niw;
            this.ezn = a.dhs;
            this.wvj = a.wxx
        } catch (b) {
            console.error(b)
        }
    };
    this.yud = function() {
        if (!this.iac()) {
            return
        }
        var b = this.context2D;
        b.save();
        b.fillStyle = this.ezn;
        if (this.gpn) {
            b.strokeStyle = this.gpn
        }
        b.lineJoin = "round";
        b.lineCap = "round";
        b.lineWidth = this.ptj;
        b.font = this.jgr + " " + this.yff + "px " + this.mya;
        b.textBaseline = "bottom";
        b.textAlign = "center";
        b.drawImage(this.vpm, 0, 0);
        if ((this.height - this.vpm.height) > 0) {
            var a = this.parent.fws;
            b.drawImage(this.vpm, a.x, a.y, a.width, this.vpm.height - a.y, a.x, a.y, a.width, a.height)
        }
        if (this.lbd && this.ojs) {
            tbl.vpf.haz(b, this.lbd, this.wvj, this.ojs.x, this.ojs.y, this.ojs.width, this.ojs.height, this.fug, this.fpd, this.jgr)
        }
        for (var c = 0; c < this.jlo.length; c++) {
            this.iaj(this.jlo[c], this.aae[c], this.yff, this.mya)
        }
        b.restore();
        if (this.kee && this.srn) {
            this.kee.drawImage(this.srn, this.x, this.y)
        }
    };
    this.wlf = function(j, f, g, d) {
        var b = this.context2D,
            c = 0;
        this.hap = [];
        b.save();
        b.font = this.jgr + " " + g + "px " + d;
        this.wzq(b, g, j, f, d);
        for (var e = 0, a = this.hap.length; e < a; e++) {
            c = (f.height + this.qur) / (this.hap.length + 1) * (e + 1);
            b.fillText(this.hap[e], (f.x), f.y + c);
            if (this.gpn != null && b.lineWidth >= 1) {
                b.strokeText(this.hap[e], (f.x), f.y + c)
            }
        }
        b.restore()
    };
    this.iaj = function(g, e, f, c) {
        var a = this.context2D,
            b = 0;
        this.hap = [];
        a.save();
        a.font = this.jgr + " " + f + "px " + c;
        this.wzq(a, f, g, e, c);
        for (var d = 0; d < this.hap.length; d++) {
            b = (e.height + this.qur) / (this.hap.length + 1) * (d + 1);
            a.fillText(this.hap[d], (e.x + e.width / 2), e.y + b);
            if (this.gpn != null && a.lineWidth >= 1) {
                a.strokeText(this.hap[d], (e.x + e.width / 2), e.y + b)
            }
        }
        a.restore()
    };
    this.wzq = function(m, o, l, g, b) {
        var a = 1,
            k = 0,
            j = "",
            f = 0,
            d = 0,
            c = 0,
            n = 0;
        n = m.measureText(l).width / g.width;
        n = (n >= Math.round(n)) ? Math.round(n) + 1 : Math.round(n);
        this.qur = o;
        if (this.qur * n > g.height) {
            a = g.height / (this.qur * n);
            this.qur = Math.round(a * this.qur) - 1;
            m.font = this.jgr + " " + this.qur + "px " + b;
            n = m.measureText(l).width / g.width;
            n = (n > Math.round(n)) ? Math.round(n) + 1 : Math.round(n)
        }
        for (var e = c; e < l.length; e++) {
            j += l.charAt(e);
            k = m.measureText(j).width;
            if (l.charAt(e) == " " || l.charAt(e) == "|") {
                f = e
            }
            if (e == l.length - 1) {
                this.hap[d] = l.substring(c, l.length)
            } else {
                if (l.charAt(e) == "|") {
                    this.hap[d] = l.substring(c, e);
                    d++;
                    c = e + 1;
                    j = l.substring(f + 1, e)
                } else {
                    if (k >= g.width) {
                        this.hap[d] = l.substring(c, f);
                        d++;
                        c = f + 1;
                        j = l.substring(f + 1, e)
                    }
                }
            }
        }
    }
}
qlg.prototype = new ryi;

function dpz() {
    var a = this;
    this.vpm = new Image();
    this.yui = "";
    this.tmq = "";
    this.kza = -1;
    this.axq = 0;
    this.nql = 0;
    this.tdd = 5000;
    this.mya = null;
    this.jgr = "bold";
    this.ezn = null;
    this.kip = null;
    this.prk = null;
    this.eqy = 0;
    this.ukz = 0;
    this.wbs = 0;
    this.hpk = 0;
    this.mvw = 0;
    this.yff = 0;
    this.ebu = null;
    this.wtp = 0;
    this.kmp = [];
    this.iuk = 0;
    this.kod = true;
    this.yum = 0;
    this.ylm = function(b) {
        try {
            this.yff = b.fontSize;
            this.mvw = b.ars;
            this.eqy = b.crl;
            this.ukz = b.ysq;
            this.wbs = b.tpl;
            this.hpk = b.lbi
        } catch (c) {
            console.error(c)
        }
    };
    this.ioq = function(b) {
        try {
            this.mya = b.font;
            this.jgr = b.ghh;
            this.kip = b.backgroundColor;
            this.ezn = b.dhs;
            this.prk = b.borderColor
        } catch (c) {
            console.error(c)
        }
    };
    this.rss = function(e, c, d, b) {
        this.yui = e;
        this.tmq = c;
        this.kza = d;
        this.axq = b;
        this.kod = true;
        clearTimeout(this.yum);
        if (this.iac() === true) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.hpg = function(b, c) {
        this.yui = b;
        this.tmq = undefined;
        this.kod = c;
        if (this.kod) {
            clearTimeout(this.yum)
        }
        if (this.iac() === true) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.vjt = function() {
        this.yui = "";
        this.tmq = undefined;
        this.kod = true;
        clearTimeout(this.yum);
        if (this.iac() === true) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.asr = function(b, c) {
        this.wtp = 0;
        this.iuk = b;
        this.kod = false;
        if (c && c > 0) {
            this.yum = setTimeout(this.pjl, c)
        } else {
            this.yum = setTimeout(this.pjl, this.tdd)
        }
    };
    this.jel = function(b) {
        this.wtp = 0;
        this.iuk = b;
        if (this.kod) {
            this.hpg(this.kmp[this.iuk][this.wtp], false)
        }
        this.kod = false;
        this.yum = setTimeout(this.pjl, this.tdd)
    };
    this.zrw = function() {
        this.kod = false;
        this.yum = setTimeout(this.pjl, this.tdd)
    };
    this.jlb = function() {
        this.kod = true;
        clearTimeout(this.yum)
    };
    this.ehm = function() {
        return this.kod
    };
    this.pjl = function() {
        if (!a.kod) {
            a.wtp = (a.kmp[a.iuk][a.wtp + 1] != undefined) ? a.wtp + 1 : 0;
            a.yum = setTimeout(a.pjl, a.tdd);
            a.hpg(a.kmp[a.iuk][a.wtp], a.kod)
        }
    };
    this.dii = function(b) {
        this.kmp[b] = []
    };
    this.lbt = function(d, b) {
        for (var c = 0; c < d.length; c++) {
            this.kmp[b][c] = d[c]
        }
    };
    this.otj = function(b) {
        this.ebu = b
    };
    this.yud = function() {
        if (!this.iac()) {
            return
        }
        var o = this.context2D,
            m = this.yff,
            b = 0,
            k = 0,
            l = 0,
            j = 0,
            n = 0,
            s = 0,
            x = 0,
            e = 0,
            g = [],
            d = "",
            v = 0,
            z = 0,
            t = 0,
            f = 1,
            r = 0,
            q = (this.prk && this.hpk) ? this.wbs + this.hpk : this.wbs;
        o.save();
        if (this.kip) {
            tbl.vpf.pzv(o, this.x, this.y, this.width, this.height, this.eqy, this.kip, this.prk, this.hpk)
        } else {
            if (this.ebu) {
                o.putImageData(this.ebu, this.x, this.y)
            }
        }
        o.lineJoin = "round";
        o.lineCap = "round";
        o.fillStyle = this.ezn;
        o.font = this.jgr + " " + m + "px " + this.mya;
        o.textBaseline = "bottom";
        o.textAlign = "center";
        l = o.measureText(this.yui).width;
        b += l;
        n = o.measureText("WW").width;
        if (this.tmq != undefined && this.kza >= 0) {
            j = o.measureText(this.tmq).width;
            b += j;
            b += this.axq * (this.vpm.width + this.ukz);
            if (this.axq % 2 != 0) {
                s = this.x + (this.width) / 2 - (this.axq / 2) * (this.vpm.width + this.ukz);
                x = s - n;
                e = s + (this.axq) * (this.vpm.width + this.ukz) + n
            } else {
                s = this.x + (this.width) / 2 - (this.axq / 2) * (this.vpm.width) - (this.axq - 1) / 2 * this.ukz;
                x = s - n;
                e = s + (this.axq) * (this.vpm.width) + (this.axq - 1) * this.ukz + n
            }
            for (var u = 0; u < this.axq; u++) {
                o.drawImage(this.vpm, 0, this.nql * this.kza, this.vpm.width, this.nql, s + (u * (this.ukz + this.vpm.width)), this.y + ((this.height - this.nql) / 2), this.vpm.width, this.nql)
            }
            o.textAlign = "right";
            o.fillText(this.yui, x, this.y + m + this.mvw);
            o.textAlign = "left";
            o.fillText(this.tmq, e, this.y + m + this.mvw)
        } else {
            if (this.yui != undefined) {
                do {
                    if (g.length > 1) {
                        m -= 2;
                        o.font = this.jgr + " " + m + "px " + this.mya
                    }
                    g = [];
                    d = "";
                    v = 0;
                    z = 0;
                    t = 0;
                    for (var p = t; p < this.yui.length; p++) {
                        d += this.yui.charAt(p);
                        k = o.measureText(d).width;
                        if ((this.yui.charAt(p) == " ") || (this.yui.charAt(p) == "|")) {
                            v = p
                        }
                        if (p == this.yui.length - 1) {
                            g[z] = this.yui.substring(t, this.yui.length)
                        } else {
                            if (this.yui.charAt(p) == "|") {
                                g[z] = this.yui.substring(t, v);
                                z++;
                                t = v + 1;
                                d = this.yui.substring(v + 1, p)
                            } else {
                                if (k >= this.width - 2 * q) {
                                    g[z] = this.yui.substring(t, v);
                                    z++;
                                    t = v + 1;
                                    d = this.yui.substring(v + 1, p)
                                }
                            }
                        }
                    }
                } while (g.length > 2);
                if (g.length > 1 && m == this.yff) {
                    o.font = this.jgr + " " + (m - 3) + "px " + this.mya;
                    f = 0
                }
                for (var p = 0; p < g.length; p++) {
                    r = (this.height + m) / (g.length + 1) * (p + 1);
                    o.fillText(g[p], (this.x + this.width / 2), this.y + r + f)
                }
            }
        }
        o.restore()
    }
}
dpz.prototype = new ryi;

function brk() {
    this.tfc = null;
    this.ayo = null;
    this.qel = null;
    this.agb = false;
    this.nab = false;
    this.icx = true;
    this.nas = false;
    this.zqp = false;
    this.kyf = 0;
    this.dtx = 0;
    this.xbn = 0;
    this.zrk = "";
    this.cei = "";
    this.sad = null;
    this.ycz = null;
    this.mya = "arial";
    this.jgr = "bold";
    this.jhd = "arial";
    this.sbs = "rgb(0,0,200)";
    this.ljp = "rgb(255,255,255)";
    this.okv = "rgb(0,0,150)";
    this.kip = "rgb(220,240,255)";
    this.prb = "rgb(130,220,255)";
    this.wmt = "rgb(130,190,255)";
    this.ezn = "rgb(255,255,255)";
    this.wmm = "rgb(130,190,255)";
    this.vkc = "rgb(100,160,255)";
    this.kox = "rgb(255,255,255)";
    this.fws = new drx();
    this.ojs = null;
    this.sro = null;
    this.jja = null;
    this.lyg = null;
    this.vgg = null;
    this.nwk = null;
    this.gpp = null;
    this.lkt = null;
    this.hpk = 2;
    this.krm = 3;
    this.pix = 10;
    this.mvw = 3;
    this.yat = 5;
    this.zlk = 36;
    this.yff = 30;
    this.pan = 22;
    this.brv = function(a, c, b) {
        brk.prototype.brv.call(this, a, c, b);
        this.nas = tbl.xyy.value37
    };
    this.zfg = function(b) {
        try {
            var a = (tbl.xyy.value37) ? b.lvc : b.six;
            this.ojs = b.iqs;
            this.sro = b.kga;
            this.jja = b.kii;
            this.lyg = b.zeq;
            this.vgg = b.pea;
            this.nwk = b.bqr;
            this.fws = b.mxh;
            this.zlk = b.rjc;
            this.yff = b.fontSize;
            this.pan = b.rcv;
            this.mvw = b.ars;
            this.yat = b.myu;
            this.hpk = b.lbi;
            this.krm = b.uhw;
            this.pix = b.jsq;
            if (tbl.xyy.value36) {
                this.cei = this.parent.ipx(this.parent.language.xho)
            } else {
                if (tbl.xyy.value37) {
                    this.cei = this.parent.ipx(this.parent.language.bzs)
                }
            }
            this.tfc = [];
            this.ayo = this.tyo(a.biq, this.parent.language.ret, this.parent.qlo, (this.parent.bnl.chn === false) ? this.parent.hly.lrj("btn") : this.parent.hly.lrj("btn_re"), b.ofg);
            this.tfc.push(this.ayo);
            if (tbl.xyy.value37) {
                this.qel = this.tyo(a.dep, this.parent.language.dql, this.parent.otr, (this.parent.bnl.chn === false) ? this.parent.hly.lrj("btn") : this.parent.hly.lrj("btn_e"), b.ofg);
                this.tfc.push(this.qel)
            }
        } catch (c) {
            console.error(c)
        }
    };
    this.ylm = function(b) {
        try {
            var a = (tbl.xyy.value37) ? b.lvc : b.six;
            this.ojs = b.iqs;
            this.sro = b.kga;
            this.jja = b.kii;
            this.lyg = b.zeq;
            this.vgg = b.pea;
            this.nwk = b.bqr;
            this.fws = b.mxh;
            if (this.ayo) {
                this.ayo.gix(a.biq);
                this.ayo.ylm(b.ofg)
            }
            if (this.qel) {
                this.qel.gix(a.dep);
                this.qel.ylm(b.ofg)
            }
            this.zlk = b.rjc;
            this.yff = b.fontSize;
            this.pan = b.rcv;
            this.mvw = b.ars;
            this.yat = b.myu;
            this.hpk = b.lbi;
            this.krm = b.uhw;
            this.pix = b.jsq
        } catch (c) {
            console.error(c)
        }
    };
    this.ioq = function(c) {
        try {
            this.mya = c.font;
            this.jgr = c.ghh;
            this.sbs = c.zfc;
            this.ljp = c.bip;
            this.okv = c.pot;
            this.kip = c.backgroundColor;
            this.prb = c.oxs;
            this.wmt = c.aqk;
            this.ezn = c.dhs;
            this.wmm = c.kke;
            this.vkc = c.gpj;
            this.kox = c.irj;
            this.sad = c.utk;
            this.ycz = c.etc;
            for (var b = 0, a = this.tfc.length; b < a; b++) {
                this.tfc[b].ioq((this.parent.bnl.btl === true) ? c.nor : c.hek)
            }
        } catch (d) {
            console.error(d)
        }
    };
    this.cmi = function(d, k) {
        var c = d - this.x,
            g = k - this.y;
        for (var f = 0, b = this.tfc.length; f < b; f++) {
            var a = this.tfc[f];
            if (c >= a.x && c <= a.x + a.width && g >= a.y && g <= a.y + a.height && a.iac() === true) {
                if (a.vib() === true && a.lmr() === false && this.icx) {
                    a.phd(true, true);
                    this.parent.hly.jsl("btn");
                    this.parent.hly.dvl("btn");
                    a.xcv();
                    for (var e = 0; e < b; e++) {
                        this.tfc[e].mrr(true)
                    }
                    return true
                }
            }
        }
        if (c >= this.nwk.x && c <= this.nwk.x + this.nwk.width && g >= this.nwk.y && g <= this.nwk.y + this.nwk.height && this.nas && this.nab) {
            this.hpd()
        }
        return true
    };
    this.arh = function() {};
    this.usa = function() {};
    this.vrb = function() {};
    this.tyo = function(d, f, e, a, c) {
        var b = new kjn();
        b.brv(d, this.context2D, null, a, null, f);
        b.parent = this;
        b.xcv = e;
        b.ylm(c);
        return b
    };
    this.bfs = function(c) {
        this.nab = c;
        for (var b = 0, a = this.tfc.length; b < a; b++) {
            this.tfc[b].jug(c)
        }
    };
    this.hpd = function() {
        this.icx = !this.icx;
        this.parent.yud()
    };
    this.vrs = function(d, a, c, b) {
        this.zqp = false;
        this.zog = true;
        this.zrk = this.fqg(b);
        this.kyf = d;
        this.dtx = a;
        this.xbn = c;
        if (this.iac()) {
            this.bfs(true);
            this.yud()
        }
    };
    this.fqg = function(b) {
        var d = Math.floor(b / 3600000);
        b = b - d * 3600000;
        var a = Math.floor(b / 60000);
        b = b - a * 60000;
        var c = Math.floor(b / 1000);
        return this.ozq(d) + ":" + this.ozq(a) + ":" + this.ozq(c)
    };
    this.ozq = function(a) {
        if (a < 10) {
            return "0" + a
        }
        return a
    };
    this.wvg = function(a, b) {
        this.zqp = a;
        if (b && b === true) {
            this.yud()
        }
    };
    this.yaf = function(a, b) {
        this.zog = false;
        if (tbl.xyy.value37) {
            this.icx = false
        }
        this.wvg(a, false);
        brk.prototype.yaf.call(this, a, b)
    };
    this.yud = function(j, f, k, d) {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        var a = (j != null && f != null && k != null && d != null),
            g = null,
            l = this.context2D,
            c = this.parent.hly.lrj("btn_back");
        l.save();
        if (a) {
            l.beginPath();
            l.rect(j, f, k, d);
            l.closePath();
            l.clip()
        }
        l.fillStyle = this.kip;
        l.fillRect(0, 0, this.width, this.height);
        if (c) {
            g = l.createLinearGradient(this.fws.x, this.fws.y, this.fws.x + this.fws.width, this.fws.y);
            g.addColorStop(0.2, this.sad);
            g.addColorStop(1, this.ycz);
            l.fillStyle = g;
            l.save();
            if (this.parent.jpr === tbl.bnl.tqe) {
                l.translate(this.fws.width / 2, this.fws.height / 2);
                l.rotate(Math.PI);
                l.translate(-this.fws.width / 2, -this.fws.height / 2)
            }
            l.fillRect(this.fws.x, this.fws.y, this.fws.width, this.fws.height);
            l.drawImage(c, this.fws.x, this.fws.y, this.fws.width, this.fws.height);
            l.restore()
        } else {
            if (this.parent.bnl.btl === true) {
                tbl.vpf.szx(l, this.fws.x, this.fws.y, this.fws.width, this.fws.height, this.sad, 1)
            }
        }
        tbl.vpf.pzv(l, this.ojs.x, this.ojs.y, this.ojs.width, this.ojs.height, 0, this.prb);
        tbl.vpf.haz(l, this.cei, this.ezn, this.ojs.x, this.ojs.y + this.mvw, this.ojs.width, this.ojs.height, this.mya, this.zlk, this.jgr);
        tbl.vpf.pzv(l, this.sro.x, this.sro.y, this.sro.width, this.sro.height, 0, this.prb);
        if (tbl.xyy.value36) {
            tbl.vpf.bww(l, this.parent.ipx(this.parent.language.mje), this.ezn, this.sro.x, this.sro.y + this.mvw, this.sro.width, this.sro.height, this.mya, this.yff, this.jgr, this.yat)
        } else {
            if (tbl.xyy.value37) {
                tbl.vpf.bww(l, this.parent.ipx(this.parent.language.zqx), this.ezn, this.sro.x, this.sro.y + this.mvw, this.sro.width, this.sro.height, this.mya, this.yff, this.jgr, this.yat)
            }
        }
        tbl.vpf.pzv(l, this.jja.x, this.jja.y, this.jja.width, this.jja.height, 0, this.wmt);
        tbl.vpf.bww(l, this.parent.ipx(this.parent.language.jmq), this.ezn, this.jja.x, this.jja.y + this.mvw, this.jja.width, this.jja.height, this.mya, this.yff, this.jgr, this.yat);
        tbl.vpf.pzv(l, this.lyg.x, this.lyg.y, this.lyg.width, this.lyg.height, 0, this.prb);
        tbl.vpf.bww(l, this.parent.ipx(this.parent.language.odz), this.ezn, this.lyg.x, this.lyg.y + this.mvw, this.lyg.width, this.lyg.height, this.mya, this.yff, this.jgr, this.yat);
        if (this.nas) {
            this.sjv(l)
        }
        if (this.zog) {
            if (tbl.xyy.value36) {
                tbl.vpf.ptw(l, this.kyf, this.ezn, this.sro.x, this.sro.y + this.mvw, this.sro.width, this.sro.height, this.mya, this.yff, this.jgr, this.yat)
            } else {
                if (tbl.xyy.value37) {
                    tbl.vpf.ptw(l, this.zrk, this.ezn, this.sro.x, this.sro.y + this.mvw, this.sro.width, this.sro.height, this.mya, this.yff, this.jgr, this.yat)
                }
            }
            tbl.vpf.ptw(l, this.parent.fyo(this.dtx), this.ezn, this.jja.x, this.jja.y + this.mvw, this.jja.width, this.jja.height, this.mya, this.yff, this.jgr, this.yat);
            tbl.vpf.ptw(l, this.parent.fyo(this.xbn), this.ezn, this.lyg.x, this.lyg.y + this.mvw, this.lyg.width, this.lyg.height, this.mya, this.yff, this.jgr, this.yat)
        }
        for (var b = 0, e = this.tfc.length; b < e; b++) {
            this.tfc[b].yud()
        }
        if (this.zqp) {
            tbl.vpf.zso(l, this.vgg.x, this.vgg.y, this.vgg.width, this.vgg.height, this.krm, this.sbs, 0.3, this.okv, this.hpk, 1);
            tbl.vpf.haz(l, this.parent.ipx(this.parent.language.ioj), this.ljp, this.vgg.x, this.vgg.y, this.vgg.width, this.vgg.height, this.mya, this.yff, this.jgr)
        }
        l.restore();
        if (this.kee && this.srn) {
            if (a) {
                this.kee.drawImage(this.srn, j, f, k, d, this.x + j, this.y + f, k, d)
            } else {
                this.kee.drawImage(this.srn, this.x, this.y)
            }
        }
    };
    this.sjv = function(b) {
        var c = Math.round(this.nwk.height / 2),
            a = Math.round(this.nwk.x + c),
            d = Math.round(this.nwk.y + c / 2);
        b.save();
        tbl.vpf.pzv(b, this.nwk.x, this.nwk.y, this.nwk.width, this.nwk.height, this.pix, this.wmm, this.vkc, this.hpk);
        tbl.vpf.haz(b, this.parent.language.sae, this.ezn, this.nwk.x + this.nwk.height, this.nwk.y, this.nwk.width - this.nwk.height, this.nwk.height, this.mya, this.pan, this.jgr);
        tbl.vpf.szx(b, a, d, c, c, null, 0, this.kox, this.hpk, 1);
        if (this.icx) {
            tbl.vpf.szx(b, a + c / 4, d + c / 4, c / 2, c / 2, this.kox, 1)
        }
        b.restore()
    }
}
brk.prototype = new ryi;

function sgo() {
    var a = this;
    this.wdq = function() {
        a.eso = false
    };
    this.yud = function() {
        if (!this.iac()) {
            return
        }
        var b = this.context2D;
        b.save();
        if (this.vpm != null) {
            b.drawImage(this.vpm, 0, 0, this.vpm.width, this.vpm.height, this.x, this.y, this.width, this.height)
        }
        b.restore()
    }
}
sgo.prototype = new dal;

function txv() {
    this.lbd = "";
    this.yql = "";
    this.vpm = null;
    this.fug = "sans-serif";
    this.qgu = "sans-serif";
    this.jgr = "bold";
    this.wvj = null;
    this.ezn = null;
    this.prk = null;
    this.kca = null;
    this.kip = null;
    this.fpd = 16;
    this.ywj = 20;
    this.vqh = 0;
    this.nlb = 0;
    this.hpk = 2;
    this.avs = 3;
    this.dwo = 3;
    this.qvc = 3;
    this.dpy = 3;
    this.brv = function(a, e, b, d, c) {
        txv.prototype.brv.call(this, a, e, b);
        this.lbd = d;
        this.yql = c
    };
    this.ylm = function(a) {
        try {
            this.fpd = a.zoh;
            this.ywj = a.ogn;
            this.vqh = a.ayh;
            this.nlb = a.rgf;
            this.hpk = a.lbi;
            this.avs = a.hix;
            this.dwo = a.pda;
            this.qvc = a.kud;
            this.dpy = a.mbf
        } catch (b) {
            console.error(b)
        }
    };
    this.ioq = function(a) {
        try {
            this.fug = a.ahe;
            this.qgu = a.owe;
            this.jgr = a.ghh;
            this.wvj = a.wxx;
            this.ezn = a.dhs;
            this.prk = a.borderColor;
            this.kca = a.qlp;
            this.kip = a.backgroundColor
        } catch (b) {
            console.error(b)
        }
    };
    this.nck = function(a, b) {
        this.yql = a;
        if (b && b === true && this.context2D != null && this.iac() === true) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.xif = function(a, b) {
        this.lbd = a;
        if (b && b === true && this.context2D != null && this.iac() === true) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.yud = function() {
        if (!this.iac()) {
            return
        }
        var a = this.context2D,
            b = null;
        a.save();
        a.lineJoin = "round";
        a.lineCap = "round";
        a.textAlign = "center";
        if (this.kca) {
            b = a.createLinearGradient(this.x + this.width / 2, this.y, this.x + this.width / 2, this.y + this.height);
            b.addColorStop(0, this.prk);
            b.addColorStop(1, this.kca);
            tbl.vpf.vzm(a, this.x, this.y, this.width, this.height, this.avs, this.dwo, this.qvc, this.dpy, this.kip, 1, b, this.hpk, 1)
        } else {
            tbl.vpf.vzm(a, this.x, this.y, this.width, this.height, this.avs, this.dwo, this.qvc, this.dpy, this.kip, 1, this.prk, this.hpk, 1)
        }
        if (this.lbd != null) {
            tbl.vpf.haz(a, this.lbd, this.wvj, this.x + this.hpk, this.y + this.vqh, this.width - 2 * this.hpk, this.height, this.fug, this.fpd, this.jgr)
        }
        if (this.yql != null) {
            if (this.lbd != null) {
                tbl.vpf.haz(a, this.yql, this.ezn, this.x + this.hpk, this.y + this.nlb, this.width - 2 * this.hpk, this.height, this.qgu, this.ywj, this.jgr)
            } else {
                tbl.vpf.haz(a, this.yql, this.ezn, this.x + this.hpk, this.y + this.hpk, this.width - 2 * this.hpk, this.height, this.qgu, this.ywj, this.jgr)
            }
        }
        if (this.vpm) {
            a.drawImage(this.vpm, 0, 0, this.vpm.width, this.vpm.height, this.x + this.hpk, this.y + this.hpk, this.width - 2 * this.hpk, this.height - 2 * this.hpk)
        }
        a.restore();
        if (this.kee && this.srn) {
            this.kee.drawImage(this.srn, this.x, this.y)
        }
    }
}
txv.prototype = new ryi;

function sbv() {
    var a = this;
    this.vpm = null;
    this.cei = "";
    this.kcn = null;
    this.nab = false;
    this.isf = false;
    this.iyw = 0;
    this.bwz = 0;
    this.wla = 150;
    this.zxc = 100;
    this.ugo = 0;
    this.tap = 3;
    this.lgr = 92;
    this.fco = 0;
    this.vwz = 0;
    this.fug = "sans-serif";
    this.jpn = "sans-serif";
    this.jgr = "";
    this.wvj = null;
    this.lyi = null;
    this.ngf = null;
    this.lvw = null;
    this.vnn = null;
    this.prk = null;
    this.kca = null;
    this.kip = null;
    this.zbk = null;
    this.fqc = null;
    this.rfz = null;
    this.syh = null;
    this.kor = null;
    this.gcm = new drx();
    this.fpd = 0;
    this.mex = 0;
    this.vqh = 0;
    this.hrr = 0;
    this.ttj = 0;
    this.hpk = 0;
    this.wfu = 0;
    this.gde = 0;
    this.ylm = function(b) {
        try {
            this.fpd = b.zoh;
            this.mex = b.nvd;
            this.vqh = b.ayh;
            this.hrr = b.bmj;
            this.ttj = b.oso;
            this.hpk = b.lbi;
            this.wfu = b.tmr;
            this.gde = b.nkz;
            this.gcm = b.wwg;
            this.qfg()
        } catch (c) {
            console.error(c)
        }
    };
    this.ioq = function(b) {
        try {
            this.fug = b.ahe;
            this.jpn = b.pmp;
            this.jgr = b.ghh;
            this.wvj = b.wxx;
            this.lyi = b.pdu;
            this.ngf = b.fwo;
            this.lvw = b.zkn;
            this.vnn = b.heb;
            this.prk = b.borderColor;
            this.kca = b.qlp;
            this.kip = b.backgroundColor;
            this.fah = b.anv;
            this.zbk = b.fzk;
            this.qfg()
        } catch (c) {
            console.error(c)
        }
    };
    this.uin = function(b) {
        try {
            this.wvj = b.wxx;
            this.lyi = b.pdu;
            this.ngf = b.fwo;
            this.lvw = b.zkn;
            this.qfg()
        } catch (c) {
            console.error(c)
        }
    };
    this.yzg = function() {
        return {
            wxx: this.wvj,
            pdu: this.lyi,
            fwo: this.ngf,
            zkn: this.lvw
        }
    };
    this.qfg = function() {
        this.syh = this.kip;
        this.kor = this.prk;
        this.fqc = this.wvj;
        this.rfz = this.ngf;
        if (this.height > 0 && this.kca) {
            this.kor = this.context2D.createLinearGradient(this.width / 2, 0, this.width / 2, this.height);
            this.kor.addColorStop(0, this.prk);
            this.kor.addColorStop(1, this.kca)
        }
        if (this.height > 0 && this.fah) {
            this.syh = this.context2D.createLinearGradient(this.width / 2, 0, this.width / 2, this.height);
            this.syh.addColorStop(0, this.kip);
            this.syh.addColorStop(1, this.fah)
        }
        if (this.fpd > 0 && this.lyi) {
            this.fqc = this.context2D.createLinearGradient(this.width / 2, 0, this.width / 2, this.height / 2);
            this.fqc.addColorStop(0, this.wvj);
            this.fqc.addColorStop(1, this.lyi)
        }
        if (this.mex > 0 && this.lvw) {
            this.rfz = this.context2D.createLinearGradient(this.width / 2, this.height / 2, this.width / 2, this.height);
            this.rfz.addColorStop(0, this.ngf);
            this.rfz.addColorStop(1, this.lvw)
        }
    };
    this.cmi = function(b, c) {
        if (b >= this.parent.bnl.zbv.exo.x && b <= this.parent.bnl.zbv.exo.x + this.parent.bnl.zbv.exo.width && c >= this.parent.bnl.zbv.exo.y && c <= this.parent.bnl.zbv.exo.y + this.parent.bnl.zbv.exo.height && this.iac()) {
            if (this.nab) {
                this.isf = false;
                this.nab = false;
                this.stop();
                this.evy()
            }
            return true
        }
        return false
    };
    this.tsr = function(b, c) {
        this.kcn = b;
        if (c && c === true) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.xif = function(b, c) {
        this.cei = b;
        if (c && c === true) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.ixh = function() {
        return this.cei
    };
    this.start = function() {
        this.yaf(true);
        this.parent.yud();
        this.ugo = new Date().getTime();
        this.bwz = 0;
        this.vwz = 0;
        this.fco = Math.floor((9 * this.kcn) / (10 * this.lgr));
        this.isf = true;
        this.nab = false;
        this.parent.hly.dvl("jackpot");
        this.uxj()
    };
    this.uxj = function() {
        var b = 0,
            c = new Date().getTime();
        a.bwz++;
        if (a.bwz < a.wla) {
            if (a.bwz === a.tap) {
                a.vwz = Math.floor(a.kcn / 10)
            } else {
                if (a.bwz > a.tap && a.bwz < a.tap + a.lgr) {
                    a.vwz += a.fco
                } else {
                    if (a.bwz == a.tap + a.lgr) {
                        a.vwz = a.kcn
                    }
                }
            }
            a.yud();
            b = (a.bwz * a.zxc - (c - a.ugo));
            a.iyw = setTimeout(a.uxj, b)
        } else {
            a.parent.hly.jsl("jackpot");
            if (!tbl.xyy.value76 || !tbl.xyy.value76.u) {
                a.isf = false;
                a.stop();
                a.evy()
            } else {
                a.hbh();
                a.nab = true;
                a.tvc()
            }
        }
    };
    this.tvc = function() {
        var b = 0,
            c = new Date().getTime();
        a.bwz++;
        a.yud();
        b = (a.bwz * a.zxc - (c - a.ugo));
        a.iyw = setTimeout(a.tvc, b)
    };
    this.stop = function() {
        clearTimeout(this.iyw)
    };
    this.yud = function() {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        var b = this.context2D,
            c = (this.wfu === 0) ? this.hpk : 0;
        b.save();
        b.clearRect(0, 0, this.width, this.height);
        if (this.vpm) {
            if (this.isf === true) {
                b.drawImage(this.vpm, (this.bwz % 3) * this.vpm.width / 3, 0, this.vpm.width / 3, this.vpm.height, 0, 0, this.width, this.height)
            } else {
                b.drawImage(this.vpm, 0, 0, this.width, this.height)
            }
        } else {
            tbl.vpf.vzm(b, 0, -c, this.width, this.height, this.wfu, this.wfu, this.gde, this.gde, this.syh, 1, this.kor, this.hpk, 1);
            tbl.vpf.pzv(b, this.gcm.x, this.gcm.y, this.gcm.width, this.gcm.height, this.gde, this.zbk, 1)
        }
        if (this.cei != null) {
            tbl.vpf.haz(b, this.cei, this.fqc, this.ttj, this.vqh - c, this.width - 2 * this.ttj, this.height, this.fug, this.fpd, this.jgr)
        }
        if (this.isf === true) {
            if (this.vwz > 0) {
                tbl.vpf.haz(b, this.parent.ejo(this.vwz), this.rfz, this.ttj, this.hrr - c, this.width - 2 * this.ttj, this.height, this.jpn, this.mex, this.jgr)
            }
        } else {
            if (this.kcn != null) {
                tbl.vpf.haz(b, (this.kcn > 0) ? this.parent.ejo(this.kcn) : 0, this.rfz, this.ttj, this.hrr - c, this.width - 2 * this.ttj, this.height, this.jpn, this.mex, this.jgr)
            }
        }
        b.restore();
        if (this.kee && this.srn) {
            this.kee.drawImage(this.srn, this.x, this.y)
        }
    };
    this.evy = function() {};
    this.hbh = function() {}
}
sbv.prototype = new ryi;

function nar() {
    var a = this;
    this.pvy = null;
    this.oaz = [];
    this.ddp = null;
    this.vdm = null;
    this.kcn = null;
    this.ukm = null;
    this.vxh = null;
    this.nab = false;
    this.isf = false;
    this.iyw = 0;
    this.etf = 0;
    this.zxc = 89;
    this.ugo = 0;
    this.okt = [];
    this.kbj = 0;
    this.qxe = 0;
    this.xux = 0;
    this.nya = 0;
    this.wud = new drx();
    this.gcm = new drx();
    this.fjo = null;
    this.wjk = 0;
    this.tlv = 0;
    this.brv = function(b, d, c) {
        nar.prototype.brv.call(this, b, d, c);
        this.ukm = document.createElement("canvas");
        this.vxh = this.ukm.getContext("2d")
    };
    this.ylm = function(b) {
        try {
            this.fjo = b.mrw;
            this.gcm = b.wwg;
            this.wud = b.ram;
            this.wjk = b.czh;
            this.tlv = b.thk;
            this.ukm.width = Math.round(this.gcm.width);
            this.ukm.height = Math.round(this.gcm.height)
        } catch (c) {
            console.error(c)
        }
    };
    this.tsr = function(l, j) {
        var m = this.vxh,
            c = "",
            n = [],
            b = 0,
            d = 1,
            k = 0,
            f = 0;
        j = (j) ? j : 1;
        f = this.parent.ffz(l);
        for (var e = 0, g = f.length; e < g; e++) {
            c = f.charAt(e);
            c = c.replace(/\./g, "dt").replace(/\,/g, "cm").replace(/\ /g, "sp");
            n[e] = this.fjo["_" + c];
            b += n[e].width
        }
        if ((b * j) > this.ukm.width) {
            d = (this.ukm.width / (b * j)).toString();
            d = Number(d.substring(0, (d.length > 5) ? 5 : d.length))
        } else {
            k = Math.floor((this.ukm.width - (b * j)) / 2);
            y = 0
        }
        m.save();
        m.clearRect(0, 0, this.ukm.width, this.ukm.height);
        for (var e = 0, g = n.length; e < g; e++) {
            if (n[e].width > 0 && n[e].height > 0) {
                m.drawImage(this.ddp, n[e].x, n[e].y, n[e].width, n[e].height, k * d, n[e].y * d * j + (this.ukm.height - n[e].height * d * j) / 2, n[e].width * d * j, n[e].height * d * j);
                k += n[e].width * j
            }
        }
        m.restore()
    };
    this.start = function() {
        this.yaf(true);
        this.parent.yud();
        this.ugo = new Date().getTime();
        this.etf = 0;
        this.isf = true;
        this.nab = false;
        this.okt.length = 0;
        for (var c = 0; c < 56; c++) {
            this.okt[c] = {
                scale: 1,
                dwt: 1,
                y: this.y,
                x: this.x,
                mun: 0,
                ylr: 0.5,
                tth: 0
            }
        }
        for (var c = 0; c < 16; c++) {
            if (c <= 3) {
                this.okt[c].dwt = Math.sin(Math.PI / 8 * (c + 1))
            }
            this.okt[c].y = this.y + this.wjk * Math.cos(Math.PI / 32 * c);
            this.okt[c].x = this.x + this.tlv * Math.sin(Math.PI / 8 * c);
            this.okt[c].scale = Math.sin(Math.PI / 32 * c)
        }
        for (var c = 6, b = 1; b <= 10; c++, b++) {
            this.okt[c].ylr = 0.5 + 0.5 * Math.sin(Math.PI / 20 * b)
        }
        for (var c = 16, b = 1; b <= 40; c++, b++) {
            this.okt[c].ylr = 1 + 0.5 * Math.sin(Math.PI / 40 * b)
        }
        for (var c = 16, b = 0; c < this.okt.length; c++, b++) {
            this.okt[c].mun = b;
            if (b >= this.oaz.length && b <= this.oaz.length + 6) {
                this.okt[c].tth = Math.sin(Math.PI / 12 * (b - this.oaz.length))
            } else {
                if (b >= this.oaz.length + 6) {
                    this.okt[c].tth = 1
                }
            }
        }
        for (var c = this.okt.length - 7, b = 0; c < this.okt.length; c++, b++) {
            this.okt[c].dwt = Math.cos(Math.PI / 12 * b)
        }
        this.parent.hly.dvl("mystery_jackpot");
        this.uxj()
    };
    this.uxj = function() {
        var b = 0,
            c = new Date().getTime();
        a.etf++;
        if (a.etf < a.okt.length - 1) {
            a.kbj = Math.floor(a.width * a.okt[a.etf].scale);
            a.qxe = Math.floor(a.height * a.okt[a.etf].scale);
            a.xux = Math.floor(a.gcm.width * a.okt[a.etf].ylr);
            a.nya = Math.floor(a.gcm.height * a.okt[a.etf].ylr);
            a.parent.yud();
            b = (a.etf * a.zxc - (c - a.ugo));
            a.iyw = setTimeout(a.uxj, b)
        } else {
            a.isf = false;
            a.stop();
            a.evy()
        }
    };
    this.stop = function() {
        clearTimeout(this.iyw)
    };
    this.yud = function() {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        var c = this.context2D,
            b = (this.isf) ? this.okt[this.etf].x : this.x,
            f = (this.isf) ? this.okt[this.etf].y : this.y,
            d = (this.isf) ? this.okt[this.etf].dwt : 1,
            e = (this.isf) ? this.okt[this.etf].mun : 0;
        c.save();
        c.globalAlpha = d;
        c.clearRect(0, 0, this.width, this.height);
        if (e == 0) {
            c.drawImage(this.pvy, 0, 0, this.width, this.height)
        }
        if (e < this.oaz.length) {
            c.drawImage(this.oaz[e], 0, 0, this.width, this.height)
        } else {
            c.save();
            c.globalAlpha = d * this.okt[this.etf].tth;
            c.drawImage(this.vdm, this.wud.x, this.wud.y);
            c.restore()
        }
        if (this.ukm) {
            c.drawImage(this.ukm, this.gcm.x + (this.gcm.width - this.xux) / 2, this.gcm.y + (this.gcm.height - this.nya) / 2, this.xux, this.nya)
        }
        c.restore();
        if (this.kee && this.srn) {
            this.kee.drawImage(this.srn, b + (this.width - this.kbj) / 2, f + (this.height - this.qxe) / 2, this.kbj, this.qxe)
        }
    };
    this.evy = function() {}
}
nar.prototype = new ryi;

function qhl() {
    this.vpm = new Image();
    this.yql = "";
    this.soq = true;
    this.mya = null;
    this.jgr = "bold";
    this.yva = "red";
    this.gke = "orange";
    this.gpn = "white";
    this.yff = 40;
    this.yat = 0;
    this.mvw = 0;
    this.ttj = 0;
    this.yju = 2;
    this.pvr = null;
    this.bad = 0;
    this.baz = 0;
    this.brv = function(a, e, c, b, d) {
        qhl.prototype.brv.call(this, a, e, c);
        this.vpm = b;
        this.yql = d
    };
    this.ylm = function(a) {
        try {
            this.yff = a.fontSize;
            this.yat = a.myu;
            this.mvw = a.ars;
            this.ttj = a.oso;
            this.yju = a.qde
        } catch (b) {
            console.error(b)
        }
    };
    this.ioq = function(a) {
        try {
            this.mya = a.font;
            this.jgr = a.ghh;
            this.yva = a.mvx;
            this.gke = a.jcn;
            this.gpn = a.niw
        } catch (b) {
            console.error(b)
        }
    };
    this.nck = function(a, b) {
        this.yql = a;
        if (b && b === true && this.context2D != null) {
            this.yaf(true, true)
        }
    };
    this.cih = function(a, b) {
        this.yql = a;
        this.soq = false;
        if (b && b === true && this.context2D != null) {
            this.yaf(true, true)
        }
    };
    this.yaf = function(a, b) {
        this.edz = a;
        if (b && b === true && this.context2D != null) {
            if (this.srn == null && this.iac()) {
                this.yud()
            } else {
                if (this.parent != null) {
                    this.parent.yud(this.x, this.y, this.width, this.height)
                }
            }
        }
    };
    this.tpk = function(a, b, c) {
        this.pvr = a;
        this.bad = b;
        this.baz = c
    };
    this.yud = function() {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        var b = this.context2D,
            c = null,
            a = (this.srn != null) ? 0 : this.x,
            d = (this.srn != null) ? 0 : this.y;
        b.save();
        if (this.srn == null) {
            b.beginPath();
            b.rect(this.x, this.y, this.width, this.height);
            b.closePath();
            b.clip()
        }
        if (this.soq === true) {
            if (this.pvr != null) {
                b.drawImage(this.pvr, this.x + this.bad, this.y + this.baz, this.width, this.height, this.x, this.y, this.width, this.height)
            }
            if (this.vpm != null) {
                b.drawImage(this.vpm, a, d)
            }
        }
        c = b.createLinearGradient(a + this.width / 2 + this.yat, d, a + this.width / 2 + this.yat, d + this.height);
        c.addColorStop(0, this.yva);
        c.addColorStop(1, this.gke);
        tbl.vpf.haz(b, this.yql, c, a + this.ttj + this.yat, d + this.mvw, this.width - 2 * this.ttj, this.height, this.mya, this.yff, this.jgr, this.gpn, this.yju);
        b.restore();
        if (this.kee && this.srn) {
            this.kee.drawImage(this.srn, this.x, this.y)
        }
    }
}
qhl.prototype = new ryi;

function qdu() {
    var a = this;
    this.vql = "rect";
    this.ali = -1;
    this.mya = null;
    this.jgr = "bold";
    this.kip = null;
    this.fah = null;
    this.bzr = null;
    this.srm = null;
    this.prk = null;
    this.ezn = null;
    this.ydb = null;
    this.eqy = 3;
    this.yat = -2;
    this.mvw = 2;
    this.wbs = 6;
    this.yff = 26;
    this.hpk = 2;
    this.ylm = function(b) {
        try {
            this.yff = b.fontSize;
            this.yat = b.myu;
            this.mvw = b.ars;
            this.wbs = b.tpl;
            this.eqy = b.crl;
            this.hpk = b.lbi
        } catch (c) {
            console.error(c)
        }
    };
    this.ioq = function(b) {
        try {
            this.mya = b.font;
            this.jgr = b.ghh;
            this.kip = b.backgroundColor;
            this.fah = b.anv;
            this.bzr = b.cnt;
            this.srm = b.yiu;
            this.prk = b.borderColor;
            this.ezn = b.dhs;
            this.ydb = b.hkx;
            this.vql = b.gry;
            this.ali = b.lvt
        } catch (c) {
            console.error(c)
        }
    };
    this.ike = function() {
        return this.vql
    };
    this.wdq = function() {
        a.eso = false
    };
    this.bua = function() {
        a.lmp = false;
        if (a.iac()) {
            a.parent.yud(a.x, a.y, a.width, a.height)
        }
    };
    this.yud = function() {
        if (!this.iac()) {
            return
        }
        var p = this.context2D,
            l = null,
            n = this.kip,
            m = this.fah,
            b = this.yff,
            f = null,
            d = 0,
            o = 0,
            c = 1,
            k = 0,
            e = (this.ali == 0 || this.ali == 3) ? this.eqy : 0;
        lt = (this.ali == 1 || this.ali == 3) ? this.eqy : 0;
        rb = (this.ali == 0 || this.ali == 2) ? this.eqy : 0;
        lb = (this.ali == 1 || this.ali == 2) ? this.eqy : 0;
        h = 0;
        p.save();
        p.lineJoin = "round";
        p.lineCap = "round";
        p.textAlign = "center";
        if (this.sea()) {
            n = (this.bzr != null) ? this.bzr : n;
            m = (this.srm != null) ? this.srm : m
        }
        if (n != null) {
            if (m != null) {
                l = p.createLinearGradient(this.x, this.y, this.x, this.y + this.height);
                l.addColorStop(1, m);
                l.addColorStop(0, n);
                if (this.vql === "rrect") {
                    tbl.vpf.vzm(p, this.x, this.y, this.width, this.height, lt, e, rb, lb, l, 1, this.prk, this.hpk, 1)
                } else {
                    if (this.vql === "rect") {
                        if (this.prk) {
                            tbl.vpf.pzv(p, this.x, this.y, this.width, this.height, this.eqy, l, this.prk, this.hpk)
                        } else {
                            tbl.vpf.szx(p, this.x, this.y, this.width, this.height, l, 1)
                        }
                    } else {
                        if (this.vql === "triangle") {
                            tbl.vpf.eql(p, this.ali, this.x, this.y, this.width, this.height, this.eqy, l, 1, this.prk, this.hpk, 1)
                        }
                    }
                }
            } else {
                if (this.vql === "rrect") {
                    tbl.vpf.vzm(p, this.x, this.y, this.width, this.height, lt, e, rb, lb, n, 1, this.prk, this.hpk, 1)
                } else {
                    if (this.vql === "rect") {
                        if (this.prk) {
                            tbl.vpf.pzv(p, this.x, this.y, this.width, this.height, this.eqy, n, this.prk, this.hpk, 1)
                        } else {
                            tbl.vpf.szx(p, this.x, this.y, this.width, this.height, n, 1)
                        }
                    } else {
                        if (this.vql === "triangle") {
                            tbl.vpf.eql(p, this.ali, this.x, this.y, this.width, this.height, this.eqy, n, 1, this.prk, this.hpk, 1)
                        }
                    }
                }
            }
        }
        if (this.vpm != null) {
            h = this.height - 2 * this.wbs;
            p.drawImage(this.vpm, this.x + this.width / 2 - h / 2, this.y + this.wbs, h, h)
        }
        if (this.yql != null) {
            p.textAlign = "center";
            p.textBaseline = "bottom";
            f = this.yql.split("|");
            d = 0;
            if (this.sea()) {
                d = 1;
                p.fillStyle = this.ydb
            } else {
                p.fillStyle = this.ezn
            }
            p.font = this.jgr + " " + b + "px " + this.mya;
            for (var g = 0, j = f.length; g < j; g++) {
                o = (p.measureText(f[g]).width > o) ? p.measureText(f[g]).width : o
            }
            if (o > this.width - 2 * this.wbs) {
                c = ((this.width - 2 * this.wbs) / o);
                b = Math.round(c * b) - 1;
                p.font = this.jgr + " " + b + "px " + this.mya
            }
            if (b * f.length > this.height) {
                c = ((this.height) / (b * f.length));
                b = Math.round(c * b) - 1;
                p.font = this.jgr + " " + b + "px " + this.mya
            }
            k = (this.height - b * f.length) / 2;
            k += b;
            for (var g = 0; g < f.length; g++) {
                p.fillText(f[g], (this.x + this.width / 2) + this.yat, this.y - this.mvw + k + d);
                k += b
            }
        }
        p.restore()
    }
}
qdu.prototype = new dal;

function fsy() {
    var a = this;
    this.llv = null;
    this.rxk = null;
    this.wiv = null;
    this.ebw = null;
    this.ghn = null;
    this.edz = false;
    this.iyw = -1;
    this.brv = function() {
        this.llv = document.getElementById("notificationDiv");
        this.rxk = document.getElementById("notificationTitle");
        this.wiv = document.getElementById("notificationText");
        this.ebw = document.getElementById("notificationIcon");
        this.ghn = document.getElementById("notificationCounter");
        if (this.llv) {
            this.llv.onclick = tbl.zbv.eph;
            this.llv.ontouchend = tbl.zbv.eph
        }
    };
    this.ioq = function(b) {};
    this.ylm = function(b) {
        try {
            if (this.llv) {
                this.dhc(this.llv, b.exo);
                if (this.edz) {
                    if (tbl.zbv.jpr === tbl.bnl.tqe) {
                        this.llv.className = "slideRight"
                    } else {
                        this.llv.className = "slideLeft"
                    }
                }
            }
            if (this.rxk) {
                this.rxk.style.fontSize = b.zoh + "px";
                this.rxk.style.left = b.iqs.x + "px";
                this.rxk.style.top = b.iqs.y + "px";
                this.rxk.style.width = b.iqs.width + "px"
            }
            if (this.wiv) {
                this.wiv.style.fontSize = b.ogn + "px";
                this.wiv.style.left = b.khu.x + "px";
                this.wiv.style.top = b.khu.y + "px";
                this.wiv.style.width = b.khu.width + "px"
            }
            if (this.ebw) {
                this.dhc(this.ebw, b.jbl)
            }
            if (this.ghn) {
                this.ghn.style.fontSize = b.hhy + "px";
                this.dhc(this.ghn, b.aiv)
            }
        } catch (c) {
            console.error(c)
        }
    };
    this.dhc = function(c, b) {
        if (c) {
            c.style.left = b.x + "px";
            c.style.top = b.y + "px";
            c.style.width = b.width + "px";
            c.style.height = b.height + "px"
        }
    };
    this.qvt = function(d, c, b) {
        if (d && this.rxk) {
            this.rxk.innerHTML = d
        }
        if (c && this.wiv) {
            this.wiv.innerHTML = c.replace(/[\r]?\n/g, "")
        }
        if (b && this.ghn) {
            this.ghn.innerHTML = b
        }
        if (this.llv) {
            if (this.iyw >= 0) {
                clearTimeout(this.iyw);
                this.iyw = -1;
                this.llv.className = null
            }
            this.edz = true;
            tbl.zbv.glh();
            if (tbl.zbv.jpr === tbl.bnl.tqe) {
                this.llv.className = "slideInRightAnim"
            } else {
                this.llv.className = "slideInLeftAnim"
            }
        }
    };
    this.pwz = function() {
        if (a.llv && a.edz) {
            if (tbl.zbv.jpr === tbl.bnl.tqe) {
                a.llv.className = "slideOutRightAnim"
            } else {
                a.llv.className = "slideOutLeftAnim"
            }
            a.iyw = setTimeout(a.pvi, 800)
        }
    };
    this.iac = function() {
        if (this.edz) {
            return true
        }
        return false
    };
    this.pvi = function() {
        a.edz = false;
        a.iyw = -1;
        tbl.zbv.glh()
    }
}

function vwp() {
    var b = this;
    var c = 0;
    var a = 1;
    var e = 2;
    var d = 3;
    this.yra = null;
    this.llv = null;
    this.rxk = null;
    this.wiv = null;
    this.nav = null;
    this.lme = [];
    this.mmb = 0;
    this.nju = [];
    this.lmh = [];
    this.jis = 0;
    this.ubj = false;
    this.edz = false;
    this.brv = function() {
        this.yra = document.getElementById("messageOverlay");
        this.llv = document.getElementById("messagePanel");
        this.rxk = document.getElementById("messageTitle");
        this.wiv = document.getElementById("messageText");
        this.nav = document.getElementById("btne");
        if (this.nav) {
            this.nav.innerHTML = "\u00D7";
            this.nav.onclick = this.pwz;
            this.nav.ontouchend = this.pwz
        }
        for (var f = 0; f < 4; f++) {
            this.lme[f] = document.getElementById("btn" + (f + 1))
        }
    };
    this.ioq = function(f) {
        try {
            this.nju = f.anf
        } catch (g) {
            console.error(g)
        }
    };
    this.ylm = function(j) {
        try {
            if (this.llv) {
                tbl.vpf.dhc(this.llv, j.exo)
            }
            if (this.rxk) {
                this.rxk.style.fontSize = j.zoh + "px";
                tbl.vpf.dhc(this.rxk, j.iqs)
            }
            if (this.wiv) {
                this.wiv.style.fontSize = j.ogn + "px";
                tbl.vpf.dhc(this.wiv, j.bqr)
            }
            if (this.nav) {
                tbl.vpf.dhc(this.nav, j.yoo)
            }
            for (var g = 0, f = this.lme.length; g < f; g++) {
                this.lme[g].style.fontSize = j.ofg.fontSize + "px";
                this.lme[g].style.top = j.kzp.y + "px";
                this.lme[g].style.height = j.kzp.height + "px"
            }
        } catch (k) {
            console.error(k)
        }
    };
    this.qvt = function(j) {
        this.lmh.length = 0;
        this.jis = 0;
        for (var g = 0, f = j.length; g < f; g++) {
            this.lmh[g] = j[g]
        }
        this.jlz(this.lmh[this.jis])
    };
    this.pwz = function() {
        if (b.llv) {
            b.edz = false;
            b.llv.style.display = "none";
            b.yra.style.display = "none";
            tbl.zbv.glh();
            tbl.zbv.kpy = false
        }
    };
    this.jlz = function(l) {
        var n = this.lmh.length > 1,
            m = "";
        if (l.Buttons && l.Buttons.length >= 1) {
            for (var k = l.Buttons.length - 1; k >= 0; k--) {
                if (l.Buttons[k].Action.toLowerCase() == "cashier") {
                    l.Buttons.splice(k, 1)
                }
            }
        }
        if (l.oai === tbl.lgc.pkz || l.oai === tbl.lgc.uvk) {
            this.mmb = d;
            this.ubj = (l.DisplayType == tbl.axj.ujx.mbr) ? true : false
        } else {
            if (l.oai === tbl.lgc.goj || l.oai === tbl.lgc.ylh || l.oai === tbl.lgc.lka || l.oai === tbl.lgc.roulette.vso || l.oai === tbl.lgc.roulette.tgq) {
                this.mmb = a;
                this.ubj = false
            } else {
                if (l.oai === tbl.lgc.jpi || l.oai === tbl.lgc.kbw) {
                    this.mmb = c;
                    this.ubj = false
                } else {
                    if (l.oai === tbl.lgc.quq || l.oai === tbl.lgc.rag || l.oai === tbl.lgc.omh) {
                        this.mmb = e;
                        this.ubj = false
                    }
                }
            }
        }
        if (l.Title && this.rxk) {
            this.rxk.style.color = this.nju[this.mmb];
            this.rxk.innerHTML = l.Title
        }
        if (l.Text && this.wiv) {
            this.wiv.innerHTML = l.Text.replace(/[\r]?\n/g, "<br>")
        }
        if (n) {
            this.lme[0].innerHTML = "\u2039";
            this.lme[0].onclick = this.fsd;
            this.lme[0].ontouchend = this.fsd;
            this.lme[0].style.display = "inline-block";
            this.lme[this.lme.length - 1].innerHTML = "\u203A";
            this.lme[this.lme.length - 1].onclick = this.kxg;
            this.lme[this.lme.length - 1].ontouchend = this.kxg;
            this.lme[this.lme.length - 1].style.display = "inline-block"
        }
        for (var k = 0, g = (n) ? 1 : 0, f = (n) ? this.lme.length - 1 : this.lme.length; g < f; g++, k++) {
            if (l.Buttons && k < l.Buttons.length) {
                m = l.Buttons[k].Text;
                if (m.indexOf("_") != 0) {
                    this.lme[g].innerHTML = m
                } else {
                    var j = m.substr(1);
                    if (j == "exit") {
                        this.lme[g].innerHTML = tbl.zbv.language.dwn
                    } else {
                        if (j == "continue") {
                            this.lme[g].innerHTML = tbl.zbv.language.tnq.replace(/ /g, "")
                        } else {
                            this.lme[g].innerHTML = j.toUpperCase()
                        }
                    }
                }
                if (l.Buttons[k].Action.toLowerCase() == "quit") {
                    this.lme[g].onclick = tbl.zbv.vml;
                    this.lme[g].ontouchend = tbl.zbv.vml
                } else {
                    if (l.Buttons[k].Action.toLowerCase() == "continue") {
                        if (l.oai === tbl.lgc.pkz) {
                            this.lme[g].onclick = this.wbw.bind(this, l.Buttons[k].Link);
                            this.lme[g].ontouchend = this.wbw.bind(this, l.Buttons[k].Link)
                        } else {
                            if (l.oai === tbl.lgc.uvk || l.oai === tbl.lgc.quq || l.oai === tbl.lgc.rag) {
                                this.lme[g].onclick = this.ejb;
                                this.lme[g].ontouchend = this.ejb
                            } else {
                                if (l.oai === tbl.lgc.jpi || l.oai === tbl.lgc.kbw || l.oai === tbl.lgc.omh) {
                                    this.lme[g].onclick = this.axt;
                                    this.lme[g].ontouchend = this.axt
                                }
                            }
                        }
                    } else {
                        if (l.Buttons[k].Action.toLowerCase() == "history") {
                            this.lme[g].onclick = tbl.zbv.klw;
                            this.lme[g].ontouchend = tbl.zbv.klw
                        } else {
                            if (l.Buttons[k].Action.toLowerCase() == "link") {
                                if (l.Buttons[k].LinkType === tbl.axj.scb.olb) {
                                    this.lme[g].onclick = this.zce.bind(this, l.Buttons[k].Link);
                                    this.lme[g].ontouchend = this.zce.bind(this, l.Buttons[k].Link)
                                } else {
                                    if (l.Buttons[k].LinkType === tbl.axj.scb.oxx) {
                                        this.lme[g].onclick = this.wbw.bind(this, l.Buttons[k].Link);
                                        this.lme[g].ontouchend = this.wbw.bind(this, l.Buttons[k].Link)
                                    } else {
                                        if (l.Buttons[k].LinkType === tbl.axj.scb.gtf) {
                                            this.lme[g].onclick = this.xsn.bind(this, l.Buttons[k].Link);
                                            this.lme[g].ontouchend = this.xsn.bind(this, l.Buttons[k].Link)
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                this.lme[g].style.display = "inline-block"
            } else {
                this.lme[g].style.display = "none"
            }
        }
        this.nav.style.display = (this.ubj) ? "inline-block" : "none";
        if (this.llv) {
            this.edz = true;
            this.llv.style.display = "block";
            this.yra.style.display = "block";
            tbl.zbv.glh();
            tbl.zbv.kpy = true
        }
    };
    this.iac = function() {
        if (this.edz) {
            return true
        }
        return false
    };
    this.ejb = function() {
        b.pwz();
        tbl.zbv.zuf(tbl.zbv.state)
    };
    this.wbw = function(f) {
        var g = null;
        if (f) {
            g = tbl.vpf.tqj("GET", f);
            if (!g) {
                console.error("Could not send request!")
            } else {
                g.onerror = function() {
                    console.error("Error on request!")
                }
            }
            g.send()
        }
        tbl.zbv.hch({
            type: "link",
            sender: tbl.zbv.wkz,
            lang: sessionStorage.sessionValue1.toUpperCase()
        });
        b.pwz();
        tbl.zbv.bdg()
    };
    this.xsn = function(j) {
        var k = null;
        if (j == null) {
            console.error("Request url is missing!");
            return
        }
        k = tbl.vpf.tqj("GET", j);
        if (!k) {
            console.error("Could not send request!")
        } else {
            for (var g = 0, f = b.lme.length; g < f; g++) {
                b.lme[g].disabled = true
            }
            k.onload = function() {
                b.pwz();
                for (var m = 0, l = b.lme.length; m < l; m++) {
                    b.lme[m].disabled = false
                }
                tbl.zbv.bdg()
            };
            k.onerror = function() {
                console.error("Error on request!");
                for (var m = 0, l = b.lme.length; m < l; m++) {
                    b.lme[m].disabled = false
                }
            }
        }
        tbl.zbv.hch({
            type: "link",
            sender: tbl.zbv.wkz,
            lang: sessionStorage.sessionValue1.toUpperCase()
        });
        k.send()
    };
    this.axt = function() {
        window.location.reload()
    };
    this.zce = function(f) {
        tbl.zbv.hch({
            type: "link",
            sender: tbl.zbv.wkz,
            lang: sessionStorage.sessionValue1.toUpperCase()
        });
        window.location.href = f
    };
    this.fsd = function() {
        b.jis = (b.jis > 0) ? b.jis - 1 : b.lmh.length - 1;
        b.jlz(b.lmh[b.jis])
    };
    this.kxg = function() {
        b.jis = (b.jis < b.lmh.length - 1) ? b.jis + 1 : 0;
        b.jlz(b.lmh[b.jis])
    }
}

function cno() {
    var a = this;
    this.yql = null;
    this.nab = false;
    this.eso = false;
    this.kcr = false;
    this.mya = null;
    this.jgr = "bold";
    this.jxy = "center";
    this.kip = null;
    this.prk = null;
    this.ezn = null;
    this.koz = "rect";
    this.fxv = new drx();
    this.pyl = new drx();
    this.yff = 16;
    this.eqy = 8;
    this.hpk = 1;
    this.qlf = 0;
    var b = 200;
    this.brv = function(c, f, d, e) {
        this.yql = e;
        cno.prototype.brv.call(this, c, f, d)
    };
    this.ioq = function(c) {
        try {
            this.mya = c.font;
            this.jgr = c.ghh;
            this.jxy = c.textAlign;
            this.kip = c.backgroundColor;
            this.prk = c.borderColor;
            this.ezn = c.dhs;
            this.koz = c.type
        } catch (d) {
            console.error(d)
        }
    };
    this.ylm = function(c) {
        try {
            this.fxv = c.khu;
            this.pyl = c.pfy;
            this.yff = c.fontSize;
            this.eqy = c.crl;
            this.hpk = c.lbi
        } catch (d) {
            console.error(d)
        }
    };
    this.jug = function(c) {
        this.nab = c
    };
    this.vib = function() {
        return this.nab
    };
    this.dxa = function(c, d) {
        this.kcr = c;
        if (d && d === true) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.cie = function() {
        return this.kcr
    };
    this.nck = function(c, d) {
        this.yql = c;
        if (d && d === true && this.iac()) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.mrr = function(c, d) {
        this.eso = c;
        d = (d === false) ? false : true;
        clearTimeout(this.qlf);
        if (this.eso === true && d === true) {
            this.qlf = setTimeout(this.wdq, b)
        }
    };
    this.lmr = function() {
        return this.eso
    };
    this.wdq = function() {
        a.eso = false
    };
    this.yud = function() {
        if (!this.iac()) {
            return
        }
        var c = this.context2D;
        c.save();
        tbl.vpf.pzv(c, this.x, this.y, this.width, this.height, this.eqy, this.kip, this.prk, this.hpk);
        if (this.koz === "rect") {
            tbl.vpf.szx(c, this.x + this.pyl.x, this.y + this.pyl.y, this.pyl.width, this.pyl.height, this.ezn, 0.2, this.ezn, this.hpk, 1);
            if (this.kcr === true) {
                tbl.vpf.szx(c, this.x + this.pyl.x + this.pyl.width / 4, this.y + this.pyl.y + this.pyl.height / 4, this.pyl.width / 2, this.pyl.height / 2, this.ezn, 1)
            }
        } else {
            if (this.koz === "round") {
                tbl.vpf.ruc(c, this.x + this.pyl.x + this.pyl.width / 2, this.y + this.pyl.y + this.pyl.height / 2, this.pyl.width / 2, this.ezn, 0.2, this.ezn, this.hpk, 1);
                if (this.kcr === true) {
                    tbl.vpf.ruc(c, this.x + this.pyl.x + this.pyl.width / 2, this.y + this.pyl.y + this.pyl.height / 2, this.pyl.width / 4, this.ezn, 1)
                }
            }
        }
        if (this.yql && this.yql != "") {
            tbl.vpf.iaj(c, this.yql, this.ezn, this.x + this.fxv.x, this.y + this.fxv.y, this.fxv.width, this.fxv.height, this.mya, this.yff, this.jgr, this.jxy, true)
        }
        c.restore();
        if (this.kee && this.srn) {
            this.kee.drawImage(this.srn, this.x, this.y)
        }
    };
    this.xcv = {}
}
cno.prototype = new ryi;

function wxz() {
    var b = this;
    var c = 0;
    var a = 1;
    this.zgu = null;
    this.lbd = "";
    this.emq = "";
    this.zgi = "";
    this.mjx = "";
    this.yxh = false;
    this.kyf = [];
    this.ahi = 0;
    this.iec = 0;
    this.uxo = 0;
    this.vnk = 0;
    this.uzb = 0;
    this.qks = 0;
    this.eas = 0;
    this.bwq = 0;
    this.zmi = false;
    this.bbh = false;
    this.gxl = false;
    this.koz = "center";
    this.mya = "arial";
    this.jgr = "bold";
    this.wvj = "white";
    this.ezn = "white";
    this.kip = "black";
    this.fah = null;
    this.prk = "white";
    this.kca = "rgb(150,150,150)";
    this.sad = null;
    this.erz = null;
    this.hpk = 3;
    this.hrx = 0;
    this.akk = 0;
    this.dvk = 0;
    this.fpd = 30;
    this.qwu = 24;
    this.ojs = new drx();
    this.uor = new drx();
    this.pwn = new drx();
    this.dkp = new drx();
    this.tep = new drx();
    this.jua = new drx();
    this.ags = new drx();
    this.lba = new drx();
    this.eav = new drx();
    this.wla = 7;
    this.xxz = 0;
    this.utu = 0;
    this.bwz = 0;
    this.qkx = c;
    this.ugo = 0;
    this.zxc = 89;
    this.tgn = false;
    this.iyw = 0;
    this.nda = 0;
    this.kif = 0;
    this.mtc = 0;
    this.rcc = null;
    this.uaa = 0;
    this.qvd = 1;
    this.qla = 250;
    this.brv = function(d, f, e) {
        wxz.prototype.brv.call(this, d, f, e);
        this.zgu = new nhr();
        this.zgu.brv();
        this.zgu.hbx("buttons");
        this.zgu.hbx("checkboxes");
        this.zgu.hbx("displays");
        this.zgu.hbx("lbuttons");
        this.zgu.hbx("mbuttons");
        this.zgu.hbx("vbuttons");
        this.zgu.hbx("cbuttons")
    };
    this.zfg = function(d) {
        try {
            this.oex(d);
            this.zeg(d)
        } catch (f) {
            console.error(f)
        }
    };
    this.ioq = function(k) {
        try {
            var n = this.zgu.kew("lbuttons"),
                m = this.zgu.kew("mbuttons"),
                f = this.zgu.kew("cbuttons"),
                g = this.zgu.kew("displays");
            this.koz = k.type;
            this.mya = k.font;
            this.jgr = k.ghh;
            this.wvj = k.wxx;
            this.ezn = k.dhs;
            this.kip = k.backgroundColor;
            this.fah = k.anv;
            this.prk = k.borderColor;
            this.sad = k.utk;
            this.erz = k.pxk;
            for (var j = 0, d = n.length; j < d; j++) {
                n[j].ioq(k.wpk)
            }
            for (var j = 0, d = m.length; j < d; j++) {
                m[j].ioq(k.cwu)
            }
            for (var j = 0, d = f.length; j < d; j++) {
                f[j].ioq(k.qvw)
            }
            for (var j = 0, d = g.length; j < d; j++) {
                g[j].ioq(k.display)
            }
            this.zgu.jle("checkboxes", "#ioq", [k.ies])
        } catch (l) {
            console.error(l)
        }
    };
    this.ylm = function(k) {
        try {
            var n = this.zgu.kew("lbuttons"),
                m = this.zgu.kew("mbuttons"),
                f = this.zgu.kew("cbuttons"),
                g = this.zgu.kew("displays");
            this.hpk = k.lbi;
            this.hrx = k.jfs;
            this.akk = k.wgk;
            this.dvk = k.kkf;
            this.fpd = k.zoh;
            this.qwu = k.nlq;
            this.ojs = k.iqs;
            this.uor = k.oor;
            this.pwn = k.iyo;
            this.dkp = k.pcv;
            this.tep = k.qwx;
            this.jua = k.nby;
            this.zgu.nwi("lgames", "#gix", [k.iqm]);
            this.zgu.nwi("mgames", "#gix", [k.kcb]);
            this.zgu.nwi("lmincredit", "#gix", [k.onj]);
            this.zgu.nwi("mmincredit", "#gix", [k.nsy]);
            this.zgu.nwi("lmaxcredit", "#gix", [k.gch]);
            this.zgu.nwi("mmaxcredit", "#gix", [k.aem]);
            this.zgu.nwi("lmaxwin", "#gix", [k.guj]);
            this.zgu.nwi("mmaxwin", "#gix", [k.qow]);
            this.zgu.nwi("start", "#gix", [k.dua]);
            this.zgu.nwi("cancel", "#gix", [k.wcs]);
            this.zgu.nwi("gamesd", "#gix", [k.ntu]);
            this.zgu.nwi("mincreditd", "#gix", [k.exe]);
            this.zgu.nwi("maxcreditd", "#gix", [k.pca]);
            this.zgu.nwi("maxwind", "#gix", [k.qhw]);
            for (var j = 0, d = n.length; j < d; j++) {
                n[j].ylm(k.wpk)
            }
            for (var j = 0, d = m.length; j < d; j++) {
                m[j].ylm(k.cwu)
            }
            for (var j = 0, d = f.length; j < d; j++) {
                f[j].ylm(k.qvw)
            }
            for (var j = 0, d = g.length; j < d; j++) {
                g[j].ylm(k.display)
            }
            this.zgu.nwi("cmincredit", "#gix", [k.chr]);
            this.zgu.nwi("cmaxcredit", "#gix", [k.rtz]);
            this.zgu.nwi("cmaxwin", "#gix", [k.xlq]);
            this.zgu.jle("checkboxes", "#ylm", [k.ies])
        } catch (l) {
            console.error(l)
        }
    };
    this.oex = function(d) {
        this.zgu.oro("start", this.tyo(d.dua, this.parent.language.start, this.xwn, this.parent.xcw.rhn), ["buttons", "cbuttons"]);
        this.zgu.oro("cancel", this.tyo(d.wcs, this.parent.language.hqx, this.ycs, this.parent.xcw.xaz), ["buttons", "cbuttons"]);
        this.zgu.oro("lgames", this.tyo(d.iqm, "", this.uci, null), ["buttons", "lbuttons", "vbuttons"]);
        this.zgu.oro("mgames", this.tyo(d.kcb, "+", this.hsu, null), ["buttons", "mbuttons", "vbuttons"]);
        this.zgu.oro("lmincredit", this.tyo(d.onj, "", this.dgj, null), ["buttons", "lbuttons", "vbuttons"]);
        this.zgu.oro("mmincredit", this.tyo(d.nsy, "+", this.qxh, null), ["buttons", "mbuttons", "vbuttons"]);
        this.zgu.oro("lmaxcredit", this.tyo(d.gch, "", this.fhk, null), ["buttons", "lbuttons", "vbuttons"]);
        this.zgu.oro("mmaxcredit", this.tyo(d.aem, "+", this.dig, null), ["buttons", "mbuttons", "vbuttons"]);
        this.zgu.oro("lmaxwin", this.tyo(d.guj, "", this.awl, null), ["buttons", "lbuttons", "vbuttons"]);
        this.zgu.oro("mmaxwin", this.tyo(d.qow, "+", this.nmc, null), ["buttons", "mbuttons", "vbuttons"]);
        this.zgu.oro("cmincredit", this.bso(d.chr, "", this.bmw), ["checkboxes"]);
        this.zgu.oro("cmaxcredit", this.bso(d.rtz, "", this.ugk), ["checkboxes"]);
        this.zgu.oro("cmaxwin", this.bso(d.xlq, "", this.ubr), ["checkboxes"])
    };
    this.zeg = function(d) {
        this.zgu.oro("gamesd", this.flb(d.ntu, null, (this.kyf[this.ahi] > 0) ? this.kyf[this.ahi] : "---"), ["displays"]);
        this.zgu.oro("mincreditd", this.flb(d.exe, null, "---"), ["displays"]);
        this.zgu.oro("maxcreditd", this.flb(d.pca, null, "---"), ["displays"]);
        this.zgu.oro("maxwind", this.flb(d.qhw, null, "---"), ["displays"])
    };
    this.flb = function(d, g, f) {
        var e = new txv();
        e.brv(d, this.context2D, null, g, f);
        e.parent = this;
        return e
    };
    this.tyo = function(f, j, g, e) {
        var d = new qdu();
        d.brv(f, this.context2D, null, null, j);
        d.parent = this;
        d.xcv = g;
        if (e) {
            d.inp = e.raz
        }
        return d
    };
    this.bso = function(e, g, f) {
        var d = new cno();
        d.brv(e, this.context2D, null, g);
        d.parent = this;
        d.xcv = f;
        return d
    };
    this.cmi = function(r, n) {
        var s = this.zgu.kew("vbuttons"),
            l = this.zgu.kew("cbuttons"),
            g = this.zgu.kew("checkboxes"),
            p = this.zgu.aar("cancel"),
            q = r - this.x,
            o = n - this.y;
        if (this.ibu) {
            return true
        }
        if ((!p || !p.iac()) && (r < this.x || r > this.x + this.width || n < this.y || n > this.y + this.height)) {
            this.gxl = true;
            this.pwz();
            return true
        }
        for (var f = 0, m = s.length; f < m; f++) {
            var d = s[f];
            if (q >= d.x && q <= d.x + d.width && o >= d.y && o <= d.y + d.height) {
                if (d.iac() === true && d.vib() === true && d.lmr() === false) {
                    d.phd(true, false, false);
                    this.uaa = 0;
                    this.qvd = 1;
                    if (d.xcv() === false) {
                        this.rcc = function() {
                            if (d.xcv() === true) {
                                clearInterval(b.mtc);
                                d.phd(false, false);
                                b.parent.yud();
                                for (var t = 0; t < m; t++) {
                                    s[t].mrr(false)
                                }
                            }
                        };
                        this.mtc = setInterval(this.rcc, this.qla)
                    }
                    for (var e = 0; e < m; e++) {
                        s[e].mrr(true)
                    }
                }
                return true
            }
        }
        for (var f = 0, m = l.length; f < m; f++) {
            var d = l[f];
            if (q >= d.x && q <= d.x + d.width && o >= d.y && o <= d.y + d.height) {
                if (d.iac() === true && d.vib() === true) {
                    this.parent.hly.jsl("btn");
                    this.parent.hly.dvl("btn");
                    d.phd(true, false);
                    d.xcv();
                    for (var e = 0; e < m; e++) {
                        l[e].mrr(true)
                    }
                }
                return true
            }
        }
        for (var f = 0, m = g.length; f < m; f++) {
            var k = g[f];
            if (q >= k.x && q <= k.x + k.width && o >= k.y && o <= k.y + k.height) {
                if (k.iac() === true && k.vib() === true) {
                    k.dxa(!k.cie(), true);
                    k.xcv();
                    for (var e = 0; e < m; e++) {
                        g[e].mrr(true)
                    }
                }
                return true
            }
        }
        return true
    };
    this.arh = function() {
        var e = this.zgu.kew("vbuttons"),
            j = this.zgu.kew("cbuttons");
        for (var g = 0, d = e.length; g < d; g++) {
            var f = e[g];
            if (f.sea() == true) {
                clearInterval(this.mtc);
                f.phd(false, false);
                this.parent.yud();
                return true
            }
        }
        for (var g = 0, d = j.length; g < d; g++) {
            var f = j[g];
            if (f.sea() == true) {
                f.phd(false, false);
                this.parent.yud();
                return true
            }
        }
        return false
    };
    this.usa = function(l) {
        var k = this.zgu.kew("buttons");
        if (this.ibu) {
            return true
        }
        for (var g = 0, d = k.length; g < d; g++) {
            var f = k[g];
            if (l == f.inp) {
                if (f.vib() && !f.lmr()) {
                    this.parent.hly.jsl("btn");
                    this.parent.hly.dvl("btn");
                    f.phd(true, false);
                    f.xcv();
                    for (var e = 0; e < d; e++) {
                        k[e].mrr(true)
                    }
                }
                return true
            }
        }
        return true
    };
    this.vrb = function() {
        var g = this.zgu.kew("buttons");
        for (var f = 0, d = g.length; f < d; f++) {
            var e = g[f];
            if (e.sea() == true) {
                e.phd(false, false);
                this.parent.yud();
                return true
            }
        }
        return false
    };
    this.bfs = function(d) {
        this.zgu.jle("buttons", "#jug", [d]);
        this.zgu.jle("checkboxes", "#jug", [d]);
        if (d === true && this.bbh === true) {
            this.zgu.nwi("cmincredit", "#jug", [false])
        }
    };
    this.wsx = function(d) {
        this.kyf = d.g;
        this.iec = d.v;
        this.uxo = d.v;
        this.zmi = d.r;
        this.bbh = d.l;
        if (typeof d.m != "undefined" && d.m != null && d.m > 0) {
            this.vnk = d.m;
            this.uzb = d.m
        }
    };
    this.uch = function() {
        if (this.zmi === true) {
            this.qks = this.parent.nko;
            this.eas = this.parent.nko;
            this.ahi = 0;
            this.bwq = 0
        }
    };
    this.tfb = function() {
        if (this.kyf.length > 0 && this.ahi >= 0 && this.gxl === false) {
            return this.kyf[this.ahi]
        }
        return 0
    };
    this.ett = function() {
        var d = this.zgu.aar("cmincredit") == null || this.zgu.nwi("cmincredit", "#cie");
        if (this.qks > 0 && d === true) {
            return this.qks
        }
        return 0
    };
    this.lzh = function() {
        var d = this.zgu.aar("cmaxcredit") == null || this.zgu.nwi("cmaxcredit", "#cie");
        if (this.eas > 0 && d === true) {
            return this.eas
        }
        return 0
    };
    this.ynb = function() {
        var d = this.zgu.aar("cmaxwin") == null || this.zgu.nwi("cmaxwin", "#cie");
        if (this.bwq > 0 && d === true) {
            return this.bwq
        }
        return 0
    };
    this.qvt = function() {
        var f = this.zgu.aar("cmincredit") == null || this.zgu.nwi("cmincredit", "#cie"),
            d = this.zgu.aar("cmaxcredit") == null || this.zgu.nwi("cmaxcredit", "#cie"),
            e = this.zgu.aar("cmaxwin") == null || this.zgu.nwi("cmaxwin", "#cie");
        this.tgn = false;
        this.gxl = false;
        this.uxo = (this.uzb > 0) ? this.parent.vrh() * this.uzb : this.uxo;
        this.iec = (this.vnk > 0) ? this.parent.vrh() * this.vnk : this.iec;
        if (this.zmi === true) {
            f = this.bbh;
            d = false;
            e = false;
            this.uch()
        } else {
            if (this.bbh === true) {
                f = true;
                this.qks = (this.qks < this.parent.nko) ? this.qks : this.parent.nko;
                this.qks = (this.qks > 0) ? this.qks : this.parent.nko
            } else {
                f = (this.qks <= this.parent.nko) ? f : false;
                this.qks = (this.qks < this.parent.nko) ? this.qks : this.parent.nko
            }
            d = (this.eas >= this.parent.nko) ? d : false;
            this.eas = (this.eas > this.parent.nko) ? this.eas : this.parent.nko
        }
        this.zgu.nwi("cmincredit", "#dxa", [f]);
        this.zgu.nwi("cmaxcredit", "#dxa", [d]);
        this.zgu.nwi("cmaxwin", "#dxa", [e]);
        this.zgu.nwi("gamesd", "#nck", [(this.kyf[this.ahi] > 0) ? this.kyf[this.ahi] : "---"]);
        this.zgu.nwi("mincreditd", "#nck", [(f === true && this.qks > 0) ? this.parent.fyo(this.qks) : "---"]);
        this.zgu.nwi("maxcreditd", "#nck", [(d === true && this.eas > 0) ? this.parent.fyo(this.eas) : "---"]);
        this.zgu.nwi("maxwind", "#nck", [(e === true && this.bwq > 0) ? this.parent.fyo(this.bwq) : "---"]);
        this.zgu.nwi("lmincredit", "#yaf", [f]);
        this.zgu.nwi("mmincredit", "#yaf", [f && this.qks < this.parent.nko]);
        this.zgu.nwi("lmaxcredit", "#yaf", [d && this.eas > this.parent.nko]);
        this.zgu.nwi("mmaxcredit", "#yaf", [d]);
        this.zgu.nwi("lmaxwin", "#yaf", [e && this.bwq > this.uxo]);
        this.zgu.nwi("mmaxwin", "#yaf", [e]);
        if (this.yxh === false) {
            this.bfs(true);
            this.yaf(true);
            this.parent.yud()
        } else {
            this.glc();
            this.parent.hly.jsl("panel_out");
            this.parent.hly.dvl("panel_out");
            this.jtk()
        }
    };
    this.pwz = function() {
        b.bfs(false);
        if (b.yxh === false) {
            b.yaf(false);
            b.parent.yud()
        } else {
            b.ypx();
            b.parent.hly.jsl("panel_out");
            b.parent.hly.dvl("panel_out");
            b.jtk()
        }
    };
    this.glc = function() {
        this.yaf(true);
        this.ibu = true;
        this.nab = false;
        this.qkx = c;
        this.xxz = Math.floor(this.width / this.wla);
        this.bwz = 0;
        this.utu = 0;
        this.ugo = new Date().getTime()
    };
    this.ypx = function() {
        this.ibu = true;
        this.nab = false;
        this.qkx = a;
        this.xxz = -Math.floor(this.width / this.wla);
        this.bwz = 1;
        this.utu = this.width;
        this.ugo = new Date().getTime()
    };
    this.jtk = function() {
        var d = b.zxc,
            e = new Date().getTime();
        if (b.bwz < b.wla) {
            b.utu += b.xxz;
            b.bwz++;
            b.parent.yud();
            d = (((b.qkx === a) ? b.bwz - 1 : b.bwz) * b.zxc - (e - b.ugo));
            b.iyw = setTimeout(b.jtk, d)
        } else {
            b.ibu = false;
            b.nab = true;
            if (b.qkx == a) {
                b.yaf(false);
                b.parent.nyh();
                if (b.tgn === true) {
                    b.nda = setTimeout(b.parent.pep, 200)
                }
            } else {
                if (b.qkx == c) {
                    b.bfs(true)
                }
            }
            b.parent.yud()
        }
    };
    this.stop = function() {
        clearTimeout(this.iyw);
        clearTimeout(this.kif);
        clearTimeout(this.nda);
        clearInterval(this.mtc)
    };
    this.uib = function(d) {
        this.lbd = d.lpr;
        this.emq = d.mza;
        this.zgi = d.jjs;
        this.zgu.nwi("start", "#nck", [d.start]);
        this.zgu.nwi("cancel", "#nck", [d.hqx]);
        this.zgu.nwi("cmincredit", "#nck", [d.cuj]);
        this.zgu.nwi("cmaxcredit", "#nck", [d.acg]);
        this.zgu.nwi("cmaxwin", "#nck", [d.tdh]);
        if (this.parent.dez === true && tbl.xyy.value44.d === true) {
            this.mjx = d.rpc
        }
    };
    this.yud = function(n, m, o, j) {
        if (!this.iac()) {
            return
        }
        var f = (n != null && m != null && o != null && j != null),
            p = this.context2D,
            d = this.zgu.ofm(),
            e = this.kip,
            l = this.prk;
        if (this.fah) {
            e = p.createLinearGradient(this.x + this.width / 2, 0, this.x + this.width / 2, this.height);
            e.addColorStop(0, this.kip);
            e.addColorStop(1, this.fah)
        }
        if (this.kca) {
            if (this.koz === "center") {
                l = p.createLinearGradient(this.x + this.width / 2, 0, this.x + this.width / 2, this.height)
            } else {
                if (this.koz === "left") {
                    l = p.createLinearGradient(this.width, this.height / 2, 0, this.height / 2)
                } else {
                    if (this.koz === "right") {
                        l = p.createLinearGradient(this.width, this.height / 2, 0, this.height / 2)
                    }
                }
            }
            if (this.koz === "left") {
                l.addColorStop(1, this.prk);
                l.addColorStop(0, this.kca)
            } else {
                if (this.koz === "center" || this.koz === "right") {
                    l.addColorStop(0, this.prk);
                    l.addColorStop(1, this.kca)
                }
            }
        }
        p.save();
        p.clearRect(0, 0, this.width, this.height);
        if (f) {
            p.beginPath();
            p.rect(n, m, o, j);
            p.closePath();
            p.clip()
        }
        tbl.vpf.vzm(p, 0, 0, this.width, this.height, this.hrx, this.akk, this.akk, this.hrx, e, 1, l, this.hpk, 1);
        tbl.vpf.pzv(p, this.pwn.x, this.pwn.y, this.pwn.width, this.pwn.height, this.dvk, this.sad, this.erz, this.hpk / 2);
        tbl.vpf.pzv(p, this.tep.x, this.tep.y, this.tep.width, this.tep.height, this.dvk, this.sad, this.erz, this.hpk / 2);
        tbl.vpf.haz(p, this.lbd, this.wvj, this.ojs.x, this.ojs.y, this.ojs.width, this.ojs.height, this.mya, this.fpd, this.jgr);
        tbl.vpf.iaj(p, this.mjx, this.ezn, this.uor.x, this.uor.y, this.uor.width, this.uor.height, this.mya, this.qwu, this.jgr, "center", true);
        tbl.vpf.bww(p, this.emq, this.ezn, this.dkp.x, this.dkp.y, this.dkp.width, this.dkp.height, this.mya, this.qwu, this.jgr, 0);
        tbl.vpf.haz(p, this.zgi, this.ezn, this.jua.x, this.jua.y, this.jua.width, this.jua.height, this.mya, this.qwu, this.jgr);
        for (var g = 0, k = d.length; g < k; g++) {
            d[g].yud()
        }
        p.restore();
        if (this.kee && this.srn) {
            if (this.ibu) {
                if (this.utu > 0) {
                    if (this.koz === "left") {
                        this.kee.drawImage(this.srn, this.width - this.utu, 0, this.utu, this.height, this.x, this.y, this.utu, this.height)
                    } else {
                        if (this.koz === "right") {
                            this.kee.drawImage(this.srn, 0, 0, this.utu, this.height, this.x + this.width - this.utu, this.y, this.utu, this.height)
                        }
                    }
                }
            } else {
                if (f) {
                    this.kee.drawImage(this.srn, n, m, o, j, this.x + n, this.y + m, o, j)
                } else {
                    this.kee.drawImage(this.srn, this.x, this.y)
                }
            }
        }
    };
    this.xwn = function() {
        b.parent.yud();
        if (b.kyf[b.ahi] <= 0) {
            return
        }
        if (b.yxh === false) {
            b.kif = setTimeout(b.parent.nyh, 400);
            b.nda = setTimeout(b.parent.pep, 500)
        } else {
            b.ibu = true;
            b.tgn = true;
            b.kif = setTimeout(b.pwz, 400)
        }
    };
    this.ycs = function() {
        b.parent.yud();
        b.gxl = true;
        if (b.yxh === false) {
            b.kif = setTimeout(b.parent.nyh, 400)
        } else {
            b.ibu = true;
            b.kif = setTimeout(b.pwz, 400)
        }
    };
    this.hsu = function() {
        b.ahi = (b.ahi < b.kyf.length - 1) ? b.ahi + 1 : 0;
        b.parent.hly.dvl("step0");
        b.zgu.nwi("gamesd", "#nck", [(b.kyf[b.ahi] > 0) ? b.kyf[b.ahi] : "---"]);
        b.parent.yud();
        return (b.ahi >= b.kyf.length - 1)
    };
    this.uci = function() {
        b.ahi = (b.ahi > 0) ? b.ahi - 1 : b.kyf.length - 1;
        b.parent.hly.dvl("step0");
        b.zgu.nwi("gamesd", "#nck", [(b.kyf[b.ahi] > 0) ? b.kyf[b.ahi] : "---"]);
        b.parent.yud();
        return (b.ahi <= 0)
    };
    this.qxh = function() {
        var d = b.zgu.aar("cmincredit") == null || b.zgu.nwi("cmincredit", "#cie");
        if (d === true) {
            if (++b.uaa > 10) {
                b.qvd = 10
            }
            b.qks = (b.qks + (b.iec * b.qvd) <= b.parent.nko) ? b.qks + (b.iec * b.qvd) : b.parent.nko;
            b.parent.hly.dvl("step0");
            b.zgu.nwi("mincreditd", "#nck", [(b.qks > 0) ? b.parent.fyo(b.qks) : "---"]);
            b.zgu.nwi("mmincredit", "#yaf", [d && b.qks < b.parent.nko]);
            b.zgu.nwi("lmincredit", "#yaf", [d && b.qks > 0]);
            b.parent.yud();
            return (b.qks >= b.parent.nko)
        }
        return true
    };
    this.dgj = function() {
        var d = b.zgu.aar("cmincredit") == null || b.zgu.nwi("cmincredit", "#cie");
        if (d === true) {
            if (++b.uaa > 10) {
                b.qvd = 10
            }
            b.qks = (b.qks - (b.iec * b.qvd) > 0) ? b.qks - (b.iec * b.qvd) : 0;
            b.parent.hly.dvl("step0");
            b.zgu.nwi("mincreditd", "#nck", [(b.qks > 0) ? b.parent.fyo(b.qks) : "---"]);
            b.zgu.nwi("mmincredit", "#yaf", [d && b.qks < b.parent.nko]);
            b.zgu.nwi("lmincredit", "#yaf", [d && b.qks > 0]);
            b.parent.yud();
            return (b.qks >= b.parent.nko || b.qks <= 0)
        }
        return true
    };
    this.dig = function() {
        var d = b.zgu.aar("cmaxcredit") == null || b.zgu.nwi("cmaxcredit", "#cie");
        if (d === true) {
            if (++b.uaa > 10) {
                b.qvd = 10
            }
            b.eas = (b.eas + (b.uxo * b.qvd) > 0) ? b.eas + (b.uxo * b.qvd) : 0;
            b.parent.hly.dvl("step0");
            b.zgu.nwi("maxcreditd", "#nck", [(b.eas > 0) ? b.parent.fyo(b.eas) : "---"]);
            b.zgu.nwi("lmaxcredit", "#yaf", [d && b.eas > b.parent.nko]);
            b.parent.yud();
            return (b.eas <= b.parent.nko)
        }
        return true
    };
    this.fhk = function() {
        var d = b.zgu.aar("cmaxcredit") == null || b.zgu.nwi("cmaxcredit", "#cie");
        if (d === true) {
            if (++b.uaa > 10) {
                b.qvd = 10
            }
            b.eas = (b.eas - (b.uxo * b.qvd) > b.parent.nko) ? b.eas - (b.uxo * b.qvd) : b.parent.nko;
            b.parent.hly.dvl("step0");
            b.zgu.nwi("maxcreditd", "#nck", [(b.eas > 0) ? b.parent.fyo(b.eas) : "---"]);
            b.zgu.nwi("lmaxcredit", "#yaf", [d && b.eas > b.parent.nko]);
            b.parent.yud();
            return (b.eas <= b.parent.nko)
        }
        return true
    };
    this.nmc = function() {
        var d = b.zgu.aar("cmaxwin") == null || b.zgu.nwi("cmaxwin", "#cie");
        if (d === true) {
            if (++b.uaa > 10) {
                b.qvd = 10
            }
            b.bwq = (b.bwq + (b.uxo * b.qvd) > 0) ? b.bwq + (b.uxo * b.qvd) : 0;
            b.parent.hly.dvl("step0");
            b.zgu.nwi("maxwind", "#nck", [(b.bwq > 0) ? b.parent.fyo(b.bwq) : "---"]);
            b.zgu.nwi("lmaxwin", "#yaf", [d && b.bwq > b.uxo]);
            b.parent.yud();
            return (b.bwq <= b.uxo)
        }
        return true
    };
    this.awl = function() {
        var d = b.zgu.aar("cmaxwin") == null || b.zgu.nwi("cmaxwin", "#cie");
        if (d === true) {
            if (++b.uaa > 10) {
                b.qvd = 10
            }
            b.bwq = (b.bwq - (b.uxo * b.qvd) > 0) ? b.bwq - (b.uxo * b.qvd) : b.uxo;
            b.parent.hly.dvl("step0");
            b.zgu.nwi("maxwind", "#nck", [(b.bwq > 0) ? b.parent.fyo(b.bwq) : "---"]);
            b.zgu.nwi("lmaxwin", "#yaf", [d && b.bwq > b.uxo]);
            b.parent.yud();
            return (b.bwq <= b.uxo)
        }
        return true
    };
    this.bmw = function() {
        var d = b.zgu.aar("cmincredit") == null || b.zgu.nwi("cmincredit", "#cie");
        b.qks = b.parent.nko;
        b.zgu.nwi("mincreditd", "#nck", [(d === true && b.qks > 0) ? b.parent.fyo(b.qks) : "---"]);
        b.zgu.nwi("lmincredit", "#yaf", [d]);
        b.zgu.nwi("mmincredit", "#yaf", [d && b.qks < b.parent.nko]);
        b.parent.yud()
    };
    this.ugk = function() {
        var d = b.zgu.aar("cmaxcredit") == null || b.zgu.nwi("cmaxcredit", "#cie");
        b.eas = b.parent.nko;
        b.zgu.nwi("maxcreditd", "#nck", [(d === true && b.eas > 0) ? b.parent.fyo(b.eas) : "---"]);
        b.zgu.nwi("lmaxcredit", "#yaf", [d && b.eas > b.parent.nko]);
        b.zgu.nwi("mmaxcredit", "#yaf", [d]);
        b.parent.yud()
    };
    this.ubr = function() {
        var d = b.zgu.aar("cmaxwin") == null || b.zgu.nwi("cmaxwin", "#cie");
        if (b.bwq === 0) {
            b.bwq = b.uxo
        }
        b.zgu.nwi("maxwind", "#nck", [(d === true && b.bwq > 0) ? b.parent.fyo(b.bwq) : "---"]);
        b.zgu.nwi("lmaxwin", "#yaf", [d && b.bwq > b.uxo]);
        b.zgu.nwi("mmaxwin", "#yaf", [d]);
        b.parent.yud()
    }
}
wxz.prototype = new ryi;

function ahw() {
    var a = this;
    this.zgu = null;
    this.fxc = false;
    this.llx = "";
    this.mxo = "";
    this.sog = "";
    this.das = "";
    this.mjx = "";
    this.emq = "";
    this.zgi = "";
    this.mya = "arial";
    this.jgr = "bold";
    this.ezn = "white";
    this.kip = "black";
    this.fah = null;
    this.prk = "white";
    this.kca = "rgb(150,150,150)";
    this.hpk = 3;
    this.eqy = 4;
    this.ucg = 24;
    this.elp = 24;
    this.qwu = 24;
    this.jsz = new drx();
    this.qoj = new drx();
    this.slz = new drx();
    this.pau = new drx();
    this.wrx = new drx();
    this.edl = new drx();
    this.bqj = new drx();
    this.kyf = [];
    this.ahi = 0;
    this.iec = 0;
    this.uxo = 0;
    this.vnk = 0;
    this.uzb = 0;
    this.qks = 0;
    this.eas = 0;
    this.bwq = 0;
    this.qts = false;
    this.bbh = false;
    this.jis = 0;
    this.fyt = true;
    this.nwz = true;
    this.rcc = null;
    this.mtc = 0;
    this.uaa = 0;
    this.qvd = 1;
    this.qla = 250;
    this.brv = function(b, d, c) {
        ahw.prototype.brv.call(this, b, d, c);
        this.zgu = new nhr();
        this.zgu.brv();
        this.zgu.hbx("buttons");
        this.zgu.hbx("displays");
        this.zgu.hbx("checkboxes");
        this.zgu.hbx("lbuttons");
        this.zgu.hbx("mbuttons");
        this.zgu.hbx("tbuttons");
        this.zgu.hbx("bbuttons");
        this.zgu.hbx("bdisplays");
        this.zgu.hbx("abuttons");
        this.zgu.hbx("adisplays");
        this.zgu.hbx("acheckboxes");
        this.zgu.hbx("sbuttons");
        this.zgu.hbx("hbuttons")
    };
    this.zfg = function(b) {
        try {
            this.oex(b);
            this.pxb(b);
            this.sex(b)
        } catch (c) {
            console.error(c)
        }
    };
    this.ioq = function(b) {
        try {
            var c = this.zgu.kew("lbuttons"),
                n = this.zgu.kew("mbuttons"),
                k = this.zgu.kew("tbuttons"),
                m = this.zgu.kew("sbuttons"),
                l = this.zgu.kew("hbuttons"),
                f = this.zgu.kew("displays");
            this.mya = b.font;
            this.jgr = b.ghh;
            this.ezn = b.dhs;
            this.kip = b.backgroundColor;
            this.fah = b.anv;
            this.prk = b.borderColor;
            this.kca = b.qlp;
            for (var d = 0, g = c.length; d < g; d++) {
                c[d].ioq(b.wpk)
            }
            for (var d = 0, g = n.length; d < g; d++) {
                n[d].ioq(b.cwu)
            }
            for (var d = 0, g = k.length; d < g; d++) {
                k[d].ioq(b.sxg)
            }
            for (var d = 0, g = f.length; d < g; d++) {
                f[d].ioq(b.display)
            }
            for (var d = 0, g = m.length; d < g; d++) {
                m[d].ioq(b.zcl)
            }
            for (var d = 0, g = l.length; d < g; d++) {
                l[d].ioq(b.zcl)
            }
            this.zgu.jle("checkboxes", "#ioq", [b.ies])
        } catch (j) {
            console.error(j)
        }
    };
    this.ylm = function(g) {
        try {
            var b = this.zgu.kew("lbuttons"),
                o = this.zgu.kew("mbuttons"),
                l = this.zgu.kew("tbuttons"),
                n = this.zgu.kew("sbuttons"),
                m = this.zgu.kew("hbuttons"),
                c = this.zgu.kew("bdisplays"),
                f = this.zgu.kew("adisplays");
            xdx = this.zgu.kew("checkboxes"), vtt = n.length, pns = (vtt <= 2) ? g.eyk : (vtt <= 3) ? g.vvn : (vtt <= 4) ? g.zmc : g.djv, vtt = m.length, tzc = (vtt <= 2) ? g.eyk : (vtt <= 3) ? g.vvn : (vtt <= 4) ? g.zmc : g.djv, moa = (this.parent.smu() != null) ? g.szs : g.tok;
            this.hpk = g.lbi;
            this.eqy = g.crl;
            this.ucg = g.eos;
            this.elp = g.zhk;
            this.qwu = g.nlq;
            this.jsz = g.cox;
            this.qoj = g.waz;
            this.slz = g.ykz;
            this.pau = g.gpq;
            this.wrx = g.oor;
            this.edl = g.pcv;
            this.bqj = g.tuk;
            this.zgu.nwi("bett", "#gix", [moa.cvv]);
            this.zgu.nwi("autot", "#gix", [moa.ufp]);
            this.zgu.nwi("helpt", "#gix", [moa.xtm]);
            this.zgu.nwi("settingt", "#gix", [moa.glk]);
            this.zgu.nwi("returnt", "#gix", [moa.dqu]);
            this.zgu.nwi("lbet", "#gix", [g.zfq]);
            this.zgu.nwi("mbet", "#gix", [g.cps]);
            this.zgu.nwi("llines", "#gix", [g.ibz]);
            this.zgu.nwi("mlines", "#gix", [g.qxd]);
            this.zgu.nwi("betd", "#gix", [g.bwo]);
            this.zgu.nwi("linesd", "#gix", [g.wcl]);
            this.zgu.nwi("totald", "#gix", [g.dzo]);
            this.zgu.nwi("lgames", "#gix", [g.iqm]);
            this.zgu.nwi("mgames", "#gix", [g.kcb]);
            this.zgu.nwi("lmincredit", "#gix", [g.onj]);
            this.zgu.nwi("mmincredit", "#gix", [g.nsy]);
            this.zgu.nwi("lmaxcredit", "#gix", [g.gch]);
            this.zgu.nwi("mmaxcredit", "#gix", [g.aem]);
            this.zgu.nwi("lmaxwin", "#gix", [g.guj]);
            this.zgu.nwi("mmaxwin", "#gix", [g.qow]);
            this.zgu.nwi("gamesd", "#gix", [g.ntu]);
            this.zgu.nwi("mincreditd", "#gix", [g.exe]);
            this.zgu.nwi("maxcreditd", "#gix", [g.pca]);
            this.zgu.nwi("maxwind", "#gix", [g.qhw]);
            this.zgu.nwi("cmincredit", "#gix", [g.chr]);
            this.zgu.nwi("cmaxcredit", "#gix", [g.rtz]);
            this.zgu.nwi("cmaxwin", "#gix", [g.xlq]);
            for (var d = 0, j = b.length; d < j; d++) {
                b[d].ylm(g.wpk)
            }
            for (var d = 0, j = o.length; d < j; d++) {
                o[d].ylm(g.cwu)
            }
            for (var d = 0, j = l.length; d < j; d++) {
                l[d].ylm(g.sxg)
            }
            for (var d = 0, j = c.length; d < j; d++) {
                c[d].ylm(g.gee)
            }
            for (var d = 0, j = f.length; d < j; d++) {
                f[d].ylm(g.jps)
            }
            for (var d = 0, j = n.length; d < j; d++) {
                n[d].ylm(g.zcl)
            }
            for (var d = 0, j = m.length; d < j; d++) {
                m[d].ylm(g.zcl)
            }
            for (var d = 0, j = xdx.length; d < j; d++) {
                xdx[d].ylm(g.ies)
            }
            for (var d = 0, j = n.length; d < j; d++) {
                n[d].gix(pns[d])
            }
            for (var d = 0, j = m.length; d < j; d++) {
                m[d].gix(tzc[d])
            }
        } catch (k) {
            console.error(k)
        }
    };
    this.oex = function(c) {
        var b = (this.parent.smu() != null) ? c.szs : c.tok;
        this.zgu.oro("bett", this.hht(b.cvv, null, this.parent.hly.lrj("btn_b"), this.siv, null), ["buttons", "tbuttons"]);
        if (this.parent.smu() != null) {
            this.zgu.oro("autot", this.hht(b.ufp, null, this.parent.hly.lrj("btn_as"), this.vdo, null), ["buttons", "tbuttons"])
        }
        this.zgu.oro("helpt", this.hht(b.xtm, null, this.parent.hly.lrj("btn_i"), this.rds, null), ["buttons", "tbuttons"]);
        this.zgu.oro("settingt", this.hht(b.glk, null, this.parent.hly.lrj("btn_se"), this.ykd, null), ["buttons", "tbuttons"]);
        this.zgu.oro("returnt", this.hht(b.dqu, null, this.parent.hly.lrj("btn_c"), this.dni, null), ["buttons", "tbuttons"])
    };
    this.pxb = function(b) {
        this.zgu.oro("betd", this.flb(b.bwo, null, this.parent.hzg), ["displays", "bdisplays"]);
        this.zgu.oro("lbet", this.tyo(b.zfq, "", this.parent.uqe), ["buttons", "lbuttons", "bbuttons"]);
        this.zgu.oro("mbet", this.tyo(b.cps, "+", this.parent.dck), ["buttons", "mbuttons", "bbuttons"]);
        this.zgu.oro("linesd", this.flb(b.wcl, null, this.parent.yos), ["displays", "bdisplays"]);
        if (this.fxc) {
            this.zgu.oro("llines", this.tyo(b.ibz, "", this.parent.uaz), ["buttons", "lbuttons", "bbuttons"]);
            this.zgu.oro("mlines", this.tyo(b.qxd, "+", this.parent.cnm), ["buttons", "mbuttons", "bbuttons"])
        }
        this.zgu.oro("totald", this.flb(b.dzo, null, this.parent.vrh()), ["displays", "bdisplays"])
    };
    this.sex = function(b) {
        this.zgu.oro("gamesd", this.flb(b.ntu, null, this.kyf[this.ahi]), ["displays", "adisplays"]);
        this.zgu.oro("lgames", this.tyo(b.iqm, "", this.uci), ["buttons", "lbuttons", "abuttons"]);
        this.zgu.oro("mgames", this.tyo(b.kcb, "+", this.hsu), ["buttons", "mbuttons", "abuttons"]);
        this.zgu.oro("mincreditd", this.flb(b.exe, null, "---"), ["displays", "adisplays"]);
        this.zgu.oro("lmincredit", this.tyo(b.onj, "", this.dgj), ["buttons", "lbuttons", "abuttons"]);
        this.zgu.oro("mmincredit", this.tyo(b.nsy, "+", this.qxh), ["buttons", "mbuttons", "abuttons"]);
        this.zgu.oro("maxcreditd", this.flb(b.pca, null, "---"), ["displays", "adisplays"]);
        this.zgu.oro("lmaxcredit", this.tyo(b.gch, "", this.fhk), ["buttons", "lbuttons", "abuttons"]);
        this.zgu.oro("mmaxcredit", this.tyo(b.aem, "+", this.dig), ["buttons", "mbuttons", "abuttons"]);
        this.zgu.oro("maxwind", this.flb(b.qhw, null, "---"), ["displays", "adisplays"]);
        this.zgu.oro("lmaxwin", this.tyo(b.guj, "", this.awl), ["buttons", "lbuttons", "abuttons"]);
        this.zgu.oro("mmaxwin", this.tyo(b.qow, "+", this.nmc), ["buttons", "mbuttons", "abuttons"]);
        this.zgu.oro("cmincredit", this.bso(b.chr, "", this.bmw), ["checkboxes", "acheckboxes"]);
        this.zgu.oro("cmaxcredit", this.bso(b.rtz, "", this.ugk), ["checkboxes", "acheckboxes"]);
        this.zgu.oro("cmaxwin", this.bso(b.xlq, "", this.ubr), ["checkboxes", "acheckboxes"])
    };
    this.nth = function(j, g, f, e, d, b) {
        var c = new xoi();
        c.brv(new drx(0, 0, 1, 1), this.context2D);
        c.parent = this;
        c.xcv = e;
        c.yql = g;
        c.rze(d, b);
        c.ylm(this.parent.bnl.pnn.zcl);
        c.ioq(this.parent.style.pnn.zcl);
        c.ztt(f);
        this.zgu.oro(j, c, ["buttons", "sbuttons"])
    };
    this.cts = function(f, e, d, c) {
        var b = new xoi();
        b.brv(new drx(0, 0, 1, 1), this.context2D);
        b.parent = this;
        b.xcv = c;
        b.yql = e;
        b.ylm(this.parent.bnl.pnn.zcl);
        b.ioq(this.parent.style.pnn.zcl);
        b.ztt(d);
        this.zgu.oro(f, b, ["buttons", "hbuttons"])
    };
    this.flb = function(b, e, d) {
        var c = new txv();
        c.brv(b, this.context2D, null, e, d);
        c.parent = this;
        return c
    };
    this.tyo = function(c, e, d) {
        var b = new qdu();
        b.brv(c, this.context2D, null, null, e);
        b.parent = this;
        b.xcv = d;
        return b
    };
    this.hht = function(d, g, f, e, c) {
        var b = new qdu();
        b.brv(d, this.context2D, null, f, g);
        b.parent = this;
        b.xcv = e;
        if (c != null) {
            b.inp = c
        }
        return b
    };
    this.bso = function(c, e, d) {
        var b = new cno();
        b.brv(c, this.context2D, null, e);
        b.parent = this;
        b.xcv = d;
        return b
    };
    this.cmi = function(o, n) {
        var m = this.zgu.kew("buttons"),
            g = this.zgu.kew("checkboxes"),
            f = o - this.x,
            d = n - this.y;
        for (var e = 0, l = m.length; e < l; e++) {
            var b = m[e];
            if (f >= b.x && f <= b.x + b.width && d >= b.y && d <= b.y + b.height && b.iac() === true) {
                if (b.vib() === true && b.lmr() === false) {
                    if (b instanceof xoi) {
                        this.parent.hly.jsl("btn");
                        this.parent.hly.dvl("btn");
                        b.phd(true, true, true);
                        b.xcv()
                    } else {
                        if (b instanceof qdu) {
                            if (b.ike() === "rect") {
                                this.parent.hly.jsl("btn");
                                this.parent.hly.dvl("btn");
                                b.phd(true, true, false);
                                b.xcv()
                            } else {
                                b.phd(true, false, false);
                                this.uaa = 0;
                                this.qvd = 1;
                                if (b.xcv() === false) {
                                    this.rcc = function() {
                                        if (b.xcv() === true) {
                                            clearInterval(a.mtc);
                                            b.phd(false, true);
                                            for (var p = 0; p < l; p++) {
                                                m[p].mrr(false)
                                            }
                                        }
                                    };
                                    this.mtc = setInterval(this.rcc, this.qla)
                                }
                            }
                        }
                    }
                    for (var c = 0; c < l; c++) {
                        m[c].mrr(true)
                    }
                    return true
                }
            }
        }
        for (var e = 0, l = g.length; e < l; e++) {
            var k = g[e];
            if (f >= k.x && f <= k.x + k.width && d >= k.y && d <= k.y + k.height) {
                if (k.iac() === true && k.vib() === true) {
                    k.dxa(!k.cie(), true);
                    k.xcv();
                    for (var c = 0; c < l; c++) {
                        g[c].mrr(true)
                    }
                }
                return true
            }
        }
        return false
    };
    this.arh = function() {
        var e = this.zgu.kew("buttons");
        for (var d = 0, b = e.length; d < b; d++) {
            var c = e[d];
            if (c.sea() == true && !(c instanceof qdu && c.ike() === "rect")) {
                clearInterval(this.mtc);
                c.phd(false, true);
                return true
            }
        }
        return false
    };
    this.usa = function(b) {};
    this.vrb = function(b) {};
    this.vrs = function(c, b, d) {
        this.zgu.nwi("betd", "#nck", [c]);
        this.zgu.nwi("linesd", "#nck", [b]);
        this.zgu.nwi("totald", "#nck", [d]);
        this.parent.yud()
    };
    this.sli = function(b) {
        this.kyf = b.g;
        this.iec = b.v;
        this.uxo = b.v;
        this.qts = b.r;
        this.bbh = b.l;
        if (typeof b.m != "undefined" && b.m != null && b.m > 0) {
            this.vnk = b.m;
            this.uzb = b.m
        }
    };
    this.fsi = function() {
        if (this.qts === true) {
            this.qks = this.parent.nko;
            this.eas = this.parent.nko;
            this.ahi = 0;
            this.bwq = 0
        }
    };
    this.tfb = function() {
        if (this.kyf.length > 0 && this.ahi >= 0) {
            return this.kyf[this.ahi]
        }
        return 0
    };
    this.ett = function() {
        var b = this.zgu.aar("cmincredit") == null || this.zgu.nwi("cmincredit", "#cie");
        if (this.qks > 0 && b === true) {
            return this.qks
        }
        return 0
    };
    this.lzh = function() {
        var b = this.zgu.aar("cmaxcredit") == null || this.zgu.nwi("cmaxcredit", "#cie");
        if (this.eas > 0 && b === true) {
            return this.eas
        }
        return 0
    };
    this.ynb = function() {
        var b = this.zgu.aar("cmaxwin") == null || this.zgu.nwi("cmaxwin", "#cie");
        if (this.bwq > 0 && b === true) {
            return this.bwq
        }
        return 0
    };
    this.qvt = function(c, f, d) {
        if (this.kyf && this.kyf.length > 0) {
            var g = this.zgu.aar("cmincredit") == null || this.zgu.nwi("cmincredit", "#cie"),
                e = this.zgu.aar("cmaxcredit") == null || this.zgu.nwi("cmaxcredit", "#cie"),
                b = this.zgu.aar("cmaxwin") == null || this.zgu.nwi("cmaxwin", "#cie");
            if (this.qts === true) {
                g = this.bbh;
                e = false;
                b = false;
                this.fsi()
            } else {
                if (this.bbh === true) {
                    g = true;
                    this.qks = (this.qks < this.parent.nko) ? this.qks : this.parent.nko;
                    this.qks = (this.qks > 0) ? this.qks : this.parent.nko
                } else {
                    g = (this.qks < this.parent.nko) ? g : false;
                    this.qks = (this.qks < this.parent.nko) ? this.qks : this.parent.nko
                }
                e = (this.eas > this.parent.nko) ? e : false;
                this.eas = (this.eas > this.parent.nko) ? this.eas : this.parent.nko
            }
            this.zgu.nwi("cmincredit", "#dxa", [g]);
            this.zgu.nwi("cmaxcredit", "#dxa", [e]);
            this.zgu.nwi("cmaxwin", "#dxa", [b]);
            this.zgu.nwi("gamesd", "#nck", [(this.kyf[this.ahi] > 0) ? this.kyf[this.ahi] : "---"]);
            this.zgu.nwi("mincreditd", "#nck", [(g === true && this.qks > 0) ? this.parent.fyo(this.qks) : "---"]);
            this.zgu.nwi("maxcreditd", "#nck", [(e === true && this.eas > 0) ? this.parent.fyo(this.eas) : "---"]);
            this.zgu.nwi("maxwind", "#nck", [(b === true && this.bwq > 0) ? this.parent.fyo(this.bwq) : "---"]);
            this.zgu.nwi("lmincredit", "#yaf", [g]);
            this.zgu.nwi("mmincredit", "#yaf", [g]);
            this.zgu.nwi("lmaxcredit", "#yaf", [e]);
            this.zgu.nwi("mmaxcredit", "#yaf", [e]);
            this.zgu.nwi("lmaxwin", "#yaf", [b]);
            this.zgu.nwi("mmaxwin", "#yaf", [b])
        }
        this.fyt = c;
        this.nwz = f;
        if (typeof d == "number") {
            if (d === 0) {
                this.siv()
            } else {
                if (d === 1) {
                    if (this.parent.smu() != null) {
                        this.vdo()
                    } else {
                        this.rds()
                    }
                } else {
                    if (d === 2) {
                        if (this.parent.smu() != null) {
                            this.rds()
                        } else {
                            this.ykd()
                        }
                    } else {
                        if (d === 3 && this.parent.smu() != null) {
                            this.ykd()
                        }
                    }
                }
            }
        } else {
            this.siv()
        }
        this.zgu.jle("tbuttons", "#jug", [true]);
        this.yaf(true);
        this.parent.yud()
    };
    this.pwz = function() {
        this.zgu.jle("tbuttons", "#jug", [false]);
        this.zgu.jle("bbuttons", "#jug", [false]);
        this.zgu.jle("sbuttons", "#jug", [false]);
        this.zgu.jle("abuttons", "#jug", [false]);
        this.zgu.jle("acheckboxes", "#jug", [false]);
        this.yaf(false);
        this.parent.yud()
    };
    this.stop = function() {
        clearInterval(this.mtc)
    };
    this.uib = function(d, b) {
        var c = "";
        this.zgu.nwi("language", "#nck", [tbl.zbv.ipx(d.language)]);
        this.zgu.nwi("audio", "#nck", [tbl.zbv.ipx(d.audio)]);
        this.zgu.nwi("melody", "#nck", [tbl.zbv.ipx(d.oom)]);
        this.zgu.nwi("fullscreen", "#nck", [tbl.zbv.ipx(d.jcg)]);
        this.zgu.nwi("turbo", "#nck", [tbl.zbv.ipx(d.bvn)]);
        this.zgu.nwi("help", "#nck", [tbl.zbv.ipx(d.wvo)]);
        this.zgu.nwi("history", "#nck", [tbl.zbv.ipx(d.uap)]);
        this.zgu.nwi("statistic", "#nck", [tbl.zbv.ipx(d.xho)]);
        this.zgu.nwi("rules", "#nck", [tbl.zbv.ipx(d.qtu)]);
        this.zgu.nwi("gamble", "#nck", [tbl.zbv.ipx(d.jns)]);
        if (tbl.zbv.nns[tbl.zbv.gyd] === tbl.fax.srp) {
            c = tbl.zbv.ipx(d.left)
        } else {
            if (tbl.zbv.nns[tbl.zbv.gyd] === tbl.fax.cwp) {
                c = tbl.zbv.ipx(d.bnt)
            } else {
                if (tbl.zbv.nns[tbl.zbv.gyd] === tbl.fax.krg) {
                    c = tbl.zbv.ipx(d.uhy)
                }
            }
        }
        this.zgu.nwi("adjustment", "#nck", [c]);
        if (b && b === true) {
            this.llx = tbl.zbv.ipx(d.hbp) + "/" + tbl.zbv.ipx(d.kgl) + ":";
            this.mxo = tbl.zbv.ipx(d.yos) + ":"
        } else {
            this.llx = tbl.zbv.ipx(d.hbp) + ":"
        }
        this.sog = tbl.zbv.ipx(d.jmq) + ":";
        this.emq = tbl.zbv.ipx(d.mza);
        this.zgi = tbl.zbv.ipx(d.jjs);
        if (this.parent.dez === true && tbl.xyy.value44.d === true) {
            this.mjx = tbl.zbv.ipx(d.rpc)
        }
        this.zgu.nwi("cmincredit", "#nck", [tbl.zbv.ipx(d.cuj)]);
        this.zgu.nwi("cmaxcredit", "#nck", [tbl.zbv.ipx(d.acg)]);
        this.zgu.nwi("cmaxwin", "#nck", [tbl.zbv.ipx(d.tdh)])
    };
    this.yud = function(l, j, m, e) {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        var c = (l != null && j != null && m != null && e != null),
            n = this.context2D,
            k = this.zgu.kew("tbuttons"),
            b = this.kip,
            g = this.prk;
        if (this.fah) {
            b = n.createRadialGradient(this.x + this.width / 2, this.y + this.height / 2, this.height / 6, this.x + this.width / 2, this.y + this.height / 2, this.height);
            b.addColorStop(0, this.kip);
            b.addColorStop(1, this.fah)
        }
        if (this.kca) {
            g = n.createLinearGradient(this.x + this.width / 2, this.y, this.x + this.width / 2, this.y + this.height);
            g.addColorStop(0, this.prk);
            g.addColorStop(1, this.kca)
        }
        n.save();
        n.clearRect(0, 0, this.width, this.height);
        if (c) {
            n.beginPath();
            n.rect(l, j, m, e);
            n.closePath();
            n.clip()
        }
        tbl.vpf.pzv(n, 0, 0, this.width, this.height, this.eqy, b, g, this.hpk);
        for (var d = 0, f = k.length; d < f; d++) {
            k[d].yud()
        }
        if (this.jis === 0) {
            this.lfy(n)
        } else {
            if (this.jis === 1) {
                this.phh(n)
            } else {
                if (this.jis === 2) {
                    this.wqb(n)
                } else {
                    if (this.jis === 3) {
                        this.nfn(n)
                    }
                }
            }
        }
        n.restore();
        if (this.kee && this.srn) {
            if (c) {
                this.kee.drawImage(this.srn, l, j, m, e, this.x + l, this.y + j, m, e)
            } else {
                this.kee.drawImage(this.srn, this.x, this.y)
            }
        }
    };
    this.lfy = function(c) {
        var f = this.zgu.kew("bbuttons"),
            d = this.zgu.kew("bdisplays");
        if (this.jsz.width > 0 && this.jsz.height > 0) {
            tbl.vpf.bww(c, this.llx, this.ezn, this.jsz.x, this.jsz.y, this.jsz.width, this.jsz.height, this.mya, this.ucg, this.jgr, 0)
        }
        if (this.qoj.width > 0 && this.qoj.height > 0) {
            tbl.vpf.bww(c, this.mxo, this.ezn, this.qoj.x, this.qoj.y, this.qoj.width, this.qoj.height, this.mya, this.ucg, this.jgr, 0)
        }
        if (this.slz.width > 0 && this.slz.height > 0) {
            tbl.vpf.bww(c, this.sog, this.ezn, this.slz.x, this.slz.y, this.slz.width, this.slz.height, this.mya, this.ucg, this.jgr, 0)
        }
        tbl.vpf.iaj(c, this.das, this.ezn, this.pau.x, this.pau.y, this.pau.width, this.pau.height, this.mya, this.qwu, this.jgr, "center", true);
        for (var e = 0, b = f.length; e < b; e++) {
            f[e].yud()
        }
        for (var e = 0, b = d.length; e < b; e++) {
            d[e].yud()
        }
    };
    this.phh = function(c) {
        var f = this.zgu.kew("abuttons"),
            d = this.zgu.kew("adisplays"),
            g = this.zgu.kew("acheckboxes");
        tbl.vpf.iaj(c, this.mjx, this.ezn, this.wrx.x, this.wrx.y, this.wrx.width, this.wrx.height, this.mya, this.qwu, this.jgr, "center", true);
        tbl.vpf.bww(c, this.emq, this.ezn, this.edl.x, this.edl.y, this.edl.width, this.edl.height, this.mya, this.elp, this.jgr, 0);
        tbl.vpf.haz(c, this.zgi, this.ezn, this.bqj.x, this.bqj.y, this.bqj.width, this.bqj.height, this.mya, this.elp, this.jgr);
        for (var e = 0, b = f.length; e < b; e++) {
            f[e].yud()
        }
        for (var e = 0, b = d.length; e < b; e++) {
            d[e].yud()
        }
        for (var e = 0, b = g.length; e < b; e++) {
            g[e].yud()
        }
    };
    this.wqb = function(c) {
        var d = this.zgu.kew("hbuttons");
        for (var e = 0, b = d.length; e < b; e++) {
            d[e].yud()
        }
    };
    this.nfn = function(c) {
        var d = this.zgu.kew("sbuttons");
        for (var e = 0, b = d.length; e < b; e++) {
            d[e].yud()
        }
    };
    this.hsu = function() {
        a.ahi = (a.ahi < a.kyf.length - 1) ? a.ahi + 1 : 0;
        a.parent.hly.dvl("btn");
        a.zgu.nwi("gamesd", "#nck", [(a.kyf[a.ahi] > 0) ? a.kyf[a.ahi] : "---"]);
        a.yud();
        return (a.ahi >= a.kyf.length - 1)
    };
    this.uci = function() {
        a.ahi = (a.ahi > 0) ? a.ahi - 1 : a.kyf.length - 1;
        a.parent.hly.dvl("btn");
        a.zgu.nwi("gamesd", "#nck", [(a.kyf[a.ahi] > 0) ? a.kyf[a.ahi] : "---"]);
        a.yud();
        return (a.ahi <= 0)
    };
    this.qxh = function() {
        var b = a.zgu.aar("cmincredit") == null || a.zgu.nwi("cmincredit", "#cie");
        if (b === true) {
            if (++a.uaa > 10) {
                a.qvd = 10
            }
            a.qks = (a.qks + (a.iec * a.qvd) <= a.parent.nko) ? a.qks + (a.iec * a.qvd) : a.parent.nko;
            a.parent.hly.dvl("btn");
            a.zgu.nwi("mincreditd", "#nck", [(a.qks > 0) ? a.parent.fyo(a.qks) : "---"]);
            a.zgu.nwi("mmincredit", "#yaf", [b && a.qks < a.parent.nko]);
            a.zgu.nwi("lmincredit", "#yaf", [b && a.qks > 0]);
            a.yud();
            return (a.qks >= a.parent.nko)
        }
        return true
    };
    this.dgj = function() {
        var b = a.zgu.aar("cmincredit") == null || a.zgu.nwi("cmincredit", "#cie");
        if (b === true) {
            if (++a.uaa > 10) {
                a.qvd = 10
            }
            a.qks = (a.qks - (a.iec * a.qvd) > 0) ? a.qks - (a.iec * a.qvd) : 0;
            a.parent.hly.dvl("btn");
            a.zgu.nwi("mincreditd", "#nck", [(a.qks > 0) ? a.parent.fyo(a.qks) : "---"]);
            a.zgu.nwi("mmincredit", "#yaf", [b && a.qks < a.parent.nko]);
            a.zgu.nwi("lmincredit", "#yaf", [b && a.qks > 0]);
            a.yud();
            return (a.qks >= a.parent.nko || a.qks <= 0)
        }
        return true
    };
    this.dig = function() {
        var b = a.zgu.aar("cmaxcredit") == null || a.zgu.nwi("cmaxcredit", "#cie");
        if (b === true) {
            if (++a.uaa > 10) {
                a.qvd = 10
            }
            a.eas = (a.eas + (a.uxo * a.qvd) > 0) ? a.eas + (a.uxo * a.qvd) : 0;
            a.parent.hly.dvl("btn");
            a.zgu.nwi("maxcreditd", "#nck", [(a.eas > 0) ? a.parent.fyo(a.eas) : "---"]);
            a.zgu.nwi("lmaxcredit", "#yaf", [b && a.eas > a.parent.nko]);
            a.yud();
            return (a.eas <= a.parent.nko)
        }
        return true
    };
    this.fhk = function() {
        var b = a.zgu.aar("cmaxcredit") == null || a.zgu.nwi("cmaxcredit", "#cie");
        if (b === true) {
            if (++a.uaa > 10) {
                a.qvd = 10
            }
            a.eas = (a.eas - (a.uxo * a.qvd) > a.parent.nko) ? a.eas - (a.uxo * a.qvd) : a.parent.nko;
            a.parent.hly.dvl("btn");
            a.zgu.nwi("maxcreditd", "#nck", [(a.eas > 0) ? a.parent.fyo(a.eas) : "---"]);
            a.zgu.nwi("lmaxcredit", "#yaf", [b && a.eas > a.parent.nko]);
            a.yud();
            return (a.eas <= a.parent.nko)
        }
        return true
    };
    this.nmc = function() {
        var b = a.zgu.aar("cmaxwin") == null || a.zgu.nwi("cmaxwin", "#cie");
        if (b === true) {
            if (++a.uaa > 10) {
                a.qvd = 10
            }
            a.bwq = (a.bwq + (a.uxo * a.qvd) > 0) ? a.bwq + (a.uxo * a.qvd) : 0;
            a.parent.hly.dvl("btn");
            a.zgu.nwi("maxwind", "#nck", [(a.bwq > 0) ? a.parent.fyo(a.bwq) : "---"]);
            a.zgu.nwi("lmaxwin", "#yaf", [b && a.bwq > a.uxo]);
            a.yud();
            return (a.bwq <= a.uxo)
        }
        return true
    };
    this.awl = function() {
        var b = a.zgu.aar("cmaxwin") == null || a.zgu.nwi("cmaxwin", "#cie");
        if (b === true) {
            if (++a.uaa > 10) {
                a.qvd = 10
            }
            a.bwq = (a.bwq - (a.uxo * a.qvd) > 0) ? a.bwq - (a.uxo * a.qvd) : a.uxo;
            a.parent.hly.dvl("btn");
            a.zgu.nwi("maxwind", "#nck", [(a.bwq > 0) ? a.parent.fyo(a.bwq) : "---"]);
            a.zgu.nwi("lmaxwin", "#yaf", [b && a.bwq > a.uxo]);
            a.yud();
            return (a.bwq <= a.uxo)
        }
        return true
    };
    this.bmw = function() {
        var b = a.zgu.aar("cmincredit") == null || a.zgu.nwi("cmincredit", "#cie");
        a.qks = a.parent.nko;
        a.zgu.nwi("mincreditd", "#nck", [(b === true && a.qks > 0) ? a.parent.fyo(a.qks) : "---"]);
        a.zgu.nwi("lmincredit", "#yaf", [b]);
        a.zgu.nwi("mmincredit", "#yaf", [b && a.qks < a.parent.nko]);
        a.yud()
    };
    this.ugk = function() {
        var b = a.zgu.aar("cmaxcredit") == null || a.zgu.nwi("cmaxcredit", "#cie");
        a.eas = a.parent.nko;
        a.zgu.nwi("maxcreditd", "#nck", [(b === true && a.eas > 0) ? a.parent.fyo(a.eas) : "---"]);
        a.zgu.nwi("lmaxcredit", "#yaf", [b && a.eas > a.parent.nko]);
        a.zgu.nwi("mmaxcredit", "#yaf", [b]);
        a.yud()
    };
    this.ubr = function() {
        var b = a.zgu.aar("cmaxwin") == null || a.zgu.nwi("cmaxwin", "#cie");
        if (a.bwq === 0) {
            a.bwq = a.uxo
        }
        a.zgu.nwi("maxwind", "#nck", [(b === true && a.bwq > 0) ? a.parent.fyo(a.bwq) : "---"]);
        a.zgu.nwi("lmaxwin", "#yaf", [b && a.bwq > a.uxo]);
        a.zgu.nwi("mmaxwin", "#yaf", [b]);
        a.yud()
    };
    this.siv = function() {
        a.jis = 0;
        a.zgu.nwi("bett", "#phd", [true, false, false]);
        a.zgu.nwi("autot", "#phd", [false, false, false]);
        a.zgu.nwi("helpt", "#phd", [false, false, false]);
        a.zgu.nwi("settingt", "#phd", [false, false, false]);
        a.zgu.nwi("returnt", "#phd", [false, false, false]);
        a.zgu.jle("bbuttons", "#jug", [a.fyt]);
        a.zgu.jle("bbuttons", "#yaf", [a.fyt]);
        a.zgu.jle("abuttons", "#jug", [false]);
        a.zgu.jle("acheckboxes", "#jug", [false]);
        a.zgu.jle("hbuttons", "#jug", [false]);
        a.zgu.jle("sbuttons", "#jug", [false]);
        a.yud()
    };
    this.vdo = function() {
        var d = a.zgu.aar("cmincredit") == null || a.zgu.nwi("cmincredit", "#cie"),
            c = a.zgu.aar("cmaxcredit") == null || a.zgu.nwi("cmaxcredit", "#cie"),
            b = a.zgu.aar("cmaxwin") == null || a.zgu.nwi("cmaxwin", "#cie");
        a.jis = 1;
        a.iec = (a.vnk > 0) ? a.parent.vrh() * a.vnk : a.iec;
        a.uxo = (a.uzb > 0) ? a.parent.vrh() * a.uzb : a.uxo;
        a.zgu.nwi("bett", "#phd", [false, false, false]);
        a.zgu.nwi("autot", "#phd", [true, false, false]);
        a.zgu.nwi("helpt", "#phd", [false, false, false]);
        a.zgu.nwi("settingt", "#phd", [false, false, false]);
        a.zgu.nwi("returnt", "#phd", [false, false, false]);
        a.zgu.jle("bbuttons", "#jug", [false]);
        a.zgu.jle("abuttons", "#jug", [true]);
        a.zgu.nwi("mmincredit", "#yaf", [d && a.qks < a.parent.nko]);
        a.zgu.nwi("lmaxcredit", "#yaf", [c && a.eas > a.parent.nko]);
        a.zgu.nwi("lmaxwin", "#yaf", [b && a.bwq > a.uxo]);
        a.zgu.jle("acheckboxes", "#jug", [true]);
        a.zgu.jle("hbuttons", "#jug", [false]);
        a.zgu.jle("sbuttons", "#jug", [false]);
        if (a.bbh === true) {
            a.zgu.nwi("cmincredit", "#jug", [false])
        }
        a.yud()
    };
    this.rds = function() {
        a.jis = 2;
        a.zgu.nwi("bett", "#phd", [false, false, false]);
        a.zgu.nwi("autot", "#phd", [false, false, false]);
        a.zgu.nwi("helpt", "#phd", [true, false, false]);
        a.zgu.nwi("settingt", "#phd", [false, false, false]);
        a.zgu.nwi("returnt", "#phd", [false, false, false]);
        a.zgu.jle("bbuttons", "#jug", [false]);
        a.zgu.jle("abuttons", "#jug", [false]);
        a.zgu.jle("acheckboxes", "#jug", [false]);
        a.zgu.jle("hbuttons", "#jug", [true]);
        a.zgu.jle("sbuttons", "#jug", [false]);
        a.yud()
    };
    this.ykd = function() {
        a.jis = 3;
        a.zgu.nwi("bett", "#phd", [false, false, false]);
        a.zgu.nwi("autot", "#phd", [false, false, false]);
        a.zgu.nwi("helpt", "#phd", [false, false, false]);
        a.zgu.nwi("settingt", "#phd", [true, false, false]);
        a.zgu.nwi("returnt", "#phd", [false, false, false]);
        a.zgu.jle("bbuttons", "#jug", [false]);
        a.zgu.jle("abuttons", "#jug", [false]);
        a.zgu.jle("acheckboxes", "#jug", [false]);
        a.zgu.jle("hbuttons", "#jug", [false]);
        a.zgu.jle("sbuttons", "#jug", [true]);
        a.zgu.nwi("gamble", "#jug", [a.nwz]);
        a.yud()
    };
    this.dni = function() {
        a.parent.ukn();
        a.zgu.nwi("returnt", "#phd", [false, false, false])
    }
}
ahw.prototype = new ryi;

function xoi() {
    var a = this;
    this.state = 0;
    this.uvm = 1;
    this.gzz = null;
    this.rrw = null;
    this.ncp = null;
    this.vql = "round";
    this.mya = null;
    this.jgr = "bold";
    this.jxy = "center";
    this.kip = null;
    this.ezn = null;
    this.dux = 1;
    this.kor = null;
    this.yff = 17;
    this.ttj = 2;
    this.eqy = 0;
    this.hpk = 1;
    this.zcb = 0;
    this.zde = 0;
    this.xao = 0;
    this.ylm = function(b) {
        try {
            this.yff = b.fontSize;
            this.ttj = b.oso;
            this.eqy = b.crl;
            this.hpk = b.lbi;
            this.xao = b.lkp
        } catch (c) {
            console.error(c)
        }
    };
    this.ioq = function(b) {
        try {
            this.vql = b.gry;
            this.mya = b.font;
            this.jgr = b.ghh;
            this.jxy = b.textAlign;
            this.kip = b.backgroundColor;
            this.ezn = b.dhs;
            this.dux = b.lcr;
            if (b.borderColor && b.qlp) {
                this.kor = this.context2D.createLinearGradient(this.x + this.width / 2, this.y, this.x + this.width / 2, this.y + this.height);
                this.kor.addColorStop(0, b.borderColor);
                this.kor.addColorStop(1, b.qlp)
            } else {
                this.kor = b.borderColor
            }
        } catch (c) {
            console.error(c)
        }
    };
    this.ike = function() {
        return this.vql
    };
    this.rze = function(c, b) {
        this.state = c;
        this.uvm = b
    };
    this.ztt = function(b) {
        this.vpm = b;
        if (this.vql === "round") {
            this.zcb = this.width / 2 - this.ttj
        }
        if (this.vpm) {
            this.zde = Math.round(this.vpm.height / (2 * this.uvm))
        }
    };
    this.tgx = function(b) {
        this.state = (b < this.uvm) ? b : this.state
    };
    this.xga = function(b) {
        this.gzz = b
    };
    this.wdq = function() {
        a.eso = false
    };
    this.bua = function() {
        a.lmp = false;
        if (a.iac()) {
            a.parent.yud(a.x, a.y, a.width, a.height)
        }
    };
    this.yud = function() {
        if (!this.iac()) {
            return
        }
        var l = this.context2D,
            e = (this.vib()) ? this.dux : this.dux / 2,
            b = this.yff,
            d = null,
            c = 0,
            k = 0,
            j = 0,
            g = 0;
        l.save();
        if (this.vpm && this.xcv) {
            if (!this.vib()) {
                l.globalAlpha = e
            }
            if (this.vql === "round") {
                tbl.vpf.ruc(l, this.x + this.width / 2, this.y + this.height / 2, this.zcb, this.kip, e * this.dux)
            } else {
                if (this.vql === "rect") {
                    tbl.vpf.zso(l, this.x, this.y, this.width, this.height, this.eqy, this.kip, e * this.dux, this.kor, this.hpk, e)
                }
            }
            if (this.sea()) {
                if (this.vql === "round") {
                    l.drawImage(this.vpm, 0, (this.state * 2 * this.zde) + this.zde, this.vpm.width, this.zde, this.x, this.y, this.width, this.height)
                } else {
                    if (this.vql === "rect") {
                        l.drawImage(this.vpm, 0, (this.state * 2 * this.zde) + this.zde, this.vpm.width, this.zde, this.x, this.y, this.width, this.height)
                    }
                }
            } else {
                if (this.vql === "round") {
                    l.drawImage(this.vpm, 0, (this.state * 2 * this.zde), this.vpm.width, this.zde, this.x, this.y, this.width, this.height)
                } else {
                    if (this.vql === "rect") {
                        l.drawImage(this.vpm, 0, (this.state * 2 * this.zde), this.vpm.width, this.zde, this.x, this.y, this.width, this.height)
                    }
                }
            }
            if (this.yql != null) {
                l.textAlign = this.jxy;
                l.textBaseline = "bottom";
                l.font = this.jgr + " " + b + "px " + this.mya;
                l.fillStyle = this.ezn;
                d = this.yql.split("|");
                j = 0;
                g = (this.jxy === "center") ? this.x + this.width / 2 : (this.jxy === "left") ? this.x + 2 * this.ttj : this.x + this.width - 2 * this.ttj;
                for (var f = 0; f < d.length; f++) {
                    j = (l.measureText(d[f]).width > j) ? l.measureText(d[f]).width : j
                }
                if (j > this.width - 2 * this.ttj) {
                    c = ((this.width - 2 * this.ttj) / j);
                    b = Math.round(c * b) - 1;
                    l.font = this.jgr + " " + b + "px " + this.mya
                }
                if (b * d.length > this.xao) {
                    c = ((this.xao) / (b * d.length));
                    b = Math.round(c * b) - 1;
                    l.font = this.jgr + " " + b + "px " + this.mya
                }
                k = (this.height - this.ttj - this.xao) + (this.xao - b * d.length) / 2;
                k += b;
                for (var f = 0; f < d.length; f++) {
                    l.fillText(d[f], g, this.y + k);
                    k += b
                }
            }
        }
        l.restore()
    }
}
xoi.prototype = new dal;

function wma() {
    this.cwp = "right";
    this.srp = "left";
    this.wng = null;
    this.sbz = null;
    this.lbd = null;
    this.hjk = -1;
    this.hoh = -1;
    this.nab = true;
    this.kcr = false;
    this.eso = false;
    this.ibu = false;
    this.kdz = 0;
    this.hsh = 0;
    this.mxw = [];
    this.lzu = 0;
    this.jis = 0;
    this.rgu = 1;
    this.etf = 0;
    this.gua = 0;
    this.koz = this.cwp;
    this.mya = null;
    this.jgr = "bold";
    this.ezn = "rgb(255,255,255)";
    this.kip = "rgb(0,0,0)";
    this.aue = "rgb(0,0,0)";
    this.pci = "rgb(0,0,0)";
    this.fmi = 0.7;
    this.ifz = null;
    this.ghk = null;
    this.ccj = null;
    this.nnz = new drx();
    this.mbq = new drx();
    this.gqv = new drx();
    this.ojs = new drx();
    this.hpk = 2;
    this.eqy = 5;
    this.dfm = 4;
    this.pgs = 10;
    this.qkt = 5;
    this.yff = 15;
    var a = 200;
    this.kfi = function(c, d, f) {
        this.mxw = [];
        this.kdz = (d < 0) ? 0 : d;
        this.hsh = (f < 0) ? 0 : f;
        for (var e = this.kdz, b = 0; e <= this.hsh; e++) {
            this.mxw[b++] = c[e]
        }
        this.lzu = this.mxw.length;
        this.etf = this.nnz.height / this.lzu
    };
    this.ylm = function(b) {
        try {
            this.yff = b.fontSize;
            this.hpk = b.lbi;
            this.eqy = b.crl;
            this.dfm = b.knx;
            this.pgs = b.fba;
            this.qkt = b.mam;
            this.nnz = new drx(b.mpx.x, b.mpx.y + b.aez, b.mpx.width, b.mpx.height - 2 * b.aez);
            this.mbq = new drx(b.mpx.x, b.mpx.y, b.mpx.width, b.aez);
            this.gqv = new drx(b.mpx.x, b.mpx.y + b.mpx.height - b.aez, b.mpx.width, b.aez);
            this.ojs = b.iqs
        } catch (c) {
            console.error(c)
        }
    };
    this.ioq = function(b) {
        try {
            this.mya = b.font;
            this.jgr = b.ghh;
            this.ezn = b.dhs;
            this.kip = b.backgroundColor;
            this.aue = b.zby;
            this.pci = b.qpz;
            this.fmi = b.exd;
            this.ghk = this.context2D.createLinearGradient(this.x + this.width / 2, 0, this.x + this.width / 2, this.height);
            this.ghk.addColorStop(0, b.hlo);
            this.ghk.addColorStop(1, b.ofo);
            this.ifz = this.context2D.createLinearGradient(this.nnz.x, 0, this.nnz.x + this.nnz.width, 0);
            this.ccj = this.context2D.createLinearGradient(this.width, this.height / 2, 0, this.height / 2);
            if (this.koz === this.cwp) {
                this.ifz.addColorStop(0, b.smv);
                this.ifz.addColorStop(1, b.vls);
                this.ccj.addColorStop(0, b.hgs);
                this.ccj.addColorStop(1, b.urk)
            } else {
                if (this.koz === this.srp) {
                    this.ifz.addColorStop(0, b.vls);
                    this.ifz.addColorStop(1, b.smv);
                    this.ccj.addColorStop(0, b.urk);
                    this.ccj.addColorStop(1, b.hgs)
                }
            }
        } catch (c) {
            console.error(c)
        }
    };
    this.cmi = function(b, f, c) {
        if (this.ibu || !this.nab || this.eso) {
            return true
        }
        if ((b < this.x || b > this.x + this.width || f < this.y || f > this.y + this.height)) {
            return false
        } else {
            var e = b - this.x,
                d = f - this.y;
            if (this.gqv.scs(e, d)) {
                this.dff(-1);
                this.dvl();
                this.mrr(true, true)
            } else {
                if (this.mbq.scs(e, d)) {
                    this.dff(1);
                    this.dvl();
                    this.mrr(true, true)
                } else {
                    if (this.nnz.scs(e, d)) {
                        this.kcr = true;
                        this.fvg(f);
                        this.mrr(true, true)
                    }
                }
            }
            this.xcv(this.jis);
            return true
        }
    };
    this.arh = function() {
        if (this.kcr) {
            this.kcr = false;
            this.dvl();
            return true
        }
        return false
    };
    this.usa = function(b) {
        if (this.ibu || !this.nab || this.eso) {
            return true
        }
        if (b == this.hoh) {
            this.dff(-1);
            this.dvl();
            this.mrr(true, true);
            this.xcv(this.jis);
            return true
        } else {
            if (b == this.hjk) {
                this.dff(1);
                this.dvl();
                this.mrr(true, true);
                this.xcv(this.jis);
                return true
            }
        }
        return false
    };
    this.vrb = function() {};
    this.pqp = function(b, d, c) {
        if (!this.kcr) {
            return false
        }
        if (b >= this.x + this.nnz.x && b <= this.x + this.nnz.x + this.nnz.width && d >= this.y + this.nnz.y && d <= this.y + this.nnz.y + this.nnz.height) {
            this.fvg(d);
            this.xcv(this.jis);
            return true
        }
        return false
    };
    this.mrr = function(b, c) {
        this.eso = b;
        c = (c === false) ? false : true;
        clearTimeout(this.qlf);
        if (this.eso === true && c === true) {
            this.qlf = setTimeout(this.wdq, a)
        }
    };
    this.wdq = function() {};
    this.xcv = function(b) {};
    this.dvl = function() {};
    this.hsm = function(b, c) {
        this.kdz = (b < 0) ? 0 : b;
        this.hsh = (c < 0) ? 0 : c;
        if (this.mxw) {
            this.hsh = (this.hsh > this.mxw.length - 1) ? this.mxw.length - 1 : this.hsh
        }
    };
    this.qvt = function() {
        this.yaf(true, true)
    };
    this.pwz = function() {
        this.yaf(false, true)
    };
    this.jug = function(b) {
        this.nab = b
    };
    this.vib = function() {
        return this.nab
    };
    this.myq = function(b, c) {
        this.jis = b;
        if (this.jis < this.kdz) {
            this.jis = this.kdz
        }
        if (this.jis >= this.hsh) {
            this.jis = this.hsh
        }
        this.rgu = this.jis + 1;
        if (c && c === true) {
            this.parent.yud()
        }
    };
    this.hca = function(d, e) {
        this.jis = 0;
        for (var c = 0, b = this.mxw.length; c < b; c++) {
            if (this.mxw[c] == d) {
                this.jis = c;
                break
            }
        }
        this.jis = (this.jis >= this.kdz) ? this.jis : this.kdz;
        this.jis = (this.jis < this.hsh) ? this.jis : this.hsh;
        this.rgu = this.jis + 1;
        if (e) {
            this.parent.yud()
        }
    };
    this.fvg = function(b) {
        this.jis = Math.ceil(((this.nnz.height) - (b - this.nnz.y - this.y)) / this.etf) - 1;
        this.jis = (this.jis >= this.kdz) ? this.jis : this.kdz;
        this.jis = (this.jis < this.hsh) ? this.jis : this.hsh;
        this.rgu = this.jis + 1;
        this.parent.yud()
    };
    this.dff = function(b) {
        this.jis += b;
        this.jis = (this.jis >= this.kdz) ? this.jis : this.kdz;
        this.jis = (this.jis < this.hsh) ? this.jis : this.hsh;
        this.rgu = this.jis + 1;
        this.parent.yud()
    };
    this.yud = function() {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        this.vzk();
        if (this.kee && this.srn) {
            this.kee.drawImage(this.ngo, this.x, this.y)
        }
    };
    this.vzk = function() {
        var b = this.context2D;
        b.save();
        b.clearRect(0, 0, this.width, this.height);
        this.dxv(b);
        this.mpl(b);
        this.xah(b);
        this.aiu(b);
        this.ipf(b);
        b.restore()
    };
    this.dxv = function(b) {
        if (this.koz === this.srp) {
            tbl.vpf.vzm(b, 0, 0, this.width, this.height, this.eqy, 0, 0, this.eqy, this.kip, 0.4, this.ccj, this.hpk, 1)
        } else {
            if (this.koz === this.cwp) {
                tbl.vpf.vzm(b, 0, 0, this.width, this.height, 0, this.eqy, this.eqy, 0, this.kip, 0.4, this.ccj, this.hpk, 1)
            }
        }
    };
    this.mpl = function(b) {
        tbl.vpf.szx(b, this.nnz.x, this.nnz.y, this.nnz.width, this.nnz.height, this.aue, 1)
    };
    this.xah = function(b) {
        tbl.vpf.szx(b, this.nnz.x, this.nnz.y + this.nnz.height - Math.round(this.rgu * this.etf), this.nnz.width, Math.round(this.rgu * this.etf), this.ghk, 1)
    };
    this.aiu = function(b) {
        tbl.vpf.szx(b, this.nnz.x - this.dfm, this.nnz.y - this.dfm, this.nnz.width + 2 * this.dfm, this.nnz.height + 2 * this.dfm, null, 0, this.ifz, this.dfm, 1);
        if (this.koz === this.srp) {
            tbl.vpf.vzm(b, this.nnz.x - this.dfm, this.mbq.y, this.nnz.width + 2 * this.dfm, this.mbq.height, this.pgs, 0, 0, 0, this.ifz, 1);
            tbl.vpf.vzm(b, this.nnz.x - this.dfm, this.gqv.y, this.nnz.width + 2 * this.dfm, this.gqv.height, 0, 0, 0, this.pgs, this.ifz, 1)
        } else {
            if (this.koz === this.cwp) {
                tbl.vpf.vzm(b, this.nnz.x - this.dfm, this.mbq.y, this.nnz.width + 2 * this.dfm, this.mbq.height, 0, this.pgs, 0, 0, this.ifz, 1);
                tbl.vpf.vzm(b, this.nnz.x - this.dfm, this.gqv.y, this.nnz.width + 2 * this.dfm, this.gqv.height, 0, 0, this.pgs, 0, this.ifz, 1)
            }
        }
        b.strokeStyle = this.ifz;
        b.lineWidth = Math.round(this.dfm / 4);
        b.beginPath();
        for (var c = 1; c < this.lzu; c++) {
            b.moveTo(this.nnz.x, this.nnz.y + this.nnz.height - Math.round(c * this.etf));
            b.lineTo(this.nnz.x + this.nnz.width, this.nnz.y + this.nnz.height - Math.round(c * this.etf))
        }
        b.closePath();
        b.stroke();
        if (this.wng) {
            if (this.koz === this.srp) {
                b.drawImage(this.wng, 0, 0, this.wng.width / 2, this.wng.height, this.nnz.x, this.nnz.y, this.nnz.width, this.nnz.height)
            } else {
                if (this.koz === this.cwp) {
                    b.drawImage(this.wng, this.wng.width / 2, 0, this.wng.width / 2, this.wng.height, this.nnz.x, this.nnz.y, this.nnz.width, this.nnz.height)
                }
            }
        }
    };
    this.ipf = function(c) {
        var f = this.ezn,
            e = this.ezn,
            b = 0,
            d = 0;
        if (this.koz === this.srp) {
            b = this.qkt;
            d = this.nnz.x - 2 * this.qkt
        } else {
            if (this.koz === this.cwp) {
                b = this.nnz.x + this.nnz.width + this.qkt;
                d = this.width - this.qkt - (this.nnz.x + this.nnz.width + this.qkt)
            }
        }
        if (this.jis > 0 && this.jis < this.mxw.length - 1) {
            tbl.vpf.szx(c, b, this.nnz.y + ((this.lzu - this.rgu) * this.etf), d, this.etf, this.pci, this.fmi);
            tbl.vpf.ptw(c, this.mxw[this.jis], this.ghk, b, this.nnz.y + ((this.lzu - this.rgu) * this.etf) + (this.etf - this.yff) / 2, d, this.yff, this.mya, this.yff, this.jgr, this.qkt)
        } else {
            if (this.jis == 0) {
                f = this.ghk
            } else {
                if (this.jis == this.mxw.length - 1) {
                    e = this.ghk
                }
            }
        }
        tbl.vpf.szx(c, b, this.nnz.y + (this.etf * (this.lzu - 1)), d, this.etf, this.pci, this.fmi);
        tbl.vpf.ptw(c, this.mxw[0], f, b, this.nnz.y + (this.etf * (this.lzu - 1)) + (this.etf - this.yff) / 2, d, this.yff, this.mya, this.yff, this.jgr, this.qkt);
        tbl.vpf.szx(c, b, this.nnz.y, d, this.etf, this.pci, this.fmi);
        tbl.vpf.ptw(c, this.mxw[this.mxw.length - 1], e, b, this.nnz.y + (this.etf - this.yff) / 2, d, this.yff, this.mya, this.yff, this.jgr, this.qkt);
        tbl.vpf.haz(c, "+", this.ezn, this.mbq.x, this.mbq.y, this.mbq.width, this.mbq.height, this.mya, this.yff, this.jgr);
        tbl.vpf.haz(c, "", this.ezn, this.gqv.x, this.gqv.y, this.gqv.width, this.gqv.height, this.mya, this.yff, this.jgr);
        if (this.lbd) {
            tbl.vpf.haz(c, this.lbd, this.ezn, this.ojs.x, this.ojs.y, this.ojs.width, this.ojs.height, this.mya, this.yff, this.jgr)
        }
    }
}
wma.prototype = new ryi;

function dnz() {
    var a = this;
    this.mya = null;
    this.jgr = "bold";
    this.kip = "rgb(0,0,0)";
    this.fah = null;
    this.ezn = "rgb(255,255,255)";
    this.kca = null;
    this.prk = "rgb(60,60,60)";
    this.syh = null;
    this.unq = null;
    this.nab = false;
    this.lho = [];
    this.xpg = [];
    this.xoy = null;
    this.nri = 19;
    this.mbw = 15;
    this.dej = 120;
    this.yat = 2;
    this.mvw = 2;
    this.mtp = 2;
    this.spa = 10;
    this.yff = 12;
    this.brv = function(b, d, c) {
        dnz.prototype.brv.call(this, b, d, c)
    };
    this.ylm = function(b) {
        try {
            this.yff = b.fontSize;
            this.nri = b.kgk;
            this.mbw = b.jll;
            this.dej = b.etw;
            this.yat = b.myu;
            this.mvw = b.ars;
            this.mtp = b.qbk;
            this.spa = b.rmm
        } catch (c) {
            console.error(c)
        }
    };
    this.ioq = function(b) {
        try {
            this.mya = b.font;
            this.jgr = b.ghh;
            this.kip = b.backgroundColor;
            this.fah = b.anv;
            this.ezn = b.dhs;
            this.prk = b.borderColor;
            this.kca = b.qlp;
            if (this.fah) {
                this.syh = this.context2D.createLinearGradient(0, 0, 0, this.height);
                this.syh.addColorStop(0, this.fah);
                this.syh.addColorStop(0.5, this.kip)
            } else {
                this.syh = this.kip
            }
            if (this.kca) {
                this.unq = this.context2D.createLinearGradient(0, 0, 0, this.height);
                this.unq.addColorStop(0, this.kca);
                this.unq.addColorStop(1, this.prk)
            } else {
                this.unq = this.prk
            }
        } catch (c) {
            console.error(c)
        }
    };
    this.cmi = function(b, g, c) {
        var e = b - this.x,
            d = g - this.y,
            f = (c && c === true) ? this.spa : 0;
        if (e >= this.x && e <= this.x + this.width && d >= this.y && d <= this.y + this.height + f && this.vib()) {
            this.parent.shh();
            return true
        }
        return false
    };
    this.uju = function(d, b, c) {
        this.xpg.push({
            id: d,
            yle: b,
            value: c,
            dhq: null
        })
    };
    this.dqs = function(e, c, d, b) {
        this.xpg.push({
            id: e,
            yle: c,
            value: d,
            dhq: b
        })
    };
    this.ffa = function(d, b, c) {
        this.lho.push({
            id: d,
            jqn: b,
            value: c
        })
    };
    this.tgx = function(e, d) {
        for (var c = 0, b = this.xpg.length; c < b; c++) {
            if (this.xpg[c].id == e) {
                this.xpg[c].value = d;
                return true
            }
        }
        return false
    };
    this.kty = function(c, e) {
        for (var d = 0, b = c.length; d < b; d++) {
            if (c[d] == e) {
                return d
            }
        }
        return -1
    };
    this.xga = function(e, d) {
        for (var c = 0, b = this.lho.length; c < b; c++) {
            if (this.lho[c].id == e) {
                if (this.lho[c].value != d) {
                    this.lho[c].value = d;
                    return true
                } else {
                    return false
                }
            }
        }
        return false
    };
    this.djf = function(b) {
        this.xoy = b
    };
    this.jug = function(b) {
        this.nab = b
    };
    this.vib = function(b) {
        return this.nab
    };
    this.dxg = function(c, b) {
        if (this.tgx(c, b)) {
            window.cyh(a.yud)
        }
    };
    this.pej = function(c, b) {
        if (this.xga(c, b)) {
            window.cyh(a.yud)
        }
    };
    this.rdf = function(b) {
        this.djf(b);
        window.cyh(a.yud)
    };
    this.yud = function() {
        if (!a.iac() || !a.parent.tnc()) {
            return
        }
        var e = (a.height - a.yff) / 2 + a.mvw,
            c = a.yat + a.nri * a.xpg.length,
            d = a.width - c - (a.dej * a.lho.length),
            b = a.context2D;
        b.save();
        tbl.vpf.szx(b, 0, 0, a.width, a.height, a.syh, 1);
        a.fzs(b, e);
        a.nzz(b, e);
        if (a.xoy && a.xoy != "") {
            tbl.vpf.haz(b, a.xoy, a.ezn, c, e, d, a.yff, a.mya, a.yff, a.jgr)
        } else {
            if (a.vib()) {
                a.kxe(b)
            }
        }
        a.vxj(b, 0, a.height - a.mtp / 2, a.width, a.height - a.mtp / 2);
        b.restore();
        if (a.kee && a.srn) {
            a.kee.drawImage(a.srn, a.x, a.y)
        }
    };
    this.fzs = function(d, g) {
        var c = 0;
        for (var f = 0, b = this.xpg.length; f < b; f++) {
            if (this.xpg[f].dhq) {
                var e = this.kty(this.xpg[f].dhq, this.xpg[f].value);
                if (this.xpg[f].yle instanceof Array) {
                    tbl.vpf.haz(d, this.xpg[f].yle[e], this.ezn, c, g, this.nri, this.yff, this.mya, this.yff, this.jgr)
                } else {
                    if (this.xpg[f].yle instanceof Image || this.xpg[f].yle instanceof HTMLCanvasElement) {
                        d.drawImage(this.xpg[f].yle, e * this.mbw, 0, this.mbw, this.xpg[f].yle.height, c + this.yat, g - this.mvw, this.nri - 2 * this.yat, this.yff)
                    }
                }
            } else {
                d.save();
                d.globalAlpha = (this.xpg[f].value == true) ? 1 : 0.3;
                if (this.xpg[f].yle instanceof String) {
                    tbl.vpf.haz(d, this.xpg[f].yle, this.ezn, c, g, this.nri, this.yff, this.mya, this.yff, this.jgr)
                } else {
                    if (this.xpg[f].yle instanceof Image || this.xpg[f].yle instanceof HTMLCanvasElement) {
                        d.drawImage(this.xpg[f].yle, c + this.yat, g - this.mvw, this.nri - 2 * this.yat, this.yff)
                    }
                }
                d.restore()
            }
            c += this.nri;
            this.vxj(d, c, 0, c, this.height)
        }
        return c
    };
    this.nzz = function(d, f) {
        var c = this.width - this.yat - this.dej * this.lho.length;
        for (var e = 0, b = this.lho.length; e < b; e++) {
            if (this.lho[e].id == "freeplay") {
                tbl.vpf.szx(d, c, 0, this.dej, this.height, "red", 0.4)
            } else {
                if (this.lho[e].id == "freespin") {
                    tbl.vpf.szx(d, c, 0, this.dej, this.height, "rgb(100,255,100)", 0.5)
                }
            }
            this.vxj(d, c, 0, c, this.height);
            tbl.vpf.haz(d, this.lho[e].jqn + this.lho[e].value, this.ezn, c, f, this.dej, this.yff, this.mya, this.yff, this.jgr);
            c += this.dej
        }
    };
    this.vxj = function(b, d, f, c, e) {
        b.save();
        b.strokeStyle = this.unq;
        b.lineWidth = this.mtp;
        b.beginPath();
        b.moveTo(d, f);
        b.lineTo(c, e);
        b.stroke();
        b.restore()
    };
    this.kxe = function(c) {
        if (this.parent.zwb.aar("topb") == null) {
            return
        }
        var g = 3 * this.height,
            j = this.mtp,
            e = 9,
            d = Math.floor(this.height / 5),
            b = (this.width - g) / 2,
            k = this.mtp;
        c.save();
        c.strokeStyle = this.prk;
        c.lineWidth = j;
        c.beginPath();
        for (var f = 0; f < d; f++) {
            c.moveTo(b + (e - 1) * f, k);
            c.lineTo(((b + g - e * f) + (b + e * f)) / 2, ((this.height - k - j) - f * 2 * j));
            c.lineTo(b + g - (e - 1) * f, k)
        }
        c.stroke();
        c.restore()
    }
}
dnz.prototype = new ryi;

function rkv() {
    var b = this;
    var c = 0;
    var a = 1;
    this.drr = 7;
    this.tbf = 89;
    this.fab = 10000;
    this.zgu = null;
    this.nab = false;
    this.ibu = false;
    this.hhr = -1;
    this.iyw = 0;
    this.mya = null;
    this.jgr = "bold";
    this.kip = "black";
    this.gpn = null;
    this.uzz = null;
    this.ccj = null;
    this.ezn = "white";
    this.cwf = 0.8;
    this.qym = 0;
    this.iff = 0;
    this.bwz = 0;
    this.qkx = 0;
    this.ycc = 0;
    this.rap = 0;
    this.xxn = 0;
    this.yat = 10;
    this.mvw = 5;
    this.ttj = 10;
    this.eqn = this.yat;
    this.obg = 10;
    this.vqx = 20;
    this.mof = 40;
    this.hpk = 4;
    this.yff = 10;
    this.fsa = null;
    this.dnm = null;
    this.xdu = "";
    this.ylt = null;
    this.brv = function(d, f, e) {
        rkv.prototype.brv.call(this, d, f, e);
        this.zgu = new nhr();
        this.zgu.brv();
        this.zgu.hbx("buttons");
        this.zgu.hbx("system");
        this.zgu.hbx("setting")
    };
    this.ylm = function(d) {
        try {
            this.yff = d.fontSize;
            this.obg = d.hls;
            this.vqx = d.qjb;
            this.mof = d.dak;
            this.hpk = d.lbi;
            this.yat = d.myu;
            this.mvw = d.ars;
            this.ttj = d.oso
        } catch (f) {
            console.error(f)
        }
    };
    this.ioq = function(g, m) {
        try {
            var k = this.zgu.kew("buttons"),
                j = (m === true) ? g.yiz.hek : g.rns.hek;
            this.mya = g.font;
            this.jgr = g.ghh;
            this.kip = g.backgroundColor;
            this.gpn = g.niw;
            this.uzz = g.rve;
            this.ezn = g.dhs;
            this.cwf = g.dwt;
            if (this.gpn && this.uzz) {
                this.ccj = this.context2D.createLinearGradient(0, 0, this.width, 0);
                this.ccj.addColorStop(0, this.gpn);
                this.ccj.addColorStop(0.5, this.uzz);
                this.ccj.addColorStop(1, this.gpn)
            }
            for (var f = 0, d = k.length; f < d; f++) {
                k[f].ioq(j)
            }
        } catch (l) {
            console.error(l)
        }
    };
    this.cmi = function(p, o) {
        var n = this.zgu.ofm(),
            q = this.zgu.aar("audio"),
            r = this.zgu.aar("language"),
            f = this.zgu.aar("history"),
            e = p - this.x,
            d = o - this.y;
        if (this.ibu) {
            return true
        }
        for (var l = 0, m = n.length; l < m; l++) {
            var g = n[l];
            if (e >= g.x && e <= g.x + g.width && d >= g.y && d <= g.y + g.height && g.iac()) {
                if (g.vib() && !g.lmr()) {
                    if (g != q && g != r) {
                        this.parent.hly.jsl("btn");
                        this.parent.hly.dvl("btn")
                    }
                    g.phd(true, true, false);
                    g.xcv();
                    for (var k = 0; k < m; k++) {
                        n[k].mrr(true)
                    }
                    if (g != f) {
                        if (this.hhr >= 0) {
                            clearTimeout(this.hhr);
                            this.hhr = -1
                        }
                        this.hhr = setTimeout(this.nyg, this.fab)
                    }
                }
                return true
            }
        }
        if (this.iac() && this.vib()) {
            if (p < this.x + this.ycc || p > this.x + this.ycc + this.rap || o < this.y || o > this.y + this.height) {
                if (this.hhr >= 0) {
                    clearTimeout(this.hhr);
                    this.hhr = -1
                }
                return false
            }
        }
        return true
    };
    this.arh = function() {
        var g = this.zgu.ofm();
        for (var f = 0, d = g.length; f < d; f++) {
            var e = g[f];
            if (e.sea() == true) {
                e.phd(false, true);
                return true
            }
        }
        return false
    };
    this.usa = function(e) {
        var o = this.zgu.ofm(),
            d = this.zgu.kew("system"),
            m = this.zgu.kew("setting"),
            q = this.zgu.aar("audio"),
            l = 0,
            k = 0,
            n = 0,
            g = 0;
        if (this.ibu) {
            return true
        }
        for (l = 0, n = m.length; l < n; l++) {
            var f = m[l];
            if ((e == f.inp || e == f.tcc) && !f.lmr()) {
                if (f != q) {
                    this.parent.hly.jsl("btn");
                    this.parent.hly.dvl("btn")
                }
                f.phd(true, true, false);
                f.xcv();
                for (k = 0, g = o.length; k < g; k++) {
                    o[k].mrr(true)
                }
                if (this.hhr >= 0) {
                    clearTimeout(this.hhr);
                    this.hhr = -1
                }
                return true
            }
        }
        for (l = 0, n = d.length; l < n; l++) {
            var f = d[l];
            if ((e == f.inp || e == f.tcc) && f.vib() && !f.lmr()) {
                if (f != q) {
                    this.parent.hly.jsl("btn");
                    this.parent.hly.dvl("btn")
                }
                f.phd(true, true, false);
                f.xcv();
                for (k = 0, g = o.length; k < g; k++) {
                    o[k].mrr(true)
                }
                if (this.hhr >= 0) {
                    clearTimeout(this.hhr);
                    this.hhr = -1
                }
                return true
            }
        }
        if (this.iac() && this.vib()) {
            if (this.parent.xcw) {
                for (l = 0, n = this.parent.xcw.jkr.length; l < n; l++) {
                    var p = this.parent.xcw.jkr[l];
                    if (p.raz == e || p.raz == e) {
                        if (this.hhr >= 0) {
                            clearTimeout(this.hhr);
                            this.hhr = -1
                        }
                        return false
                    }
                }
            }
        }
        return false
    };
    this.vrb = function() {
        var g = this.zgu.ofm();
        for (var f = 0, d = g.length; f < d; f++) {
            var e = g[f];
            if (e.sea() == true) {
                e.phd(false, true, false);
                return true
            }
        }
        return false
    };
    this.pqp = function(e, m) {
        var k = this.zgu.ofm(),
            l = e - this.x,
            j = m - this.y;
        this.dnm = this.fsa;
        this.fsa = null;
        for (var g = 0, d = k.length; g < d; g++) {
            var f = k[g];
            if (l >= f.x && l <= f.x + f.width && j >= f.y && j <= f.y + f.height && f.iac() && f.vib() && !f.lmr()) {
                this.fsa = f
            }
        }
        if (this.fsa) {
            this.glm(true)
        } else {
            this.glm(false)
        }
        return true
    };
    this.nth = function(e, f, g, j, m, d, n) {
        this.xxn = g.width;
        var l = new drx(this.eqn, this.mvw, this.xxn, this.xxn);
        var k = new xoi();
        k.brv(l, this.context2D);
        k.parent = this;
        k.xcv = j;
        k.gzz = f;
        k.rze(d, n);
        k.ylm(this.parent.bnl.zvt.ofg);
        k.ioq(this.parent.style.zvt.rns.hek);
        k.ztt(g);
        if (m != null) {
            k.tcc = m.zxv;
            k.inp = m.raz;
            k.rrw = m.value
        }
        this.zgu.oro(e, k, ["buttons", "setting"]);
        this.eqn += this.xxn + this.yat;
        this.rap = this.eqn
    };
    this.tlz = function(l, k, j, g, e) {
        this.xxn = j.width;
        var f = new drx(this.eqn, this.mvw, this.xxn, this.xxn);
        var d = new xoi();
        d.brv(f, this.context2D);
        d.parent = this;
        d.xcv = g;
        d.gzz = k;
        d.ylm(this.parent.bnl.zvt.ofg);
        d.ioq(this.parent.style.zvt.rns.hek);
        d.ztt(j);
        if (e != null) {
            d.tcc = e.zxv;
            d.inp = e.raz;
            d.rrw = e.value
        }
        this.zgu.oro(l, d, ["buttons", "system"]);
        this.eqn += this.xxn + this.yat;
        this.rap = this.eqn
    };
    this.zyl = function() {
        var f = this.zgu.ofm();
        this.rap += 2 * this.ttj;
        this.ycc = Math.round((this.width - this.rap) / 2);
        for (var e = 0, d = f.length; e < d; e++) {
            f[e].x += this.ycc + this.ttj
        }
    };
    this.alb = function() {
        return this.rap
    };
    this.jug = function(d) {
        this.nab = d
    };
    this.vib = function() {
        return this.nab
    };
    this.bfs = function(g) {
        var f = this.zgu.ofm();
        for (var e = 0, d = f.length; e < d; e++) {
            f[e].jug(g)
        }
        this.parent.yud()
    };
    this.pnb = function(g) {
        var f = this.zgu.kew("system");
        for (var e = 0, d = f.length; e < d; e++) {
            f[e].jug(g)
        }
        this.parent.yud()
    };
    this.ucx = function(g) {
        var f = this.zgu.kew("setting");
        for (var e = 0, d = f.length; e < d; e++) {
            f[e].jug(g)
        }
        this.parent.yud()
    };
    this.qvt = function() {
        if (this.iac()) {
            return
        }
        if (this.ibu) {
            if (this.qkx === a) {
                this.ylt = this.qvt
            } else {
                this.ylt = null
            }
        } else {
            this.ylt = null;
            this.glc();
            this.sqz()
        }
    };
    this.zpn = function(d) {
        if (this.parent.coq) {
            this.parent.coq()
        }
        this.stop();
        this.ibu = false;
        this.ylt = null;
        this.yaf(true, d);
        if (this.hhr >= 0) {
            clearTimeout(this.hhr);
            this.hhr = -1
        }
        this.hhr = setTimeout(this.nyg, this.fab)
    };
    this.nyg = function() {
        if (b.iac()) {
            b.parent.hly.jsl("panel_out");
            b.parent.hly.dvl("panel_out");
            b.pwz()
        }
    };
    this.pwz = function() {
        if (!this.iac()) {
            return
        }
        if (this.ibu) {
            if (this.qkx === c) {
                this.ylt = this.pwz
            } else {
                this.ylt = null
            }
        } else {
            this.ylt = null;
            this.ypx();
            this.sqz();
            if (this.hhr >= 0) {
                clearTimeout(this.hhr);
                this.hhr = -1
            }
        }
    };
    this.vli = function(d) {
        if (this.parent.pgu) {
            this.parent.pgu()
        }
        this.stop();
        this.ibu = false;
        this.ylt = null;
        this.yaf(false, d);
        if (typeof this.evy === "function") {
            this.evy();
            this.evy = null
        }
    };
    this.glc = function() {
        this.yaf(true);
        this.ibu = true;
        this.nab = false;
        this.qkx = c;
        this.qym = Math.floor(this.height / this.drr);
        this.bwz = 1;
        this.iff = Math.floor(this.height / this.drr)
    };
    this.ypx = function() {
        if (this.parent.pgu) {
            this.parent.pgu()
        }
        this.ibu = true;
        this.nab = false;
        this.qkx = a;
        this.qym = -Math.floor(this.height / this.drr);
        this.bwz = 1;
        this.iff = this.height
    };
    this.sqz = function() {
        this.iyw = setInterval(this.yxh, this.tbf)
    };
    this.mbs = function() {
        if (b.qkx == c) {
            if (b.parent.coq) {
                b.parent.coq()
            }
            if (b.hhr >= 0) {
                clearTimeout(b.hhr);
                b.hhr = -1
            }
            b.hhr = setTimeout(b.nyg, b.fab)
        }
        clearInterval(b.iyw);
        if (b.ylt) {
            b.ylt()
        }
    };
    this.stop = function() {
        clearTimeout(this.hhr);
        clearInterval(this.iyw);
        this.hhr = -1
    };
    this.yxh = function() {
        if (!b.jtk()) {
            b.mbs()
        }
    };
    this.jtk = function() {
        if (b.bwz < b.drr) {
            b.parent.yud(b.x, b.y, b.width, b.height);
            b.iff += b.qym;
            b.bwz++;
            return true
        } else {
            b.ibu = false;
            b.nab = true;
            if (b.qkx == a) {
                b.yaf(false);
                if (typeof b.evy === "function") {
                    b.evy();
                    b.evy = null
                }
            }
            b.parent.yud(b.x, b.y, b.width, b.height);
            return false
        }
    };
    this.yud = function(n, m, o, g) {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        var p = this.context2D,
            e = (n != null && m != null && o != null && g != null),
            l = this.zgu.ofm(),
            k = 0,
            d = 0;
        p.save();
        if (e) {
            p.beginPath();
            p.rect(n, m, o, g);
            p.closePath();
            p.clip()
        }
        p.clearRect(0, 0, this.width, this.height);
        this.tkn(p);
        for (var f = 0, j = l.length; f < j; f++) {
            l[f].yud()
        }
        if (this.fsa && this.xdu != "") {
            k = this.fsa.x - this.yat - this.xxn;
            d = 3 * this.xxn + 2 * this.yat;
            if (k + d >= this.ycc + this.rap) {
                k = this.ycc + this.rap - d;
                tbl.vpf.ptw(p, this.xdu, this.ezn, k, this.fsa.y + this.fsa.height, d, this.yff, this.mya, this.yff, this.jgr, this.yat)
            } else {
                tbl.vpf.haz(p, this.xdu, this.ezn, k, this.fsa.y + this.fsa.height, d, this.yff, this.mya, this.yff, this.jgr)
            }
        }
        p.restore();
        if (this.ibu) {
            if (this.kee && this.srn && this.iff > 0) {
                this.kee.drawImage(this.srn, 0, this.height - this.iff, this.width, this.iff, this.x, this.y, this.width, this.iff)
            }
        } else {
            if (e) {
                this.parent.yud(this.x + n, this.y + m, o, g)
            } else {
                if (this.kee && this.srn) {
                    this.kee.drawImage(this.srn, this.x, this.y)
                }
            }
        }
    };
    this.tkn = function(d) {
        var f = this.hpk,
            e = f / 2;
        d.save();
        d.strokeStyle = this.ccj;
        d.fillStyle = this.kip;
        d.lineWidth = f;
        d.beginPath();
        d.moveTo(e, 0);
        d.arcTo(e, this.obg, this.obg + e, this.obg, this.obg);
        d.arcTo(this.ycc, this.obg, this.ycc, this.height - this.vqx - e, this.mof);
        d.arcTo(this.ycc, this.height - e, this.ycc + this.vqx, this.height - e, this.vqx);
        d.lineTo(this.ycc + this.rap - this.vqx, this.height - e);
        d.arcTo(this.ycc + this.rap, this.height - e, this.ycc + this.rap, this.height - this.vqx - e, this.vqx);
        d.arcTo(this.ycc + this.rap, this.obg, this.width - this.obg - e, this.obg, this.mof);
        d.arcTo(this.width - e, this.obg, this.width - e, 0, this.obg);
        d.stroke();
        d.closePath();
        d.globalAlpha = this.cwf;
        d.fill();
        d.restore()
    };
    this.glm = function(d) {
        if (this.fsa && this.fsa != this.dnm) {
            if (d && this.fsa) {
                this.xdu = this.parent.ipx(this.fsa.gzz);
                if (!tbl.vpf.bgr) {
                    this.xdu = (this.fsa.rrw) ? this.xdu + " [" + this.fsa.rrw + "]" : this.xdu
                }
            } else {
                this.xdu = ""
            }
            this.parent.yud(this.x, this.y, this.width, this.height)
        } else {
            if (d && (this.fsa && this.xdu != this.parent.ipx(this.fsa.gzz))) {
                this.xdu = this.parent.ipx(this.fsa.gzz);
                if (!tbl.vpf.bgr) {
                    this.xdu = (this.fsa.rrw) ? this.xdu + " [" + this.fsa.rrw + "]" : this.xdu
                }
            }
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.evy = null
}
rkv.prototype = new ryi;

function vyr() {
    var a = this;
    this.fnd = "LOADING ... ";
    this.nij = "ERROR";
    this.icb = null;
    this.bbm = null;
    this.wda = false;
    this.buc = false;
    this.qps = true;
    this.tcg = null;
    this.frh = null;
    this.iyw = 0;
    this.lxm = 0;
    this.isf = false;
    this.amc = false;
    this.ugo = 0;
    this.zxc = 60;
    this.etf = 0;
    this.ieg = null;
    this.xdu = null;
    this.fmg = null;
    this.nas = true;
    this.mya = null;
    this.jgr = "bold";
    this.lbf = "black";
    this.vbw = "rgb(0,100,10)";
    this.fsh = "rgb(80,255,100)";
    this.dsu = "rgb(120,120,120)";
    this.nae = "red";
    this.zrq = "white";
    this.yff = 14;
    this.mny = 18;
    this.uor;
    this.fxv;
    this.kep;
    this.fhp;
    this.ttj = 5;
    this.yat = 12;
    this.mvw = 5;
    this.rfc = 2;
    this.pse = 7;
    this.ybc = new drx();
    this.lgk = 0;
    this.omy = 0;
    this.gkw = 0;
    this.fcl = new drx();
    this.eih = new drx();
    this.lzi = new drx();
    this.qlk = new drx();
    this.brv = function(b, d, c) {
        vyr.prototype.brv.call(this, b, d, c);
        if (tbl.xyy.value45 == tbl.tnv.nhj) {
            this.tcg = document.createElement("canvas");
            this.frh = this.tcg.getContext("2d")
        }
    };
    this.ylm = function(b) {
        try {
            this.yff = b.fontSize;
            this.mny = b.tee;
            this.ttj = b.oso;
            this.yat = b.myu;
            this.mvw = b.ars;
            this.rfc = b.hww;
            this.pse = b.gkj;
            this.uor = b.oor;
            this.fxv = b.khu;
            this.kep = b.ixj;
            this.fhp = b.dgg;
            this.ybc = b.qaw.exo;
            this.lgk = b.qaw.x;
            this.omy = b.qaw.noa;
            this.gkw = b.qaw.bqd;
            this.fcl = b.gqe;
            this.eih = b.sot.gqe;
            this.lzi = b.sot.khu;
            this.qlk = b.sot.ote;
            if (tbl.xyy.value45 == tbl.tnv.nhj) {
                this.tcg.width = Math.round(this.ybc.width);
                this.tcg.height = Math.round(this.ybc.height)
            }
        } catch (c) {
            console.error(c)
        }
    };
    this.ioq = function(b) {
        try {
            this.mya = b.font;
            this.jgr = b.ghh;
            this.lbf = b.backgroundColor;
            this.vbw = b.iyj;
            this.fsh = b.mew;
            this.dsu = b.mxu;
            this.nae = b.jeb;
            this.zrq = b.bwj;
            this.bbm = b.bbm
        } catch (c) {
            console.error(c)
        }
    };
    this.yud = function(b) {
        if (b && b >= 0) {
            this.lxm = b
        }
        if (!this.iac()) {
            return
        }
        if (tbl.xyy.value45 == tbl.tnv.jok) {
            this.zbq()
        } else {
            if (tbl.xyy.value45 == tbl.tnv.xjq || tbl.xyy.value45 == tbl.tnv.nhj) {
                if (!this.icb && this.xdu && this.fmg) {
                    this.lle()
                } else {
                    if (tbl.xyy.value45 == tbl.tnv.xjq) {
                        this.wxd()
                    } else {
                        if (tbl.xyy.value45 == tbl.tnv.nhj) {
                            if (b === 100) {
                                this.cym()
                            }
                            this.chl()
                        }
                    }
                }
            }
        }
    };
    this.zbq = function() {
        if (this.wda) {
            var c = this.context2D,
                b = this.kep.width / 100;
            c.save();
            if (this.buc === true) {
                c.clearRect(0, 0, this.width, this.height)
            }
            c.drawImage(this.parent.hly.lrj("splash"), 0, 0, this.width, this.height);
            if (this.bbm) {
                tbl.vpf.szx(c, this.ttj, this.ttj, this.width - 2 * this.ttj, this.height - 2 * this.ttj, this.bbm, 0.3)
            }
            if (this.icb != null && this.icb != "") {
                this.jdt(this.fhp, true)
            } else {
                if (this.xdu != null && this.xdu != "") {
                    this.sjv(this.fhp, true)
                } else {
                    if (this.qps === true) {
                        if (this.buc === false) {
                            tbl.vpf.szx(c, this.uor.x, this.uor.y, this.uor.width, this.uor.height, this.lbf, 0.5)
                        }
                        var e = this.fnd + " " + this.lxm + "%";
                        var d = c.createLinearGradient(this.kep.x, this.kep.y, this.kep.x + this.kep.width, this.kep.y);
                        d.addColorStop(0, this.vbw);
                        d.addColorStop(1, this.fsh);
                        tbl.vpf.haz(c, e, this.zrq, this.fxv.x, this.fxv.y, this.fxv.width, this.fxv.height, this.mya, this.yff, this.jgr);
                        tbl.vpf.zso(c, this.kep.x - this.rfc, this.kep.y, this.kep.width + 2 * this.rfc, this.kep.height, this.rfc, this.lbf, 0.8, this.dsu, this.rfc, 0.8);
                        tbl.vpf.szx(c, this.kep.x, this.kep.y + this.rfc / 2, b * this.lxm, this.kep.height - this.rfc, d, 1)
                    }
                }
            }
            c.restore()
        }
    };
    this.wxd = function() {
        if (this.wda) {
            var c = this.context2D,
                b = this.kep.width / 100;
            c.save();
            if (this.buc === true) {
                c.clearRect(0, 0, this.width, this.height)
            }
            if (this.isf === true && this.ieg) {
                c.beginPath();
                c.rect(this.ieg.x, this.ieg.y, this.ieg.width, this.ieg.height);
                c.closePath();
                c.clip()
            }
            c.drawImage(this.parent.hly.lrj("splash"), this.fcl.x, this.fcl.y, this.fcl.width, this.fcl.height);
            if (this.icb != null && this.icb != "") {
                this.jdt(this.fhp, false)
            } else {
                if (this.xdu != null && this.xdu != "") {
                    this.sjv(this.fhp, false)
                } else {
                    if (this.qps === true) {
                        var e = this.fnd + " " + this.lxm + "%";
                        var d = c.createLinearGradient(this.kep.x, this.kep.y, this.kep.x + this.kep.width, this.kep.y);
                        d.addColorStop(0, this.vbw);
                        d.addColorStop(1, this.fsh);
                        var f = c.createLinearGradient(this.kep.x + (b * this.lxm) - this.pse, this.kep.y, this.kep.x + (b * this.lxm), this.kep.y);
                        f.addColorStop(0, "rgb(100,100,100)");
                        f.addColorStop(1, "rgb(255,255,255)");
                        tbl.vpf.haz(c, e, this.zrq, this.fxv.x, this.fxv.y, this.fxv.width, this.fxv.height, this.mya, this.yff, this.jgr);
                        tbl.vpf.szx(c, this.kep.x, this.kep.y, this.kep.width, this.kep.height, "rgb(12,15,25)", 1);
                        if (this.lxm > 0 && this.lxm < 100) {
                            tbl.vpf.zso(c, this.kep.x + (b * this.lxm) - this.pse + this.rfc / 2, this.kep.y - this.rfc, this.pse, this.kep.height + 2 * this.rfc, this.rfc, f, 0.5)
                        }
                        tbl.vpf.szx(c, this.kep.x, this.kep.y, b * this.lxm, this.kep.height, d, 1)
                    }
                }
            }
            c.restore()
        }
    };
    this.chl = function() {
        if (this.wda) {
            var c = this.context2D,
                b = this.kep.width / 100;
            c.save();
            if (this.buc === true) {
                c.clearRect(0, 0, this.width, this.height)
            }
            c.drawImage(this.parent.hly.lrj("splash"), this.fcl.x, this.fcl.y, this.fcl.width, this.fcl.height);
            if (this.amc) {
                c.drawImage(this.tcg, this.ybc.x, this.ybc.y)
            }
            if (this.icb != null && this.icb != "") {
                this.jdt(this.fhp, false)
            } else {
                if (this.xdu != null && this.xdu != "") {
                    this.sjv(this.fhp, false)
                } else {
                    if (this.qps === true) {
                        var e = this.fnd + " " + this.lxm + "%";
                        var d = c.createLinearGradient(this.kep.x, this.kep.y, this.kep.x + this.kep.width, this.kep.y);
                        d.addColorStop(0, this.vbw);
                        d.addColorStop(1, this.fsh);
                        var f = c.createLinearGradient(this.kep.x + (b * this.lxm) - this.pse, this.kep.y, this.kep.x + (b * this.lxm), this.kep.y);
                        f.addColorStop(0, "rgb(100,100,100)");
                        f.addColorStop(1, "rgb(255,255,255)");
                        tbl.vpf.haz(c, e, this.zrq, this.fxv.x, this.fxv.y, this.fxv.width, this.fxv.height, this.mya, this.yff, this.jgr);
                        tbl.vpf.szx(c, this.kep.x, this.kep.y, this.kep.width, this.kep.height, "rgb(12,15,25)", 1);
                        if (this.lxm > 0 && this.lxm < 100) {
                            tbl.vpf.zso(c, this.kep.x + (b * this.lxm) - this.pse + this.rfc / 2, this.kep.y - this.rfc, this.pse, this.kep.height + 2 * this.rfc, this.rfc, f, 0.5)
                        }
                        tbl.vpf.szx(c, this.kep.x, this.kep.y, b * this.lxm, this.kep.height, d, 1)
                    }
                }
            }
            c.restore()
        }
    };
    this.lle = function() {
        if (this.wda) {
            var b = this.context2D;
            b.save();
            b.clearRect(0, 0, this.width, this.height);
            if (this.fmg) {
                b.drawImage(this.fmg, this.eih.x, this.eih.y, this.eih.width, this.eih.height)
            }
            if (this.xdu != null && this.xdu != "") {
                tbl.vpf.iaj(b, this.xdu, this.zrq, this.lzi.x, this.lzi.y, this.lzi.width, this.lzi.height, this.mya, this.yff, this.jgr, "center", true)
            }
            if (this.nas === true) {
                tbl.vpf.iaj(b, "[ " + this.parent.language.tnq + " ]", this.zrq, this.qlk.x, this.qlk.y, this.qlk.width, this.qlk.height, this.mya, 2 * this.yff, this.jgr, "center", true)
            }
            b.restore()
        }
    };
    this.jdt = function(c, m) {
        var l = this.context2D,
            o = [],
            d = this.yff,
            k = this.icb,
            f = "",
            t = 0,
            v = 0,
            s = 0,
            u = 0,
            n = "center",
            e = Math.round(d * 1.5),
            j = Math.round(this.mny * 1.5),
            b = 0,
            w = 1,
            q = 0,
            g = 0;
        l.save();
        l.font = this.jgr + " " + d + "px " + this.mya;
        for (var p = s; p < k.length; p++) {
            f += k.charAt(p);
            u = l.measureText(f).width;
            if (k.charAt(p) == " ") {
                t = p
            }
            if (p == k.length - 1) {
                o[v] = k.substring(s, k.length)
            } else {
                if (k.charAt(p) == "|") {
                    o[v] = k.substring(s, p);
                    v++;
                    s = p + 1;
                    f = k.substring(p + 1, p + 1)
                } else {
                    if (u >= c.width - 2 * this.yat) {
                        o[v] = k.substring(s, t);
                        v++;
                        s = t + 1;
                        f = k.substring(t + 1, p)
                    }
                }
            }
        }
        b = v * (e);
        if (b > (c.height - j - this.mvw)) {
            w = (c.height - j - this.mvw) / b;
            d = Math.round(d * w) - 1;
            l.font = this.jgr + " " + d + "px " + this.mya;
            e = Math.round(d * 1.5);
            b = v * (e)
        }
        if (d < 10) {
            w = 10 / d;
            d = Math.round(d * w);
            l.font = this.jgr + " " + d + "px " + this.mya;
            e = Math.round(d * 1.5);
            b = v * (e);
            g = (c.height - (j + b + this.mvw));
            c.height = j + b + this.mvw;
            c.y += g
        }
        l.textAlign = n;
        l.lineJoin = "round";
        l.lineCap = "round";
        if (m && m === true) {
            tbl.vpf.szx(l, c.x, c.y, c.width, c.height, this.lbf, 0.7)
        }
        if (this.nij != null) {
            l.font = this.jgr + " " + this.mny + "px " + this.mya;
            l.fillStyle = this.nae;
            l.textBaseline = "bottom";
            l.fillText(this.nij, c.x + c.width / 2, c.y + this.mny + this.mvw)
        }
        l.font = this.jgr + " " + d + "px " + this.mya;
        l.fillStyle = this.zrq;
        if (o.length == 1) {
            q = j + b + e;
            l.fillText(o[0], (c.x + c.width / 2), c.y + q)
        } else {
            for (var p = 0, r = o.length; p < r; p++) {
                q = j + (b + e) / (r + 1) * (p + 1);
                if (n == "start") {
                    l.fillText(o[p], (c.x + this.yat), c.y + q)
                } else {
                    l.fillText(o[p], (c.x + c.width / 2), c.y + q)
                }
            }
        }
        l.restore()
    };
    this.sjv = function(c, d) {
        var b = this.context2D;
        b.save();
        if (d && d === true) {
            tbl.vpf.szx(b, c.x, c.y, c.width, c.height, this.lbf, 0.7)
        }
        if (this.nas === true) {
            tbl.vpf.iaj(b, this.xdu, this.zrq, c.x, c.y, c.width, c.height, this.mya, this.yff, this.jgr, "center", true)
        }
        b.restore()
    };
    this.start = function() {
        this.isf = true;
        this.ugo = new Date().getTime();
        this.ieg = new drx(this.ybc.x, this.ybc.y, this.ybc.width, this.ybc.height);
        this.etf = 0;
        this.yxh()
    };
    this.stop = function() {
        this.isf = false;
        this.ieg = null;
        clearTimeout(this.iyw)
    };
    this.yxh = function() {
        var b = 0,
            c = new Date().getTime();
        if (a.etf < 6) {
            a.ieg.x -= a.lgk;
            a.ieg.width += 2 * a.lgk
        } else {
            if (a.etf < 12) {
                a.ieg.y -= a.gkw;
                a.ieg.height += a.omy
            } else {
                a.stop();
                if (typeof a.iwj === "function") {
                    a.iwj()
                }
            }
        }
        a.yud();
        a.etf++;
        if (a.etf <= 12) {
            b = (a.etf * a.zxc - (c - a.ugo));
            a.iyw = setTimeout(a.yxh, b)
        }
    };
    this.xuu = function() {
        this.amc = true;
        this.ugo = new Date().getTime();
        this.etf = 0;
        this.zxc = 89;
        this.dzi()
    };
    this.cym = function() {
        this.amc = false;
        clearTimeout(this.iyw)
    };
    this.dzi = function() {
        var d = 0,
            e = new Date().getTime(),
            b = a.frh,
            c = a.parent.hly.lrj("splashanim");
        if (a.amc === true) {
            a.etf++;
            b.save();
            b.clearRect(0, 0, c.width, c.height);
            b.translate(c.width / 2, c.height / 2);
            b.rotate(Math.PI / 6 * (a.etf % 12));
            b.translate(-c.width / 2, -c.height / 2);
            b.drawImage(c, 0, 0);
            b.restore();
            a.yud();
            d = (a.etf * a.zxc - (e - a.ugo));
            a.iyw = setTimeout(a.dzi, d)
        }
    };
    this.bgk = function() {
        return (this.isf || this.amc)
    };
    this.jge = function(c, b) {
        this.xdu = c;
        this.fmg = b;
        this.isf = true;
        this.nas = true;
        this.iyw = setInterval(this.vcf, 800);
        this.yud()
    };
    this.vcf = function() {
        a.nas = !a.nas;
        a.yud()
    };
    this.iwj = null
}
vyr.prototype = new ryi;
tbl.xyy = new Settings();
tbl.vpf = new ibp();

function tru() {
    this.fjr = "";
    this.vrk = "";
    this.koi = null;
    this.canvas = null;
    this.context2D = null;
    this.vbe = null;
    this.rbd = null;
    this.xhk = null;
    this.oal = null;
    this.ruq = null;
    this.frx = {};
    this.offsetLeft = 0;
    this.offsetTop = 0;
    this.qga = 0;
    this.xwq = 0;
    this.xqx = false;
    this.width = 0;
    this.height = 0;
    this.bdl = 0;
    this.bue = 0;
    this.vce = 1;
    this.yhn = 1;
    this.xow = false;
    this.jcg = false;
    this.style = null;
    this.bnl = null;
    this.jpr = -1;
    this.grs = false;
    this.njh = false;
    this.tdf = false;
    this.wzg = false;
    this.kpy = false;
    this.erl = false;
    this.pco = false;
    this.lno = "";
    this.ufi = "";
    this.iji = "";
    this.vhb = "";
    this.zeb = "";
    this.enw = "";
    this.mag = "1_1_60";
    try {
        if (tbl.xyy.value19) {
            this.lno = sessionStorage.sessionValue2;
            this.ufi = sessionStorage.sessionValue2
        } else {
            var c = a("hash");
            if (c != "") {
                sessionStorage.sessionValue2 = c
            }
            if (sessionStorage.sessionValue2 != "freeplay") {
                this.iji = sessionStorage.sessionValue2
            } else {
                this.lno = sessionStorage.sessionValue2;
                this.ufi = sessionStorage.sessionValue2;
                if (a("w") != "") {
                    this.iji = sessionStorage.sessionValue2
                } else {
                    this.iji = ""
                }
            }
        }
    } catch (b) {}
    this.agu = null;
    this.boo = null;
    this.kdw = false;
    this.gmm = null;
    this.hly = null;
    this.zwb = null;
    this.lcu = true;
    this.tvo = [0, 0.5, 1];
    try {
        if (sessionStorage.sessionValue6) {
            if (sessionStorage.sessionValue6 == "false") {
                this.cjs = 0
            } else {
                if (sessionStorage.sessionValue6 == "true") {
                    this.cjs = this.tvo.length - 1
                } else {
                    this.cjs = Number(sessionStorage.sessionValue6)
                }
            }
        } else {
            this.cjs = this.tvo.length - 1
        }
    } catch (b) {
        this.cjs = 0
    }
    this.dwe = 0;
    this.language = new nyc();
    this.dkb = 0;
    this.gvq = 1;
    this.rdt = this.gvq;
    this.nns = [tbl.fax.krg, tbl.fax.srp, tbl.fax.cwp];
    this.gyd = (tbl.vpf.mkh()) ? 0 : this.nns.length - 1;
    try {
        if (localStorage.localValue1) {
            this.gyd = Number(localStorage.localValue1);
            if (!tbl.vpf.mkh() && this.nns[this.gyd] === tbl.fax.krg) {
                this.gyd = this.nns.length - 1
            }
        }
    } catch (b) {}
    this.nrx = false;
    this.wkz = "";
    this.ccv = "";
    this.jix = 0;
    this.state = 0;
    this.tad = false;
    this.bml = 5000;
    this.hyn = 0;
    this.tyz = 0;
    this.ugj = 0;
    this.dau = 0;
    this.vjm = false;
    this.ced = false;
    this.xfp = false;
    this.xcw = null;
    this.gkx = 0;
    this.tnk = 0;
    this.gmt = 0;
    this.sfm = -1;
    this.qsn = -1;
    this.zfi = 0;
    this.baa = null;
    this.nfc = [];
    this.xmu = [];
    this.bgp = false;
    this.owt = 0;
    this.jow = 0;
    this.fhx = false;

    function a(e) {
        e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var d = "[\\?&]" + e + "=([^&#]*)";
        var g = new RegExp(d);
        var f = g.exec(window.location.href);
        if (f == null) {
            return ""
        } else {
            return f[1]
        }
    }
    this.brv = function(d) {
        this.hch({
            type: "onAppFrameReady",
            sender: this.wkz
        });
        tbl.vpf.weq();
        tbl.vpf.ipe();
        this.wqd();
        if (!this.vjm) {
            this.vxn()
        }
        this.yct(this.iob(d.bnl));
        this.btg();
        this.uxf();
        this.suj();
        this.zea();
        this.bji();
        this.egh();
        this.uhm();
        this.jzp();
        this.gsw();
        this.knu();
        return this
    };
    this.suj = function() {};
    this.jzp = function() {
        try {
            if (tbl.xyy.value64 && !this.xfp) {
                this.gmm = new gah();
                this.gmm.connect("ws://127.0.0.1:2001/vltclient")
            }
        } catch (d) {
            console.error("Can not connect to terminal!")
        }
    };
    this.wqd = function() {
        try {
            var j = a("exit");
            if (j != "") {
                sessionStorage.sessionValue5 = j
            }
            if ((!sessionStorage.sessionValue5 || sessionStorage.sessionValue5 == "null") && tbl.xyy.value8) {
                sessionStorage.sessionValue5 = tbl.xyy.value8
            }
            var p = a("curr");
            if (p != "") {
                sessionStorage.sessionValue8 = p
            }
            if (sessionStorage.sessionValue8 && sessionStorage.sessionValue8 != "") {
                this.enw = sessionStorage.sessionValue8;
                if (tbl.xyy.value72) {
                    var n = tbl.xyy.value72[this.enw];
                    if (tbl.xyy.value21.e === true && n) {
                        tbl.xyy.value21.s = n.s;
                        tbl.xyy.value21.m = n.m;
                        tbl.xyy.value21.ts = n.ts;
                        tbl.xyy.value21.cs = n.cs
                    }
                    if (tbl.xyy.value76 && tbl.xyy.value76.f === true && n) {
                        tbl.xyy.value76.s = n.s;
                        tbl.xyy.value76.m = n.m;
                        tbl.xyy.value76.ts = n.ts;
                        tbl.xyy.value76.cs = n.cs
                    }
                }
            }
            if (this.qcu()) {
                sessionStorage.sessionValue7 = ""
            }
            var d = a("w");
            if (d != "") {
                sessionStorage.sessionValue7 = d
            }
            if (sessionStorage.sessionValue7 && sessionStorage.sessionValue7 != "") {
                this.zeb = sessionStorage.sessionValue7
            }
            var r = a("fullscreen");
            if (r != "") {
                sessionStorage.sessionValue14 = r
            }
            if (sessionStorage.sessionValue14 != "true" && sessionStorage.sessionValue14 != "false") {
                sessionStorage.sessionValue14 = (tbl.vpf.bgr) ? tbl.xyy.value51.m : tbl.xyy.value51.d
            }
            var g = a("sessionTime");
            if (g != "") {
                sessionStorage.sessionValue15 = g
            }
            if (sessionStorage.sessionValue15 != "true" && sessionStorage.sessionValue15 != "false") {
                sessionStorage.sessionValue15 = tbl.xyy.value11
            }
            var t = a("realityCheckURL");
            if (t != "") {
                sessionStorage.sessionValue16 = t
            }
            var o = a("realityCheckTime");
            if (o != "") {
                sessionStorage.sessionValue17 = o
            }
            if (tbl.xyy.value39 > 0) {
                sessionStorage.sessionValue17 = tbl.xyy.value39
            }
            var s = a("loggedInTime");
            if (sessionStorage.sessionValue18 != null) {
                var f = sessionStorage.sessionValue18.split(";");
                if (f.length == 2) {
                    this.owt = Number(f[0]);
                    this.jow = Number(f[1])
                }
            }
            if (s != "") {
                if (Number(s) != this.jow) {
                    this.jow = Number(s);
                    this.owt = new Date().getTime() - (this.jow * 1000);
                    sessionStorage.sessionValue18 = this.owt + ";" + this.jow
                }
            }
            if (tbl.xyy.value86 === true) {
                var q = a("selfTestURL");
                if (q != "") {
                    sessionStorage.sessionValue19 = q
                }
                var m = a("limitsURL");
                if (m != "") {
                    sessionStorage.sessionValue20 = m
                }
                var l = a("pauseURL");
                if (l != "") {
                    sessionStorage.sessionValue21 = l
                }
            }
        } catch (k) {
            console.error(k.lgc)
        }
    };
    this.uhm = function() {
        if (!(tbl.vpf.lhl == tbl.os.ijc && tbl.vpf.ddh == tbl.hxu.cwq)) {
            document.ontouchstart = tbl.zbv.gox
        }
        if (tbl.vpf.ddh != tbl.hxu.qsl && tbl.vpf.ddh != tbl.hxu.cwq) {
            document.ontouchmove = tbl.zbv.zio;
            document.ontouchend = tbl.zbv.jqy
        }
        if (!tbl.vpf.rri) {
            document.onmousedown = tbl.zbv.hkv;
            document.onmouseup = tbl.zbv.zqi;
            document.onmousemove = tbl.zbv.nef
        }
        document.onkeydown = tbl.zbv.wpr;
        document.onkeyup = tbl.zbv.swa;
        document.oncontextmenu = tbl.zbv.mez;
        this.erl = this.ykt();
        if (tbl.vpf.ifn() === false && tbl.vpf.lhl === tbl.os.ufm && tbl.vpf.kij() === true && screen.width <= 414 && this.rde()) {
            this.zfi = setInterval(this.mem, 1000)
        }
    };
    this.gox = function(d) {
        tbl.zbv.iti();
        tbl.zbv.vtw();
        tbl.zbv.cmi(d)
    };
    this.jqy = function(d) {
        if (tbl.zbv.grs === true) {
            if (tbl.zbv.erl) {
                tbl.zbv.clz()
            } else {
                tbl.zbv.arh(d)
            }
        } else {
            if (tbl.zbv.ykt()) {
                tbl.zbv.kov()
            }
        }
    };
    this.zio = function(d) {
        tbl.zbv.uyn(d)
    };
    this.hkv = function(d) {
        window.focus();
        if (tbl.zbv.grs === true) {
            tbl.zbv.iti();
            tbl.zbv.vtw();
            tbl.zbv.cmi(d)
        } else {
            if (tbl.zbv.ykt()) {
                tbl.zbv.kov()
            }
        }
    };
    this.zqi = function(d) {
        tbl.zbv.arh(d)
    };
    this.nef = function(d) {};
    this.wpr = function(d) {
        if ((d.keyCode == 122 && (tbl.vpf.lhl == tbl.os.bic || tbl.vpf.lhl == tbl.os.xhe)) || (d.keyCode == 70 && d.ctrlKey && tbl.vpf.lhl == tbl.os.rvi)) {
            return
        }
        tbl.zbv.iti();
        tbl.zbv.vtw();
        tbl.zbv.usa(d)
    };
    this.swa = function(d) {
        tbl.zbv.vrb(d)
    };
    this.mez = function() {
        return false
    };
    this.cmi = function(d) {};
    this.arh = function(d) {};
    this.usa = function(d) {};
    this.vrb = function(d) {};
    this.uyn = function(d) {
        if (d.preventDefault) {
            d.preventDefault()
        }
        if (d.stopPropagation) {
            d.stopPropagation()
        }
        return
    };
    this.hch = function(d) {};
    this.ysn = function() {
        var f = tbl.zbv.zwb.aar("topb"),
            e = tbl.zbv.zwb.aar("settings"),
            d = tbl.zbv.zwb.aar("topi"),
            g = tbl.zbv.zwb.aar("gameb");
        if (tbl.vpf.ddh == tbl.hxu.qsl || tbl.vpf.ddh == tbl.hxu.vaw) {
            tbl.zbv.jcg = (window.innerWidth == window.outerWidth)
        } else {
            if (tbl.vpf.ddh == tbl.hxu.amd || tbl.vpf.ddh == tbl.hxu.zly) {
                tbl.zbv.jcg = (window.innerHeight >= window.outerHeight)
            } else {
                if (tbl.vpf.ddh == tbl.hxu.kzj) {
                    tbl.zbv.jcg = (document.fullscreenElement) ? true : false
                } else {
                    if (tbl.vpf.bgr) {
                        if (tbl.vpf.ddh == tbl.hxu.ecu || tbl.vpf.ddh == tbl.hxu.azr || tbl.vpf.ddh == tbl.hxu.dia) {
                            tbl.zbv.jcg = (document.webkitFullscreenElement) ? true : false
                        } else {
                            if (tbl.vpf.ddh == tbl.hxu.cwq) {
                                tbl.zbv.jcg = (document.mozFullScreenElement) ? true : false
                            }
                        }
                    }
                }
            }
        }
        if (d) {
            d.tgx("fullscreen", tbl.zbv.jcg)
        }
        if (f) {
            f.zgu.nwi("fullscreen", "#tgx", [(tbl.zbv.jcg) ? 1 : 0])
        }
        if (e) {
            e.zgu.nwi("fullscreen", "#tgx", [(tbl.zbv.jcg) ? 1 : 0])
        }
        if (g) {
            g.zgu.nwi("fullscreen", "#tgx", [(tbl.zbv.jcg) ? 1 : 0])
        }
        tbl.zbv.fca();
        tbl.zbv.aib();
        tbl.zbv.xfy();
        if (tbl.vpf.kij() === true && tbl.vpf.ifn() === false) {
            document.body.style.height = "5000px"
        }
        if (!tbl.vpf.ifn() && tbl.vpf.ddh === tbl.hxu.dia && tbl.zbv.xwq < screen.width) {
            window.scrollTo(0, 0)
        }
    };
    this.okd = function() {
        tbl.zbv.ysn();
        tbl.zbv.mem()
    };
    this.mem = function() {
        if (tbl.vpf.kij() === true && tbl.vpf.ifn() === false) {
            if (tbl.zbv.rde() === true && tbl.zbv.wzg === true) {
                var f = document.getElementById("slideUpOverlay"),
                    e = document.getElementById("slideElem1"),
                    d = document.getElementById("slideElem2");
                if (f && e && d) {
                    if (window.innerHeight < screen.width) {
                        e.className = "slideUpAnim1";
                        d.className = "slideUpAnim2";
                        f.style.display = "block";
                        document.ontouchstart = null;
                        document.ontouchend = null;
                        document.ontouchmove = null;
                        if (window.ontouchmove == null) {
                            tbl.zbv.ysn();
                            window.ontouchmove = tbl.zbv.okd
                        }
                    } else {
                        e.className = null;
                        d.className = null;
                        f.style.display = "none";
                        document.ontouchstart = tbl.zbv.gox;
                        document.ontouchmove = tbl.zbv.zio;
                        document.ontouchend = tbl.zbv.jqy;
                        if (window.ontouchmove != null) {
                            tbl.zbv.ysn();
                            window.ontouchmove = null
                        }
                        window.scrollTo(0, 0)
                    }
                }
            }
        }
    };
    this.web = function(g) {
        var k = document.getElementById("rotateOverlay"),
            e = document.getElementById("rotatePanel"),
            l = document.getElementById("rotate"),
            f = document.getElementById("rotateInfo"),
            d = 500,
            m = 700,
            o = window.innerHeight / d,
            n = window.innerWidth / m,
            j = (o < n) ? o : n;
        if (k && l) {
            if (g === true) {
                if (j < 1) {
                    tbl.vpf.rwi(e, j, j)
                }
                f.innerHTML = tbl.zbv.language.nrk;
                l.className = "rotateAnim";
                k.style.display = "block";
                tbl.zbv.kpy = true
            } else {
                k.style.display = "none";
                l.className = null;
                tbl.zbv.kpy = false
            }
        }
    };
    this.ahn = function() {
        var d = tbl.zbv.zwb.aar("settings");
        tbl.zbv.ysn();
        if (d) {
            d.zgu.nwi("adjustment", "#tgx", [(tbl.zbv.jpr === tbl.bnl.fae) ? 0 : 1]);
            d.yud()
        }
        if (tbl.zbv.nrx === true) {
            tbl.zbv.kpy = true;
            tbl.zbv.pde(true);
            tbl.zbv.web(true)
        } else {
            tbl.zbv.kpy = false;
            tbl.zbv.pde((tbl.zbv.tvo[tbl.zbv.cjs] === 0));
            tbl.zbv.web(false)
        }
    };
    this.fca = function() {
        this.qga = window.innerWidth, this.xwq = window.innerHeight;
        this.xqx = false;
        if (tbl.vpf.ifn() == true && tbl.xyy.value69 === true) {
            if (tbl.vpf.pdt() === true) {
                this.xqx = true;
                this.qga = (window.innerWidth > window.outerWidth) ? window.outerWidth : window.innerWidth;
                this.xwq = (window.innerHeight > window.outerHeight) ? window.outerHeight : window.innerHeight;
                if (this.qga > this.xwq) {
                    this.xwq *= 0.98
                }
            } else {
                if (tbl.vpf.kij() === true) {
                    this.xqx = true;
                    if (window.orientation === 90 || window.orientation === -90) {
                        if (screen.height === 1024) {
                            this.qga = 1024;
                            this.xwq = (window.innerHeight < 704) ? 662 : 704
                        } else {
                            if (screen.height === 736) {
                                this.qga = 736;
                                this.xwq = (window.innerHeight < 414 || window.innerHeight === 475) ? 370 : 414
                            } else {
                                if (screen.height === 667) {
                                    this.qga = 667;
                                    this.xwq = 375
                                }
                            }
                        }
                    } else {
                        if (screen.height === 1024) {
                            this.qga = 768;
                            this.xwq = (window.innerHeight < 960) ? 928 : 960
                        } else {
                            if (screen.height === 736) {
                                this.qga = 414;
                                this.xwq = 628
                            } else {
                                if (screen.height === 667) {
                                    this.qga = 375;
                                    this.xwq = 559
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    this.xfy = function() {
        var g = 0,
            k = 0,
            f = 1,
            e = 1,
            j = this.qga,
            d = this.xwq;
        this.xow = (this.jcg || j < this.width || d < this.height || this.bnl.hfc);
        g = this.lfc(this.xow);
        f = ((j - k) / this.width).toString();
        f = Number(f.substring(0, (f.length > 5) ? 5 : f.length));
        e = ((d - g) / this.height).toString();
        e = Number(e.substring(0, (e.length > 5) ? 5 : e.length));
        if (this.xow) {
            if (this.bnl.yxe) {
                if (f > e) {
                    this.vce = e;
                    this.yhn = e
                } else {
                    this.vce = f;
                    this.yhn = f
                }
            } else {
                this.vce = f;
                this.yhn = e
            }
        } else {
            this.vce = 1;
            this.yhn = 1
        }
        tbl.vpf.rwi(this.canvas, this.vce, this.yhn);
        if (this.vbe != null) {
            tbl.vpf.rwi(this.vbe, this.vce, this.yhn, ((this.bnl.vbe.exo.x) - ((this.bnl.vbe.exo.x + this.bnl.vbe.nkd) / 2 * (1 - this.vce))), ((this.bnl.vbe.exo.y) - ((this.bnl.vbe.exo.y + this.bnl.vbe.ewh) / 2 * (1 - this.yhn))))
        }
        if (this.xhk != null) {
            tbl.vpf.rwi(this.xhk, this.vce, this.yhn)
        }
        if (this.xow) {
            this.offsetLeft = Math.floor((j - (this.canvas.width * this.vce))) / 2;
            this.offsetTop = Math.floor((d - (this.canvas.height * this.yhn))) / 2
        } else {
            this.offsetLeft = this.koi.offsetLeft;
            this.offsetTop = this.koi.offsetTop
        }
    };
    this.aib = function() {
        if (this.ajb() === true) {
            var e = null;
            if (this.nns[this.gyd] === tbl.fax.krg) {
                if (window.orientation === -90) {
                    e = tbl.bnl.tqe
                } else {
                    e = tbl.bnl.fae
                }
            } else {
                if (this.nns[this.gyd] === tbl.fax.srp) {
                    e = tbl.bnl.tqe
                } else {
                    if (this.nns[this.gyd] === tbl.fax.cwp) {
                        e = tbl.bnl.fae
                    }
                }
            }
            this.nrx = (this.xwq > this.qga);
            this.yct(e);
            this.zuw(false);
            if (this.wzg === true) {
                this.yud()
            } else {
                this.zwb.nwi("loading", "#yud")
            }
        } else {
            if (tbl.vpf.bgr) {
                var f = (this.qga > this.xwq) ? this.gvq : this.dkb,
                    d = this.bnl.zrj,
                    e = null;
                if (f != this.rdt) {
                    this.rdt = f;
                    if (this.vjm) {
                        e = (this.rdt == this.gvq) ? tbl.bnl.chg : tbl.bnl.xxd
                    } else {
                        e = (this.rdt == this.gvq) ? tbl.xyy.value33 : tbl.xyy.value32
                    }
                    this.yct(e);
                    this.zuw((d != this.bnl.zrj) || this.vjm);
                    if (this.wzg === true) {
                        if (this.vjm && this.ced) {
                            this.xnx(this.ipx(this.language.jmy))
                        } else {
                            this.yud()
                        }
                    } else {
                        this.zwb.nwi("loading", "#yud")
                    }
                }
            } else {
                if (!this.vjm) {
                    e = (this.jcg) ? tbl.xyy.value15 : tbl.xyy.value14;
                    this.yct(e);
                    this.zuw(false);
                    if (this.wzg === true) {
                        this.yud()
                    } else {
                        this.zwb.nwi("loading", "#yud")
                    }
                }
            }
        }
    };
    this.ajb = function() {
        return false
    };
    this.rde = function() {
        return false
    };
    this.yct = function(d) {};
    this.btg = function() {
        this.style = new zqf()
    };
    this.lfc = function(d) {
        var e = 0;
        if (tbl.vpf.pdt() && window.innerWidth > window.innerHeight && d) {
            if (this.grs === true && document.body.style.backgroundColor !== this.style.srz.backgroundColor) {
                document.body.style.backgroundColor = this.style.srz.backgroundColor
            }
        }
        return e
    };
    this.ggj = function() {
        if (tbl.vpf.pdt() && !tbl.vpf.ifn() && window.innerWidth > window.innerHeight) {
            return 0
        }
        return 0
    };
    this.zqv = function() {
        return false
    };
    this.zea = function() {
        if (tbl.vpf.rri) {
            this.hly = new zax()
        } else {
            this.hly = new rqd()
        }
        this.hly.brv();
        this.hly.coo(this.bfi())
    };
    this.bji = function() {
        this.zwb = new nhr();
        this.zwb.brv();
        this.zwb.hbx("jackpots")
    };
    this.bfi = function() {
        var d = new kqn();
        d.brv();
        return d
    };
    this.vxn = function() {
        this.xcw = new rlv()
    };
    this.uxf = function() {
        try {
            var d = a("lang"),
                f = a("uselang"),
                o = [],
                p = [];
            if (d != "") {
                sessionStorage.sessionValue1 = d
            }
            if (f != "") {
                sessionStorage.sessionValue11 = f
            }
            if (sessionStorage.sessionValue11) {
                o = sessionStorage.sessionValue11.split(",");
                for (var l = 0, m = o.length; l < m; l++) {
                    for (var k = 0, g = tbl.xyy.value5.length; k < g; k++) {
                        if (o[l] === tbl.xyy.value5[k] && p.indexOf(o[l]) < 0) {
                            p.push(o[l])
                        }
                    }
                }
                if (p.length == 0) {
                    p.push(tbl.xyy.value5[0])
                }
                tbl.xyy.value5 = [];
                for (var l = 0, m = p.length; l < m; l++) {
                    tbl.xyy.value5.push(p[l])
                }
            }
            if (sessionStorage.sessionValue1 == null) {
                var q = tbl.vpf.awt();
                if (this.xml(q)) {
                    sessionStorage.sessionValue1 = q
                } else {
                    if (q === tbl.language.EN && this.xml(tbl.language.US)) {
                        sessionStorage.sessionValue1 = tbl.language.US
                    } else {
                        if (q === tbl.language.DE && this.xml(tbl.language.AT)) {
                            sessionStorage.sessionValue1 = tbl.language.AT
                        } else {
                            if (q === tbl.language.ES && this.xml(tbl.language.MX)) {
                                sessionStorage.sessionValue1 = tbl.language.MX
                            } else {
                                if (q === tbl.language.ES && this.xml(tbl.language.CO)) {
                                    sessionStorage.sessionValue1 = tbl.language.CO
                                } else {
                                    if (q === tbl.language.ES && this.xml(tbl.language.CL)) {
                                        sessionStorage.sessionValue1 = tbl.language.CL
                                    } else {
                                        if (q === tbl.language.ES && this.xml(tbl.language.VE)) {
                                            sessionStorage.sessionValue1 = tbl.language.VE
                                        } else {
                                            if (q === tbl.language.EN && this.xml(tbl.language.BR)) {
                                                sessionStorage.sessionValue1 = tbl.language.BR
                                            } else {
                                                sessionStorage.sessionValue1 = tbl.xyy.value5[0]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (this.xml(sessionStorage.sessionValue1)) {
                for (var l = 0, m = tbl.xyy.value5.length; l < m; l++) {
                    if (tbl.xyy.value5[l] == sessionStorage.sessionValue1) {
                        this.dwe = l;
                        break
                    }
                }
                this.language = this.gfy(sessionStorage.sessionValue1)
            } else {
                this.dwe = 0;
                this.language = this.gfy(tbl.xyy.value5[this.dwe]);
                sessionStorage.sessionValue1 = tbl.xyy.value5[this.dwe]
            }
        } catch (n) {
            this.dwe = 0;
            this.language = this.gfy(tbl.xyy.value5[this.dwe]);
            console.error(n.lgc)
        }
    };
    this.gsw = function() {
        var d = (tbl.xyy.value45 == tbl.tnv.jok) ? this.bnl.tnv.zbv : (tbl.xyy.value45 == tbl.tnv.xjq) ? this.bnl.tnv.qva : this.bnl.tnv.azk;
        this.koi = document.getElementById("gameArea");
        if (this.xqx === false) {
            this.koi.style.marginTop = (-d.exo.height / 2) + "px";
            this.koi.style.marginLeft = (-d.exo.width / 2) + "px"
        } else {
            this.koi.style.left = "0px";
            this.koi.style.top = "0px";
            this.koi.style.marginTop = ((window.innerHeight - d.exo.height) / 2) + "px";
            this.koi.style.marginLeft = ((window.innerWidth - d.exo.width) / 2) + "px"
        }
        this.koi.style.width = (d.exo.width > window.innerWidth) ? window.innerWidth + "px" : d.exo.width + "px";
        this.koi.style.height = (d.exo.height > window.innerHeight) ? window.innerHeight + "px" : d.exo.height + "px";
        this.canvas = document.getElementById("canvas");
        this.canvas.width = Math.round(d.exo.width);
        this.canvas.height = Math.round(d.exo.height);
        this.context2D = this.canvas.getContext("2d");
        this.xhk = document.getElementById("gameOverlay");
        if (this.xhk) {
            this.xhk.style.width = d.exo.width + "px";
            this.xhk.style.height = d.exo.height + "px"
        }
        this.fvc(d)
    };
    this.fvc = function(d) {
        var e = new vyr();
        e.brv(d.exo, this.context2D);
        e.parent = this;
        e.fnd = (this.vjm) ? this.language.lna : this.language.sdc;
        e.nij = this.language.error;
        e.ylm(d);
        e.ioq(this.style.tnv);
        this.zwb.oro("loading", e)
    };
    this.zib = function() {
        var d = new dnz();
        d.brv(this.bnl.xhi.exo, null, this.context2D);
        d.parent = this;
        d.ylm(this.bnl.xhi);
        d.ioq(this.style.xhi);
        if (sessionStorage.sessionValue15 == "true" && tbl.xyy.value49) {
            d.ffa("time", "", "--:-- [--:--]")
        } else {
            if (sessionStorage.sessionValue15 == "true" || tbl.xyy.value49) {
                d.ffa("time", "", "--:--")
            }
        }
        if (this.qcu()) {
            d.ffa("freeplay", "", this.language.yns)
        } else {
            d.ffa("id", "", "")
        }
        this.zwb.oro("topi", d)
    };
    this.flc = function() {
        var d = new rkv();
        d.brv(this.bnl.zvt.exo, null, this.context2D);
        d.parent = this;
        d.ylm(this.bnl.zvt);
        d.ioq(this.style.zvt, false);
        d.yaf(false);
        this.zwb.oro("topb", d)
    };
    this.kik = function() {};
    this.jnd = function() {
        var d = new brk();
        d.brv(this.bnl.xho.exo, null, this.context2D);
        d.parent = this;
        d.zfg(this.bnl.xho);
        d.ioq(this.style.xho);
        d.yaf(false);
        this.zwb.oro("stats", d)
    };
    this.yxo = function() {
        this.oal = new vwp();
        this.oal.brv();
        this.oal.ioq(this.style.oal);
        this.oal.ylm(this.bnl.oal)
    };
    this.mky = function() {
        this.ruq = new fsy();
        this.ruq.brv();
        this.ruq.ioq(this.style.ruq);
        this.ruq.ylm(this.bnl.ruq)
    };
    this.gec = function() {
        if (this.yuc()) {
            this.frx.sqm = document.getElementById("jurisdictionDiv");
            this.frx.eub = document.getElementById("btnsp");
            this.frx.bqk = document.getElementById("btnsl");
            this.frx.hlj = document.getElementById("btnst");
            if (this.frx.eub) {
                this.frx.eub.innerHTML = this.language.dft;
                this.frx.eub.onclick = this.xoe;
                this.frx.eub.ontouchend = this.xoe
            }
            if (this.frx.bqk) {
                this.frx.bqk.innerHTML = this.language.nkv;
                this.frx.bqk.onclick = this.pun;
                this.frx.bqk.ontouchend = this.pun
            }
            if (this.frx.hlj) {
                this.frx.hlj.innerHTML = this.language.qoa;
                this.frx.hlj.onclick = this.mpv;
                this.frx.hlj.ontouchend = this.mpv
            }
            this.vtu();
            this.glh()
        }
    };
    this.sex = function(e) {
        var d = new wxz();
        d.brv(this.bnl.wxs.exo, null, this.context2D);
        d.parent = this;
        d.yxh = true;
        if (e) {
            d.wsx(e)
        }
        d.zfg(this.bnl.wxs);
        d.uib(this.language);
        d.ioq(this.style.wxs);
        d.ylm(this.bnl.wxs);
        d.yaf(false);
        this.zwb.oro("autop", d)
    };
    this.xig = function(d) {
        var e = new ahw();
        e.brv(this.bnl.pnn.exo, null, this.context2D);
        e.parent = this;
        if (d) {
            e.sli(d)
        }
        e.yaf(false);
        this.zwb.oro("settings", e)
    };
    this.zuw = function(d) {};
    this.yaj = function() {
        var d = this.zwb.aar("stats");
        if (d) {
            d.gix(this.bnl.xho.exo);
            d.ylm(this.bnl.xho)
        }
    };
    this.tdg = function() {
        if (this.oal) {
            this.oal.ylm(this.bnl.oal)
        }
    };
    this.tlo = function() {
        if (this.ruq) {
            this.ruq.ylm(this.bnl.ruq)
        }
    };
    this.vtu = function() {
        var d = null,
            e = 0;
        if (this.frx) {
            d = this.bnl.lzk;
            if (this.frx.sqm) {
                tbl.vpf.dhc(this.frx.sqm, d.mxh)
            }
            if (this.frx.eub) {
                this.frx.eub.style.fontSize = d.ofg.fontSize + "px";
                this.frx.eub.style.textIndent = d.ofg.textIndent + "px";
                tbl.vpf.dhc(this.frx.eub, d.uub)
            }
            if (this.frx.bqk) {
                this.frx.bqk.style.fontSize = d.ofg.fontSize + "px";
                this.frx.bqk.style.textIndent = d.ofg.textIndent + "px";
                tbl.vpf.dhc(this.frx.bqk, d.ndj)
            }
            if (this.frx.hlj) {
                this.frx.hlj.style.fontSize = d.ofg.fontSize + "px";
                this.frx.hlj.style.textIndent = d.ofg.textIndent + "px";
                tbl.vpf.dhc(this.frx.hlj, d.wcy)
            }
            if (this.frx.sqm) {
                e = (d.mxh.width - d.mxh.height) / 2;
                if (this.jpr == tbl.bnl.tqe) {
                    this.frx.sqm.style.transform = "rotate(-90deg) translate(" + (-e) + "px, " + e + "px)"
                } else {
                    this.frx.sqm.style.transform = "rotate(-90deg) translate(" + (-e) + "px, " + (-e) + "px)"
                }
            }
        }
    };
    this.gvd = function() {
        var d = this.zwb.aar("autop");
        if (d) {
            d.gix(this.bnl.wxs.exo);
            d.ylm(this.bnl.wxs)
        }
    };
    this.jiu = function() {
        var d = this.zwb.aar("settings");
        if (d) {
            d.gix(this.bnl.pnn.exo);
            d.ylm(this.bnl.pnn)
        }
    };
    this.paz = function() {
        var d = this.zwb.aar("topi");
        if (d) {
            d.gix(this.bnl.xhi.exo);
            d.ylm(this.bnl.xhi)
        }
    };
    this.huu = function() {
        var d = this.zwb.aar("topb");
        if (d) {
            d.gix(this.bnl.zvt.exo);
            d.ylm(this.bnl.zvt)
        }
    };
    this.pmk = function() {
        var e = this.zwb.aar("loading"),
            d = (tbl.xyy.value45 == tbl.tnv.jok) ? this.bnl.tnv.zbv : (tbl.xyy.value45 == tbl.tnv.xjq) ? this.bnl.tnv.qva : this.bnl.tnv.azk;
        if (e) {
            this.canvas.width = 0;
            if (this.xqx === false) {
                this.koi.style.marginTop = (-d.exo.height / 2) + "px";
                this.koi.style.marginLeft = (-d.exo.width / 2) + "px"
            } else {
                this.koi.style.left = "0px";
                this.koi.style.top = "0px";
                this.koi.style.marginTop = ((this.xwq - d.exo.height) / 2) + "px";
                this.koi.style.marginLeft = ((this.qga - d.exo.width) / 2) + "px"
            }
            this.koi.style.width = (d.exo.width > this.qga) ? this.qga + "px" : d.exo.width + "px";
            this.koi.style.height = (d.exo.height > this.xwq) ? this.xwq + "px" : d.exo.height + "px";
            this.canvas.width = Math.round(d.exo.width);
            this.canvas.height = Math.round(d.exo.height);
            if (this.xhk) {
                this.xhk.style.width = d.exo.width + "px";
                this.xhk.style.height = d.exo.height + "px"
            }
            e.gix(d.exo);
            e.ylm(d)
        }
    };
    this.egh = function() {
        if (tbl.vpf.bgr && !tbl.vpf.rri) {
            if (!this.hly.whc && tbl.vpf.ddh != tbl.hxu.ahq) {
                this.lcu = false;
                this.cjs = 0
            }
        }
    };
    this.iob = function(d) {
        if (tbl.vpf.bgr) {
            if (!this.vjm) {
                return tbl.bnl.tqx
            } else {
                if (!this.xfp) {
                    return tbl.bnl.chg
                }
            }
        }
        return d
    };
    this.ywb = function() {
        var d = this.zwb.aar("loading");
        this.ysn();
        if (d) {
            d.wda = true
        }
        if ((tbl.vpf.ddh === tbl.hxu.ecu || tbl.vpf.ddh === tbl.hxu.zly || tbl.vpf.ddh === tbl.hxu.crd) && tbl.vpf.lhl === tbl.os.ijc && tbl.vpf.lbx === true) {
            if (this.hly.whc === false || tbl.vpf.xkm() === false || tbl.vpf.wld() === false) {
                tbl.kjw = tbl.hro.akv
            }
        }
        if (tbl.kjw == 0) {
            if (this.lcu === true && tbl.vpf.ems().length === 0) {
                this.lcu = false
            }
            if (d) {
                if (tbl.xyy.value45 === tbl.tnv.xjq) {
                    d.start()
                } else {
                    if (tbl.xyy.value45 === tbl.tnv.nhj) {
                        d.xuu()
                    }
                }
                d.yud(0)
            }
            this.ajj();
            if (this.lcu === true) {
                this.wdc()
            }
            if (d && d.bgk() && tbl.xyy.value45 === tbl.tnv.xjq) {
                d.iwj = tbl.zbv.hly.start
            } else {
                this.hly.start()
            }
        } else {
            if (d) {
                if (tbl.kjw == tbl.hro.cwi && tbl.vpf.ddh === tbl.hxu.dia) {
                    d.icb = this.language.qqk;
                    d.yud(0)
                } else {
                    if (tbl.kjw == tbl.lgc.zag) {
                        d.icb = this.language.gqm;
                        d.yud(0)
                    } else {
                        d.icb = this.language.rgs;
                        if (tbl.vpf.lhl === tbl.os.ijc || tbl.vpf.lhl === tbl.os.xhe) {
                            if (tbl.kjw != tbl.hro.cwi && sessionStorage.sessionValue1 === tbl.language.TR) {
                                d.icb += "|Google Chrome" + this.language.lun
                            } else {
                                if (tbl.kjw != tbl.hro.cwi && (sessionStorage.sessionValue1 === tbl.language.GE || sessionStorage.sessionValue1 === tbl.language.HU)) {
                                    d.icb += "|" + this.language.bwu + " Google Chrome" + this.language.wmw
                                } else {
                                    d.icb += "|" + this.language.lun + " Google Chrome"
                                }
                            }
                        } else {
                            if (tbl.vpf.lhl === tbl.os.bic || tbl.vpf.lhl === tbl.os.xhe) {
                                if (tbl.kjw != tbl.hro.cwi && sessionStorage.sessionValue1 === tbl.language.TR) {
                                    d.icb += "|Google Chrome, Mozilla Firefox" + this.language.lun
                                } else {
                                    if (tbl.kjw != tbl.hro.cwi && (sessionStorage.sessionValue1 === tbl.language.GE || sessionStorage.sessionValue1 === tbl.language.HU)) {
                                        d.icb += "|" + this.language.bwu + " Google Chrome, Mozilla Firefox" + this.language.wmw
                                    } else {
                                        d.icb += "|" + this.language.lun + " Google Chrome, Mozilla Firefox"
                                    }
                                }
                            }
                        }
                        console.error("Errorcode: " + tbl.kjw);
                        d.yud(0)
                    }
                }
            }
        }
    };
    this.ajj = function() {};
    this.wdc = function() {};
    this.knu = function() {
        var e = this.fjr + this.bnl.type + "/",
            d = this.zwb.aar("loading");
        if (tbl.xyy.value45 == tbl.tnv.jok) {
            e += "load.jpg"
        } else {
            if (tbl.xyy.value45 == tbl.tnv.xjq) {
                e += "load_amatic.png"
            } else {
                if (tbl.xyy.value45 == tbl.tnv.nhj) {
                    this.hly.odq("splashanim", tbl.xyy.value30 + "/basic/images/" + this.bnl.type + "/loadanim.png");
                    e += "load_amanet.png"
                }
            }
        }
        if (e.indexOf(".png") >= 0) {
            if (d) {
                d.buc = true
            }
        }
        this.hly.odq("splash", e);
        this.hly.rrn()
    };
    this.nmu = function() {};
    this.xml = function(e) {
        for (var d = 0; d < tbl.xyy.value5.length; d++) {
            if (tbl.xyy.value5[d] == e) {
                return true
            }
        }
        return false
    };
    this.ziz = function() {
        tbl.zbv.njh = true;
        if (!tbl.zbv.vjm) {
            tbl.zbv.qqo();
            if (tbl.zbv.buj()) {
                tbl.zbv.uek()
            }
        } else {
            tbl.zbv.twa()
        }
        tbl.zbv.connect()
    };
    this.qqo = function() {};
    this.twa = function() {};
    this.connect = function() {
        this.agu.connect(this.wkz, this.lno, this.ufi, this.iji, this.mag, this.zeb, this.enw)
    };
    this.ohc = function(d) {
        if (typeof d === "undefined") {
            tbl.zbv.agu.ohc(0)
        } else {
            tbl.zbv.agu.ohc(d)
        }
    };
    this.unl = function(d) {
        this.tyz = 0;
        this.ugj = 0;
        this.dau = d;
        clearInterval(this.gkx);
        this.gkx = setInterval(this.tuj, 1000)
    };
    this.tuj = function() {
        var d = tbl.zbv.zwb.aar("loading");
        tbl.zbv.tyz++;
        tbl.zbv.ugj = Math.round(tbl.xyy.value47 / 1000) - tbl.zbv.tyz;
        tbl.zbv.ugj = (tbl.zbv.ugj > 0) ? tbl.zbv.ugj : 0;
        if (!tbl.zbv.grs) {
            if (d) {
                d.icb = "Can not connect to game server!|Tries to connect: " + tbl.zbv.dau + " (" + tbl.zbv.ugj + " sec)";
                d.yud(0)
            }
        }
    };
    this.smu = function() {
        return tbl.xyy.value74
    };
    this.yud = function(d, g, e, f) {};
    this.tnc = function() {
        return (this.wzg === true && this.grs === true && this.nrx === false)
    };
    this.xnx = function(e) {
        var d = this.zwb.aar("history");
        this.wzg = true;
        if (this.grs) {
            if (this.bnl.gpr) {
                tbl.vpf.szx(this.context2D, this.bnl.zbv.exo.x - this.bnl.zbv.lbi, this.bnl.zbv.exo.y - this.bnl.zbv.lbi, this.bnl.zbv.exo.width + 2 * this.bnl.zbv.lbi, this.bnl.zbv.exo.height + 2 * this.bnl.zbv.lbi, "black", 1)
            }
            tbl.vpf.haz(this.context2D, e, "white", this.bnl.zbv.exo.x, this.bnl.zbv.exo.y, this.bnl.zbv.exo.width, this.bnl.zbv.exo.height, "arial", 28, "bold");
            if (d) {
                d.yud()
            }
        }
    };
    this.klw = function() {
        if (tbl.zbv.oal) {
            tbl.zbv.oal.pwz()
        }
        tbl.zbv.nhk(false);
        tbl.zbv.kdj.bfs(false);
        tbl.zbv.kdj.zgu.nwi("exit", "#jug", [true]);
        if (tbl.vpf.lge()) {
            tbl.vpf.dlk();
            setTimeout(tbl.zbv.ysn, 1400)
        }
        if (tbl.xyy.value67 > 0) {
            tbl.zbv.ohc(tbl.xyy.value67)
        } else {
            if (sessionStorage.sessionValue16 && sessionStorage.sessionValue16 != "null") {
                tbl.zbv.hch({
                    type: "history",
                    sender: tbl.zbv.wkz,
                    lang: sessionStorage.sessionValue1.toUpperCase()
                });
                window.location.href = decodeURIComponent(sessionStorage.sessionValue16)
            } else {
                if (sessionStorage.sessionValue5 && sessionStorage.sessionValue5 != "null") {
                    tbl.zbv.hch({
                        type: "quit",
                        sender: tbl.zbv.wkz,
                        lang: sessionStorage.sessionValue1.toUpperCase()
                    });
                    if (sessionStorage.sessionValue5 !== "(api)") {
                        window.location.href = decodeURIComponent(sessionStorage.sessionValue5)
                    }
                }
            }
        }
    };
    this.vml = function() {
        clearTimeout(tbl.zbv.sfm);
        tbl.zbv.nhk(false);
        if (tbl.zbv.kdj) {
            tbl.zbv.kdj.bfs(false)
        }
        if (!tbl.zbv.vjm) {
            tbl.zbv.stop();
            if (tbl.zbv.kdj) {
                tbl.zbv.kdj.zgu.nwi("info", "#hpg", [tbl.zbv.language.ioj]);
                tbl.zbv.yud()
            }
            if (tbl.zbv.ajb() === true && tbl.vpf.lge()) {
                tbl.vpf.dlk();
                setTimeout(tbl.zbv.ysn, 800);
                setTimeout(tbl.zbv.agu.twc.close, 800)
            } else {
                tbl.zbv.agu.twc.close()
            }
        } else {
            tbl.zbv.agu.close()
        }
    };
    this.wqz = function() {
        tbl.zbv.erl = true
    };
    this.clz = function() {
        if (tbl.vpf.bgr == true) {
            if (tbl.zbv.erl == true) {
                tbl.zbv.erl = false;
                tbl.vpf.dlk();
                setTimeout(tbl.zbv.ysn, 1400)
            }
        } else {
            tbl.vpf.dlk();
            setTimeout(tbl.zbv.ysn, 1400)
        }
    };
    this.trq = function() {
        var e = (tbl.zbv.ajb() === true) ? "smartphone" : "desktop",
            j = "en";
        if (sessionStorage.sessionValue1 == tbl.language.ES || sessionStorage.sessionValue1 == tbl.language.CO || sessionStorage.sessionValue1 == tbl.language.CL || sessionStorage.sessionValue1 == tbl.language.MX || sessionStorage.sessionValue1 == tbl.language.VE) {
            j = "es"
        } else {
            if (sessionStorage.sessionValue1 == tbl.language.RO) {
                j = "ro"
            } else {
                if (sessionStorage.sessionValue1 == tbl.language.PT || sessionStorage.sessionValue1 == tbl.language.BR) {
                    j = "pt"
                } else {
                    if (sessionStorage.sessionValue1 == tbl.language.HR) {
                        j = "hr"
                    } else {
                        if (sessionStorage.sessionValue1 == tbl.language.DE) {
                            j = "de"
                        } else {
                            if (sessionStorage.sessionValue1 == tbl.language.SE) {
                                j = "se"
                            }
                        }
                    }
                }
            }
        }
        if (tbl.zbv.guo != "") {
            var f = null,
                g = "",
                d = "";
            if (tbl.zbv.guo != "") {
                g += "rtp=" + tbl.zbv.guo
            }
            if (tbl.zbv.xuy != "") {
                g += (tbl.zbv.guo != "") ? "&" : "";
                g += "maxwin=" + ((tbl.zbv.xuy == "0") ? "0" : tbl.zbv.jdq(Number(tbl.zbv.xuy) * tbl.zbv.hdu()))
            }
            d = encodeURIComponent(g);
            f = window.open(tbl.xyy.value30 + "/gamerules/" + j + "/" + e + "/" + tbl.zbv.wkz.toLowerCase() + ".html?" + d, "_blank", (e === "desktop") ? "width=800,scrollbars=yes" : null);
            if (f == null || typeof f === "undefined") {
                window.location.href = tbl.xyy.value30 + "/gamerules/" + j + "/" + e + "/" + tbl.zbv.wkz.toLowerCase() + ".html?" + d
            }
        }
    };
    this.qge = function() {
        tbl.zbv.kdw = false;
        tbl.zbv.wuy();
        tbl.zbv.wkv();
        tbl.zbv.gab()
    };
    this.qlo = function() {
        var d = tbl.zbv.zwb.aar("stats");
        if (d) {
            d.wvg(true, true)
        }
        tbl.zbv.boo.close(true)
    };
    this.otr = function() {
        var d = tbl.zbv.zwb.aar("stats");
        tbl.zbv.stop();
        if (d && d.iac()) {
            d.wvg(true, true)
        }
        tbl.zbv.agu.twc.close();
        if (tbl.zbv.boo) {
            tbl.zbv.boo.close(false)
        }
    };
    this.vrg = function() {
        clearTimeout(tbl.zbv.sfm);
        tbl.zbv.kdj.bfs(false);
        tbl.zbv.stop();
        tbl.zbv.agu.twc.dvv()
    };
    this.mcq = function() {
        if (tbl.zbv.ced) {
            return
        }
        var d = tbl.zbv.zwb.aar("history");
        if (d) {
            d.bfs(false)
        }
        tbl.zbv.stop();
        tbl.zbv.agu.iyz(tbl.zbv.jix)
    };
    this.nqd = function() {
        if (tbl.zbv.ced) {
            return
        }
        var d = tbl.zbv.zwb.aar("history");
        if (d) {
            d.bfs(false)
        }
        tbl.zbv.stop();
        tbl.zbv.agu.znj(tbl.zbv.jix)
    };
    this.xwe = function() {
        var d = tbl.zbv.zwb.aar("history");
        if (d) {
            d.bfs(false)
        }
        tbl.zbv.stop();
        clearInterval(tbl.zbv.zfi);
        tbl.zbv.rlb();
        tbl.zbv.agu.close()
    };
    this.ekz = function() {
        tbl.zbv.hly.jsl("btn");
        tbl.zbv.hly.dvl("btn");
        tbl.zbv.ctp()
    };
    this.ywv = function() {
        var f = tbl.zbv.zwb.aar("topb"),
            e = tbl.zbv.zwb.aar("settings"),
            g = tbl.zbv.zwb.aar("gameb"),
            d = tbl.zbv.zwb.aar("topi");
        if (webAudioEngine && webAudioEngine.state == "suspended") {
            webAudioEngine.resume()
        }
        if (tbl.zbv.hly.whc === true) {
            tbl.zbv.cjs = (tbl.zbv.cjs === tbl.zbv.tvo.length - 1) ? 0 : tbl.zbv.cjs + 1;
            tbl.zbv.uht(tbl.zbv.tvo[tbl.zbv.cjs])
        } else {
            tbl.zbv.cjs = (tbl.zbv.cjs === tbl.zbv.tvo.length - 1) ? 0 : tbl.zbv.tvo.length - 1;
            tbl.zbv.pde((tbl.zbv.tvo[tbl.zbv.cjs] === 0))
        }
        sessionStorage.sessionValue6 = tbl.zbv.cjs;
        if (tbl.zbv.tvo[tbl.zbv.cjs] > 0) {
            tbl.zbv.hly.dvl("audioon")
        }
        if (d) {
            d.dxg("audio", tbl.zbv.tvo[tbl.zbv.cjs])
        }
        if (f) {
            f.zgu.nwi("audio", "#tgx", [tbl.zbv.cjs])
        }
        if (e) {
            e.zgu.nwi("audio", "#tgx", [tbl.zbv.cjs])
        }
        if (g) {
            g.zgu.nwi("audio", "#tgx", [tbl.zbv.cjs])
        }
        tbl.zbv.yud()
    };
    this.kov = function() {};
    this.xaj = function() {
        var d = tbl.zbv.zwb.aar("settings");
        if (d) {
            if (d.iac()) {
                tbl.zbv.ukn()
            } else {
                tbl.zbv.icp()
            }
            tbl.zbv.hly.dvl("btn");
            if (tbl.zbv.bnl.btl === false) {
                tbl.zbv.kdj.zgu.nwi("setting", "#dgt", [d.iac()])
            }
        }
    };
    this.gbx = function() {
        var d = tbl.zbv.zwb.aar("settings"),
            e = "";
        tbl.zbv.gyd = (tbl.zbv.gyd < tbl.zbv.nns.length - 1) ? tbl.zbv.gyd + 1 : (tbl.vpf.mkh()) ? 0 : 1;
        localStorage.localValue1 = tbl.zbv.gyd;
        tbl.zbv.ysn();
        if (d) {
            d.zgu.nwi("adjustment", "#tgx", [(tbl.zbv.jpr === tbl.bnl.fae) ? 0 : 1]);
            if (tbl.zbv.nns[tbl.zbv.gyd] === tbl.fax.srp) {
                e = tbl.zbv.language.left
            } else {
                if (tbl.zbv.nns[tbl.zbv.gyd] === tbl.fax.cwp) {
                    e = tbl.zbv.language.bnt
                } else {
                    if (tbl.zbv.nns[tbl.zbv.gyd] === tbl.fax.krg) {
                        e = tbl.zbv.language.uhy
                    }
                }
            }
            d.zgu.nwi("adjustment", "#nck", [e])
        }
    };
    this.xoe = function() {
        if (sessionStorage.sessionValue21 && sessionStorage.sessionValue21 != "null") {
            window.location.href = decodeURIComponent(sessionStorage.sessionValue21)
        }
    };
    this.pun = function() {
        if (sessionStorage.sessionValue20 && sessionStorage.sessionValue20 != "null") {
            window.location.href = decodeURIComponent(sessionStorage.sessionValue20)
        }
    };
    this.mpv = function() {
        if (sessionStorage.sessionValue19 && sessionStorage.sessionValue19 != "null") {
            window.location.href = decodeURIComponent(sessionStorage.sessionValue19)
        }
    };
    this.csd = function(e, d) {
        this.kdj.zgu.nwi("creditd", "#nck", [this.jdq(e), d])
    };
    this.gmi = function(e, d) {
        if (e > 0) {
            this.kdj.zgu.nwi("betd", "#nck", [this.jdq(e), d])
        } else {
            this.kdj.zgu.nwi("betd", "#nck", ["", d])
        }
    };
    this.bhg = function(e) {
        var d = this.zwb.aar("topi");
        this.jix = e;
        if (d) {
            d.pej("id", (e > 0) ? e : "")
        }
    };
    this.xlm = function() {
        var e = "",
            d = tbl.zbv.zwb.aar("topi");
        if (tbl.xyy.value49) {
            e += tbl.zbv.rpp()
        }
        if (tbl.xyy.value49 && sessionStorage.sessionValue15 == "true") {
            e += " ["
        }
        if (sessionStorage.sessionValue15 == "true") {
            e += tbl.zbv.fld()
        }
        if (tbl.xyy.value49 && sessionStorage.sessionValue15 == "true") {
            e += "]"
        }
        if (d) {
            d.pej("time", e)
        }
    };
    this.fld = function() {
        return this.getTime(new Date().getTime() - this.gzb)
    };
    this.rpp = function() {
        var d = new Date();
        return this.ozq(d.getHours()) + ":" + this.ozq(d.getMinutes())
    };
    this.getTime = function(e) {
        var g = e,
            d = 0,
            f = 0;
        d = Math.floor(e / (60000));
        g = e - d * 60000;
        f = Math.round(g / 1000);
        if (f >= 60) {
            f -= 60;
            d++
        }
        return this.ozq(d) + ":" + this.ozq(f)
    };
    this.ozq = function(d) {
        if (d < 0) {
            return "00"
        } else {
            if (d < 10) {
                return "0" + d
            }
        }
        return d
    };
    this.wvz = function() {
        if (sessionStorage.sessionValue15 == "true" || tbl.xyy.value49) {
            if (tbl.xyy.value49) {
                this.rpp()
            }
            this.gzb = (this.owt > 0) ? this.owt : new Date().getTime();
            this.xlm();
            this.tnk = setInterval(this.xlm, 1000)
        }
    };
    this.tbw = function() {
        clearInterval(this.tnk)
    };
    this.lid = function(d) {
        this.gzb -= d
    };
    this.yay = function(d, f) {
        var e = this.zwb.aar("loading");
        if (e && e.icb == null) {
            if (f && f !== "") {
                e.nij = f
            } else {
                e.nij = this.language.error
            }
            e.icb = d;
            e.yud(this.hly.xya())
        }
    };
    this.icp = function() {};
    this.ukn = function() {};
    this.lrg = function() {};
    this.nyh = function() {};
    this.ctp = function() {
        var g = false,
            j = this.zwb.aar("topb"),
            f = this.zwb.aar("settings"),
            k = this.zwb.aar("gameb"),
            d = this.zwb.aar("topi");
        this.dwe = (this.dwe + 1 == tbl.xyy.value5.length) ? 0 : this.dwe + 1;
        sessionStorage.sessionValue1 = tbl.xyy.value5[this.dwe];
        this.language = this.gfy(tbl.xyy.value5[this.dwe]);
        this.uib();
        if (j && g == false) {
            var e = j.zgu.aar("language");
            if (e) {
                e.ztt(this.rjr(tbl.xyy.value5[this.dwe]));
                g = true
            }
            j.glm(true)
        }
        if (f && g == false) {
            var e = f.zgu.aar("language");
            if (e) {
                e.ztt(this.rjr(tbl.xyy.value5[this.dwe]));
                g = true
            }
        }
        if (k && g == false) {
            var e = k.zgu.aar("language");
            if (e) {
                e.ztt(this.rjr(tbl.xyy.value5[this.dwe]));
                g = true
            }
        }
        if (g == false) {
            var e = this.kdj.zgu.aar("lang");
            if (e) {
                e.vpm = this.rjr(tbl.xyy.value5[this.dwe])
            }
        }
        if (d) {
            d.tgx("language", sessionStorage.sessionValue1)
        }
        this.yud()
    };
    this.uib = function() {};
    this.gfy = function(d) {
        if (d == tbl.language.EN || d == tbl.language.US) {
            return new xjr()
        } else {
            if (d == tbl.language.ES || d == tbl.language.CO || d == tbl.language.MX || d == tbl.language.CL || d == tbl.language.VE) {
                return new xkj()
            } else {
                if (d == tbl.language.DE || d == tbl.language.AT) {
                    return new rel()
                } else {
                    if (d == tbl.language.PT || d == tbl.language.BR) {
                        return new hys()
                    } else {
                        if (d == tbl.language.RU) {
                            return new but()
                        } else {
                            if (d == tbl.language.EE) {
                                return new cfp()
                            } else {
                                if (d == tbl.language.TR) {
                                    return new kvr()
                                } else {
                                    if (d == tbl.language.CZ) {
                                        return new vug()
                                    } else {
                                        if (d == tbl.language.GR) {
                                            return new zxx()
                                        } else {
                                            if (d == tbl.language.BG) {
                                                return new com()
                                            } else {
                                                if (d == tbl.language.GE) {
                                                    return new ros()
                                                } else {
                                                    if (d == tbl.language.HU) {
                                                        return new ztl()
                                                    } else {
                                                        if (d == tbl.language.RO) {
                                                            return new vda()
                                                        } else {
                                                            if (d == tbl.language.FR) {
                                                                return new jmz()
                                                            } else {
                                                                if (d == tbl.language.HR) {
                                                                    return new apu()
                                                                } else {
                                                                    if (d == tbl.language.IT) {
                                                                        return new oet()
                                                                    } else {
                                                                        if (d == tbl.language.SE) {
                                                                            return new xup()
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return null
    };
    this.rjr = function(d) {
        if (d) {
            return this.hly.lrj(d)
        }
        return null
    };
    this.yoc = function() {
        this.hly.gza()
    };
    this.rlb = function() {};
    this.pde = function(d) {
        this.hly.wrj(d)
    };
    this.uht = function(d) {
        this.hly.wef(d)
    };
    this.udg = function() {
        this.kik();
        var d = this.zwb.aar("history");
        this.grs = true;
        this.ced = true;
        if (d) {
            d.wri(true)
        }
        this.xnx(this.ipx(this.language.jmy))
    };
    this.gam = function() {
        loadGame("hist_" + tbl.zbv.wkz.toLowerCase(), tbl.xyy.value30 + "/" + tbl.zbv.wkz.toLowerCase() + "/src/hist_" + tbl.zbv.wkz.toLowerCase(), "UTF-8");
        removeGame(tbl.zbv.wkz.toLowerCase(), tbl.xyy.value30 + "/" + tbl.zbv.wkz.toLowerCase() + "/src/" + tbl.zbv.wkz.toLowerCase())
    };
    this.bgb = function() {
        var d = "./history_" + this.wkz.toLowerCase() + ".html";
        if (sessionStorage.sessionValue12) {
            d += "?config=" + sessionStorage.sessionValue12
        }
        window.location.href = d
    };
    this.mgs = function() {
        var d = null;
        if (tbl.zbv.xfp) {
            return
        }
        if (sessionStorage.sessionValue5 != null) {
            tbl.zbv.hch({
                type: "quit",
                sender: tbl.zbv.wkz,
                lang: sessionStorage.sessionValue1.toUpperCase()
            });
            sessionStorage.exitGame = "true";
            d = decodeURIComponent(sessionStorage.sessionValue5);
            tbl.zbv.por();
             if (d !== "(api)") {
               window.parent.postMessage('CloseGame',"*");
            }
        } else {
            removeGame(tbl.zbv.wkz.toLowerCase(), tbl.xyy.value30 + "/" + tbl.zbv.wkz.toLowerCase() + "/src/" + tbl.zbv.wkz.toLowerCase());
            removeGame("hist_" + tbl.zbv.wkz.toLowerCase(), tbl.xyy.value30 + "/" + tbl.zbv.wkz.toLowerCase() + "/src/hist_" + tbl.zbv.wkz.toLowerCase());
            loadMenu("menu", tbl.xyy.value1001, "UTF-8", true)
        }
    };
    this.aco = function() {
        var d = null;
        if (sessionStorage.sessionValue5 != null) {
            tbl.zbv.hch({
                type: "quit",
                sender: tbl.zbv.wkz,
                lang: sessionStorage.sessionValue1.toUpperCase()
            });
            d = decodeURIComponent(sessionStorage.sessionValue5);
            tbl.zbv.por();
             if (d !== "(api)") {
               window.parent.postMessage('CloseGame',"*");
            }
        } else {
            removeGame(tbl.zbv.wkz.toLowerCase(), tbl.xyy.value30 + "/" + tbl.zbv.wkz.toLowerCase() + "/src/" + tbl.zbv.wkz.toLowerCase());
            removeGame("hist_" + tbl.zbv.wkz.toLowerCase(), tbl.xyy.value30 + "/" + tbl.zbv.wkz.toLowerCase() + "/src/hist_" + tbl.zbv.wkz.toLowerCase());
            loadMenu("menu", tbl.xyy.value1001, "UTF-8", false)
        }
    };
    this.por = function() {
        if (!tbl.zbv.vjm && tbl.xyy.value83) {
            sessionStorage.clear()
        }
    };
    this.jem = function(f) {
        var g = null;
        if (this.oal) {
            for (var e = 0, d = f.length; e < d; e++) {
                g = f[e];
                if (g.oai !== tbl.lgc.pkz) {
                    if (g.oai === tbl.lgc.goj || g.oai === tbl.lgc.lka) {
                        g.Title = this.language.sld;
                        g.Text = (g.oai === tbl.lgc.goj) ? this.language.rlp : this.language.ftg;
                        g.Buttons = [{
                            Text: this.language.dwn,
                            Action: "quit"
                        }]
                    } else {
                        if (g.oai === tbl.lgc.ylh) {
                            g.Title = this.language.bzs;
                            g.Text = this.language.zxo + "\n";
                            if (sessionStorage.sessionValue16 && sessionStorage.sessionValue16 != "null") {
                                g.Text += this.language.bvh;
                                g.Buttons = [{
                                    Text: this.ipx(this.language.uap),
                                    Action: "history"
                                }, {
                                    Text: this.language.dwn,
                                    Action: "quit"
                                }]
                            } else {
                                g.Buttons = [{
                                    Text: this.language.dwn,
                                    Action: "quit"
                                }]
                            }
                        } else {
                            if (g.oai === tbl.lgc.quq || g.oai === tbl.lgc.rag || g.oai === tbl.lgc.omh) {
                                g.Title = this.udn;
                                if (g.oai === tbl.lgc.quq) {
                                    g.Text = this.language.jvs + " " + this.vte + " " + this.language.bkb + "\n\n" + this.language.dva
                                } else {
                                    if (g.oai === tbl.lgc.rag) {
                                        g.Text = this.language.ejs + " " + (this.vte - this.wvw) + " " + this.language.uzg + "\n\n" + this.language.dva
                                    } else {
                                        if (g.oai === tbl.lgc.omh) {
                                            g.Text = this.language.cmz + ": " + this.wvw + "\n" + this.language.rwx + ": " + this.fyo(this.hic)
                                        }
                                    }
                                }
                                g.Buttons = [{
                                    Text: this.language.ok,
                                    Action: "continue"
                                }]
                            }
                        }
                    }
                    if (g.oai === tbl.lgc.jpi || g.oai === tbl.lgc.kbw) {
                        g.Title = this.language.wan;
                        g.Text = this.language.tao;
                        g.Buttons = [{
                            Text: this.language.ok,
                            Action: "continue"
                        }]
                    } else {
                        if (g.oai === tbl.lgc.uvk) {
                            g.Title = this.language.gzz;
                            g.Text = this.language.mrp;
                            g.Buttons = [{
                                Text: this.language.ok,
                                Action: "continue"
                            }]
                        } else {
                            if (g.oai === tbl.lgc.roulette.vso || g.oai === tbl.lgc.roulette.tgq) {
                                g.Title = this.language.sld;
                                g.Text = (g.oai === tbl.lgc.roulette.vso) ? this.language.iyq : this.language.ife;
                                g.Buttons = [{
                                    Text: this.language.dwn,
                                    Action: "quit"
                                }]
                            }
                        }
                    }
                }
            }
            this.oal.qvt(f)
        }
    };
    this.stop = function() {
        this.tbw();
        this.pik();
        this.ozv();
        clearTimeout(this.gmt);
        if (!this.vjm) {
            clearInterval(this.zfi)
        }
        this.zwb.nwi("autop", "#stop");
        this.zwb.nwi("settings", "#stop");
        this.zwb.nwi("topb", "#stop")
    };
    this.qcu = function() {
        var d = false;
        if (this.vhb.toLowerCase().indexOf("freeplay") === 0) {
            d = true
        } else {
            if (this.lno == "freeplay" && this.ufi == "freeplay") {
                d = true
            } else {
                if (this.iji && (this.iji == "b71d982ffcbe56eb8cd11fa05963bbee" || this.iji.toLowerCase() == "freeplay")) {
                    d = true
                } else {
                    if (tbl.xyy.value68 != null && this.enw.toLowerCase() === tbl.xyy.value68.toLowerCase()) {
                        d = true
                    }
                }
            }
        }
        if (d === true) {
            tbl.xyy.value21.e = false;
            if (tbl.xyy.value76) {
                tbl.xyy.value76.f = false
            }
        }
        return d
    };
    this.idi = function() {
        return (tbl.xyy.value65 > 0)
    };
    this.ykt = function() {
        return (((tbl.vpf.lhl === tbl.os.ufm && tbl.vpf.pxd() === true) || tbl.vpf.lhl === tbl.os.ijc) && this.vjm === false)
    };
    this.gfn = function() {
        return false
    };
    this.blb = function() {
        if (tbl.zbv.idi() && tbl.zbv.gfn()) {
            clearTimeout(tbl.zbv.sfm);
            tbl.zbv.sfm = setTimeout(tbl.zbv.vml, tbl.xyy.value65)
        }
    };
    this.iti = function() {
        if (tbl.zbv.idi() && tbl.zbv.sfm >= 0) {
            if (tbl.zbv.gfn()) {
                clearTimeout(tbl.zbv.sfm);
                tbl.zbv.sfm = setTimeout(tbl.zbv.vml, tbl.xyy.value65)
            } else {
                clearTimeout(tbl.zbv.sfm);
                tbl.zbv.sfm = -1
            }
        }
    };
    this.pik = function() {
        if (tbl.zbv.idi()) {
            clearTimeout(tbl.zbv.sfm);
            tbl.zbv.sfm = -1
        }
    };
    this.tfi = function() {
        return false
    };
    this.xcn = function() {
        return false
    };
    this.kfr = function() {
        if (tbl.zbv.tfi() && tbl.zbv.xcn() && tbl.zbv.qsn < 0) {
            clearTimeout(tbl.zbv.qsn);
            tbl.zbv.qsn = setTimeout(tbl.zbv.jij, tbl.zbv.bml)
        }
    };
    this.vtw = function() {
        if (tbl.zbv.tfi() && tbl.zbv.qsn >= 0) {
            if (tbl.zbv.xcn()) {
                clearTimeout(tbl.zbv.qsn);
                tbl.zbv.qsn = setTimeout(tbl.zbv.jij, tbl.zbv.bml)
            } else {
                clearTimeout(tbl.zbv.qsn);
                tbl.zbv.qsn = -1
            }
        }
    };
    this.ozv = function() {
        if (tbl.zbv.tfi()) {
            clearTimeout(tbl.zbv.qsn);
            tbl.zbv.qsn = -1
        }
    };
    this.jij = function() {};
    this.yxq = function() {};
    this.guw = function(f) {
        var e = Number(f.replace(/_*/g, "")),
            d = Number(this.mag.replace(/_*/g, ""));
        if (e > d) {
            this.mag = f
        }
    };
    this.nhk = function(g) {
        var e = (g && !this.hwo),
            f = this.zwb.aar("topb"),
            d = this.zwb.aar("topi");
        if (d) {
            d.jug(e)
        }
        if (f) {
            f.jug(e);
            f.bfs(e)
        }
    };
    this.hfb = function(g) {
        var e = (g && !this.hwo),
            f = this.zwb.aar("topb"),
            d = this.zwb.aar("topi");
        if (d) {
            d.jug(e)
        }
        if (f) {
            f.jug(e);
            f.pnb(e)
        }
    };
    this.txl = function(g) {
        var e = (g && !this.hwo),
            f = this.zwb.aar("topb"),
            d = this.zwb.aar("topi");
        if (d) {
            d.jug(e)
        }
        if (f) {
            f.jug(e);
            f.ucx(e)
        }
    };
    this.shh = function() {
        var d = this.zwb.aar("topb");
        if (d && !d.iac()) {
            this.hly.jsl("panel_in");
            this.hly.dvl("panel_in");
            d.qvt()
        }
    };
    this.wuy = function(d) {
        var e = this.zwb.aar("topb");
        if (e && e.iac()) {
            this.hly.jsl("panel_out");
            this.hly.dvl("panel_out");
            if (d) {
                e.evy = d
            }
            e.pwz()
        }
    };
    this.fyo = function(f) {
        if (this.hyn > 0) {
            return (f * this.hyn).toFixed(0).toString()
        } else {
            if (tbl.xyy.value21.e == false || this.xfp == true) {
                return f.toString()
            } else {
                var e = Number(f),
                    d = 0;
                if (tbl.xyy.value21.m != 1) {
                    e = f * tbl.xyy.value21.m;
                    var g = tbl.xyy.value21.m.toString().indexOf(".");
                    if (g > 0) {
                        d = tbl.xyy.value21.m.toString().length - (g + 1)
                    }
                }
                e = e.toFixed(d).toString();
                e = this.yrv(e, (d == 0) ? 0 : d + 1);
                return e
            }
        }
    };
    this.jdq = function(f) {
        if (this.hyn > 0) {
            var e = (f * this.hyn).toFixed(0).toString();
            if (tbl.xyy.value21.e == true && tbl.xyy.value21.m == 1 && tbl.xyy.value21.s && this.xfp == false) {
                e = tbl.xyy.value21.s + " " + e
            }
            return e
        } else {
            if (tbl.xyy.value21.e == false || this.xfp == true) {
                return f.toString()
            } else {
                var e = Number(f),
                    d = 0;
                if (tbl.xyy.value21.m != 1) {
                    e = f * tbl.xyy.value21.m;
                    var g = tbl.xyy.value21.m.toString().indexOf(".");
                    if (g > 0) {
                        d = tbl.xyy.value21.m.toString().length - (g + 1)
                    }
                }
                e = e.toFixed(d).toString();
                e = this.yrv(e, (d == 0) ? 0 : d + 1);
                if (tbl.xyy.value21.s) {
                    e = tbl.xyy.value21.s + " " + e
                }
                return e
            }
        }
    };
    this.yrv = function(l, k) {
        var e = "",
            g = "",
            f = "",
            d = [];
        l = l.toString();
        k = (k) ? k : 0;
        f = l.substring(l.length - k, l.length);
        g = l.substring(0, l.length - k);
        if (g.length < 4) {
            if (tbl.xyy.value21.cs != null) {
                l = l.replace(/\./, tbl.xyy.value21.cs)
            }
            return l.toString()
        } else {
            d[0] = g.substring(g.length - 3, g.length);
            for (var j = 1; j * 3 < g.length; j++) {
                d[j] = g.substring(g.length - (j + 1) * 3, g.length - j * 3)
            }
            for (var j = d.length - 1; j >= 0; j--) {
                e += d[j];
                if (j > 0) {
                    if (tbl.xyy.value21.ts != null) {
                        e += tbl.xyy.value21.ts
                    }
                }
            }
            if (tbl.xyy.value21.cs != null) {
                f = f.replace(/\./, tbl.xyy.value21.cs)
            }
            return e + f
        }
    };
    this.ffz = function(f) {
        if (this.hyn > 0) {
            return (f * this.hyn).toFixed(0).toString()
        } else {
            if (tbl.xyy.value76.f == false || this.xfp == true) {
                return f.toString()
            } else {
                var e = Number(f),
                    d = 0;
                if (tbl.xyy.value76.m != 1) {
                    e = f * tbl.xyy.value76.m;
                    var g = tbl.xyy.value76.m.toString().indexOf(".");
                    if (g > 0) {
                        d = tbl.xyy.value76.m.toString().length - (g + 1)
                    }
                }
                e = e.toFixed(d).toString();
                e = this.qmr(e, (d == 0) ? 0 : d + 1);
                return e
            }
        }
    };
    this.ejo = function(f) {
        if (this.hyn > 0) {
            var e = (f * this.hyn).toFixed(0).toString();
            if (tbl.xyy.value76.f == true && tbl.xyy.value76.m == 1 && tbl.xyy.value76.s && this.xfp == false) {
                e = tbl.xyy.value76.s + " " + e
            }
            return e
        } else {
            if (tbl.xyy.value76.f == false || this.xfp == true) {
                return f.toString()
            } else {
                var e = Number(f),
                    d = 0;
                if (tbl.xyy.value76.m != 1) {
                    e = f * tbl.xyy.value76.m;
                    var g = tbl.xyy.value76.m.toString().indexOf(".");
                    if (g > 0) {
                        d = tbl.xyy.value76.m.toString().length - (g + 1)
                    }
                }
                e = e.toFixed(d).toString();
                e = this.qmr(e, (d == 0) ? 0 : d + 1);
                if (tbl.xyy.value76.s) {
                    e = tbl.xyy.value76.s + " " + e
                }
                return e
            }
        }
    };
    this.qmr = function(l, k) {
        var e = "",
            g = "",
            f = "",
            d = [];
        l = l.toString();
        k = (k) ? k : 0;
        f = l.substring(l.length - k, l.length);
        g = l.substring(0, l.length - k);
        if (g.length < 4) {
            if (tbl.xyy.value76.cs != null) {
                l = l.replace(/\./, tbl.xyy.value76.cs)
            }
            return l.toString()
        } else {
            d[0] = g.substring(g.length - 3, g.length);
            for (var j = 1; j * 3 < g.length; j++) {
                d[j] = g.substring(g.length - (j + 1) * 3, g.length - j * 3)
            }
            for (var j = d.length - 1; j >= 0; j--) {
                e += d[j];
                if (j > 0) {
                    if (tbl.xyy.value76.ts != null) {
                        e += tbl.xyy.value76.ts
                    }
                }
            }
            if (tbl.xyy.value76.cs != null) {
                f = f.replace(/\./, tbl.xyy.value76.cs)
            }
            return e + f
        }
    };
    this.ipx = function(d) {
        if (d && sessionStorage.sessionValue1 !== tbl.language.GE) {
            return d.toUpperCase()
        }
        return d
    };
    this.mvd = function() {
        for (var e = 0, d = this.agu.twc.xyj.length; e < d; e++) {
            this.zwb.oro(this.agu.twc.xyj[e].jqn, this.jju(this.agu.twc.xyj[e], this.bnl.baa.exo[this.agu.twc.xyj[e].exo], this.bnl.baa.display, this.style.baa.wsr[this.agu.twc.xyj[e].exo], null), ["jackpots"])
        }
        this.zwb.oro("jwp", this.jju(null, this.bnl.baa.ivc.exo, this.bnl.baa.ivc, this.style.baa.ivc, this.hly.lrj("jackpot")));
        this.zwb.nwi("jwp", "#yaf", [false]);
        if (this.fac()) {
            this.zwb.oro("mjwp", this.bsz(this.bnl.baa.ezl.exo, this.bnl.baa.ezl, this.style.baa.ezl, this.hly.lrj("mj_bg"), this.hly.lrj("mj_font"), this.hly.lrj("mj_label"), [this.hly.lrj("mj_0"), this.hly.lrj("mj_1"), this.hly.lrj("mj_2"), this.hly.lrj("mj_3"), this.hly.lrj("mj_4"), this.hly.lrj("mj_5")]));
            this.zwb.nwi("mjwp", "#yaf", [false])
        }
    };
    this.ezt = function() {
        var e = this.zwb.kew("jackpots"),
            f = this.zwb.aar("jwp"),
            j = this.zwb.aar("mjwp");
        for (var g = 0, d = e.length; g < d; g++) {
            e[g].gix(this.bnl.baa.exo[this.agu.twc.xyj[g].exo]);
            e[g].ylm(this.bnl.baa.display)
        }
        if (f) {
            f.gix(this.bnl.baa.ivc.exo);
            f.ylm(this.bnl.baa.ivc)
        }
        if (j) {
            j.gix(this.bnl.baa.ezl.exo);
            j.ylm(this.bnl.baa.ezl)
        }
    };
    this.jju = function(f, k, j, g, d) {
        var e = new sbv();
        e.brv(k, null, this.context2D);
        e.parent = this;
        e.vpm = d;
        e.ioq(g);
        e.ylm(j);
        if (f) {
            e.xif(f.lbd);
            e.tsr(f.value)
        }
        return e
    };
    this.bsz = function(k, j, g, l, m, f, e) {
        var d = new nar();
        d.brv(k, null, this.context2D);
        d.parent = this;
        d.pvy = l;
        d.ddp = m;
        d.vdm = f;
        d.oaz = e;
        d.ioq(g);
        d.ylm(j);
        return d
    };
    this.teh = function(f) {
        if (this.hgo() === true) {
            for (var e = 0, d = f.length; e < d; e++) {
                this.zwb.nwi(f[e].jqn, "#tsr", [f[e].value])
            }
            this.yud()
        }
    };
    this.acb = function(d) {
        if (this.hgo() === true) {
            this.baa = {
                jqn: d.jqn,
                value: d.value,
                nko: d.nko
            }
        }
    };
    this.irx = function() {
        this.baa = null
    };
    this.lnm = function() {
        return false
    };
    this.fac = function() {
        return false
    };
    this.hgo = function() {
        return (!this.vjm && this.agu.twc.xyj.length > 0 && this.lnm())
    };
    this.hio = function() {
        return (this.baa != null)
    };
    this.yuc = function() {
        return (tbl.xyy.value86 === true && ((sessionStorage.sessionValue19 && sessionStorage.sessionValue19 != "null") || (sessionStorage.sessionValue20 && sessionStorage.sessionValue20 != "null") || (sessionStorage.sessionValue21 && sessionStorage.sessionValue21 != "null")))
    };
    this.cqa = function() {
        if (this.ian() && this.btf()) {
            this.gyf()
        }
    };
    this.btf = function() {
        return false
    };
    this.ian = function() {
        if (this.vjm) {
            return false
        }
        return (this.agu.twc.emv.length + this.agu.twc.ibb.length > 0)
    };
    this.gyf = function() {
        var g = null,
            e = this.agu.twc.emv.length,
            d = this.agu.twc.ibb.length;
        if (d + e > 0) {
            for (var f = e - 1; f >= 0; f--) {
                g = this.agu.twc.emv.splice(f, 1)[0];
                g.oai = tbl.lgc.pkz;
                this.xmu.push(g)
            }
            for (var f = d - 1; f >= 0; f--) {
                g = this.agu.twc.ibb.splice(f, 1)[0];
                g.oai = tbl.lgc.pkz;
                this.xmu.push(g)
            }
            if (this.oal && !this.oal.iac()) {
                this.bdg()
            }
        }
    };
    this.bdg = function() {
        var d = null;
        if (this.xmu.length > 0) {
            d = this.xmu.shift();
            this.jem([d])
        }
    };
    this.eph = function() {
        if (tbl.zbv.nfc.length > 0) {
            tbl.zbv.jem(tbl.zbv.nfc)
        }
    };
    this.kmq = function() {
        this.xmu.length = 0
    };
    this.qni = function() {
        this.nfc.length = 0;
        if (this.ruq) {
            this.ruq.pwz()
        }
    };
    this.owx = function() {
        var f = null,
            d = this.agu.twc.nfc.length;
        if (d > 0) {
            for (var e = d - 1; e >= 0; e--) {
                f = this.agu.twc.nfc.splice(e, 1)[0];
                f.oai = tbl.lgc.pkz;
                this.nfc.push(f)
            }
            if (this.ruq) {
                this.ruq.qvt(this.nfc[0].Title, this.nfc[0].Text, this.nfc.length)
            }
        }
    };
    this.glh = function() {
        var d = false;
        if (this.oal && this.oal.iac()) {
            d = true
        }
        if (this.ruq && this.ruq.iac()) {
            d = true
        }
        if (this.yuc()) {
            d = true
        }
        if (this.xhk) {
            this.xhk.style.display = (d) ? "block" : "none"
        }
    };
    this.tus = function() {
        this.nhk(false);
        this.kdj.bfs(false);
        this.kdj.zgu.nwi("info", "#vjt");
        this.jem([{
            oai: tbl.lgc.ylh
        }])
    };
    this.hll = function() {
        tbl.zbv.bgp = true
    };
    this.uek = function() {
        this.boo = new wtz().brv(this, tbl.xyy.value6)
    };
    this.xxe = function() {
        if (this.boo) {
            this.boo.connect(this.wkz, this.lno, this.ufi, this.iji, this.mag, true)
        }
    };
    this.gab = function() {
        if (tbl.zbv.boo) {
            tbl.zbv.boo.connect(tbl.zbv.wkz, tbl.zbv.lno, tbl.zbv.ufi, tbl.zbv.iji, tbl.zbv.mag, false)
        }
    };
    this.wkv = function() {};
    this.nil = function() {};
    this.zya = function(d) {
        if (!this.qcu() && !this.vjm) {
            clearTimeout(this.gmt);
            if (this.buj()) {
                this.gmt = setTimeout(this.qly, d)
            } else {
                if (Number(sessionStorage.sessionValue17) > 0) {
                    this.gmt = setTimeout(this.hll, Number(sessionStorage.sessionValue17) * 60000)
                }
            }
        }
    };
    this.qly = function() {
        tbl.zbv.kdw = true
    };
    this.buj = function() {
        return tbl.xyy.value36 || tbl.xyy.value37
    }
}

function rsc() {
    this.brv = function() {
        this.huh("btn", this.nkx);
        this.huh("gamble_on", this.nkx);
        this.huh("gamble_off", this.nkx);
        this.huh("panel_in", this.nkx);
        this.huh("panel_out", this.nkx);
        this.huh("audioon", this.nkx);
        for (var a = 0; a < 12; a++) {
            this.huh("step" + a, this.nkx)
        }
        this.huh("maxstep", this.nkx);
        this.huh("start", 0.2);
        this.huh("gambleprop", this.hmc);
        this.huh("freespinstart", 0.5)
    }
}
rsc.prototype = new kqn;

function vie() {
    this.bvn = {
        raz: 84,
        zxv: -1,
        value: "T",
        vzp: null
    };
    this.nuy = {
        raz: 82,
        zxv: -1,
        value: "R",
        vzp: null
    };
    this.wvo = {
        raz: 80,
        zxv: -1,
        value: "P",
        vzp: null
    };
    this.pag = {
        raz: 77,
        zxv: -1,
        value: "M",
        vzp: null
    };
    this.start = {
        raz: 32,
        zxv: -1,
        value: "SPACE",
        vzp: null
    };
    this.hwo = {
        raz: 16,
        zxv: -1,
        value: "SHIFT",
        vzp: null
    };
    this.pgr = {
        raz: 38,
        zxv: -1,
        value: "\u25B2",
        vzp: null
    };
    this.jdl = {
        raz: 40,
        zxv: -1,
        value: "\u25BC",
        vzp: null
    };
    this.ntl = {
        raz: 39,
        zxv: -1,
        value: "\u25B6",
        vzp: null
    };
    this.vto = {
        raz: 37,
        zxv: -1,
        value: "\u25C0",
        vzp: null
    };
    this.odb = {
        raz: 71,
        zxv: -1,
        value: "G",
        vzp: null
    };
    this.mtm = {
        raz: 27,
        zxv: -1,
        value: "ESC",
        vzp: null
    };
    this.language = {
        raz: 76,
        zxv: -1,
        value: "L",
        vzp: null
    };
    this.rhn = {
        raz: 13,
        zxv: -1,
        value: "ENTER",
        vzp: null
    };
    this.xaz = {
        raz: 27,
        zxv: -1,
        value: "ESC",
        vzp: null
    };
    this.eiq = {
        raz: 39,
        zxv: -1,
        value: "\u25B6",
        vzp: null
    };
    this.fbj = {
        raz: 37,
        zxv: -1,
        value: "\u25C0",
        vzp: null
    };
    this.mhv = {
        raz: 27,
        zxv: -1,
        value: "ESC",
        vzp: null
    };
    this.flx = {
        raz: 32,
        zxv: -1,
        value: "SPACE",
        vzp: null
    };
    this.wnw = {
        raz: 8,
        zxv: -1,
        value: "BACKSPACE",
        vzp: null
    };
    this.eff = {
        raz: 82,
        zxv: -1,
        value: "R",
        vzp: null
    };
    this.bzv = {
        raz: 66,
        zxv: -1,
        value: "B",
        vzp: null
    };
    this.suz = {
        raz: 72,
        zxv: -1,
        value: "H",
        vzp: null
    };
    this.dpq = {
        raz: 68,
        zxv: -1,
        value: "D",
        vzp: null
    };
    this.fkn = {
        raz: 83,
        zxv: -1,
        value: "S",
        vzp: null
    };
    this.zwp = {
        raz: 67,
        zxv: -1,
        value: "C",
        vzp: null
    };
    this.jkr.push(this.bvn);
    this.jkr.push(this.wvo);
    this.jkr.push(this.start);
    this.jkr.push(this.hwo);
    this.jkr.push(this.pgr);
    this.jkr.push(this.jdl);
    this.jkr.push(this.ntl);
    this.jkr.push(this.vto);
    this.jkr.push(this.odb);
    this.jkr.push(this.mtm);
    this.jkr.push(this.language)
}
vie.prototype = new rlv;

function obi() {
    this.uaw = new Image();
    this.vfc = 0;
    this.ypw = 0;
    this.yzo = 0;
    this.brv = function(c, a, b, d) {
        this.uaw = c;
        this.ypw = b;
        this.vfc = a;
        this.yzo = d;
        return this
    }
}

function okf() {
    var a = this;
    this.vpm = new Image();
    this.wsk = null;
    this.lbr = null;
    this.yys = null;
    this.win = 0;
    this.left = 0;
    this.lpx = 1500;
    this.ibu = false;
    this.jis = 0;
    this.pup = 0;
    this.ugo = 0;
    this.zxc = 370;
    this.hmu = 0;
    this.mya = "arial";
    this.jgr = "bold";
    this.dux = 1;
    this.mss = null;
    this.phv = null;
    this.ifh = null;
    this.btu = null;
    this.zua = null;
    this.xpi = null;
    this.rhz = "black";
    this.wmm = null;
    this.vkc = null;
    this.kox = null;
    this.mbo = null;
    this.fit = null;
    this.zcn = null;
    this.lni = null;
    this.wul = null;
    this.esd = 40;
    this.vhi = 100;
    this.qwu = 26;
    this.uer = 4;
    this.cds = 8;
    this.uua = 2;
    this.mvj = 3;
    this.hpk = 3;
    this.eqy = 3;
    this.brv = function(c, e, d, b) {
        okf.prototype.brv.call(this, c, e, d);
        this.vpm = b
    };
    this.ylm = function(b) {
        try {
            this.mbo = b.rjm;
            this.fit = b.uts;
            this.zcn = b.mwg;
            this.lni = b.hfz;
            this.wul = b.wnk;
            this.esd = b.zel;
            this.vhi = b.hhy;
            this.qwu = b.nlq;
            this.uer = b.ulo;
            this.cds = b.pmf;
            this.uua = b.qlz;
            this.mvj = b.mhi;
            this.hpk = b.lbi;
            this.eqy = b.crl
        } catch (c) {
            console.error(c)
        }
    };
    this.ioq = function(b) {
        try {
            this.mya = b.font;
            this.jgr = b.ghh;
            this.dux = b.lcr;
            this.mss = b.den;
            this.phv = b.gsp;
            this.ifh = b.cvs;
            this.btu = b.wxq;
            this.zua = b.qtm;
            this.xpi = b.krt;
            this.rhz = b.cgp;
            this.wmm = b.kke;
            this.vkc = b.gpj;
            this.kox = b.irj
        } catch (c) {
            console.error(c)
        }
    };
    this.cmi = function(b, d) {
        var c = (this.parent.ajb() === true) ? this.parent.bnl.exn.exo : this.parent.bnl.zbv.exo;
        if (b >= c.x && b <= c.x + c.width && d >= c.y && d <= c.y + c.height && this.iac()) {
            return true
        }
        return false
    };
    this.arh = function() {};
    this.usa = function(b) {
        if (this.iac()) {
            return true
        }
        return false
    };
    this.vrb = function() {};
    this.start = function() {
        this.jis = 0;
        this.ibu = true;
        this.hmu = setTimeout(this.nzx, 800)
    };
    this.nzx = function() {
        a.kzt();
        a.yxh()
    };
    this.kzt = function() {
        this.pup = this.win;
        this.parent.hly.dvl("addfreespin" + this.pup)
    };
    this.bbe = function() {
        this.parent.hly.jsl("addfreespin" + this.pup)
    };
    this.stop = function() {
        this.ibu = false;
        this.bbe();
        clearTimeout(this.hmu)
    };
    this.yfv = function() {
        return this.ibu
    };
    this.yxh = function() {
        var c = a.zxc;
        if (a.jis == 0) {
            a.ugo = new Date().getTime()
        } else {
            var b = new Date().getTime();
            c = a.zxc + (a.jis * a.zxc - (b - a.ugo))
        }
        a.jis++;
        a.win--;
        a.left++;
        a.parent.yud(a.x, a.y, a.width, a.height);
        c = (c < 0) ? 0 : c;
        if (a.win > 0) {
            a.hmu = setTimeout(a.yxh, c)
        } else {
            a.hmu = setTimeout(a.parent.djo, a.lpx)
        }
    };
    this.yud = function() {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        var b = this.context2D,
            d = (this.width - this.vpm.width) / 2,
            c = (this.height - this.vpm.height) / 2;
        b.save();
        b.clearRect(0, 0, this.width, this.height);
        b.drawImage(this.vpm, d, c);
        if (this.wsk != null) {
            if (this.mss) {
                tbl.vpf.zso(b, d + this.mbo.x, c + this.mbo.y, this.mbo.width, this.mbo.height, this.eqy, this.mss, this.dux, this.phv, this.hpk, 1)
            }
            tbl.vpf.haz(b, this.wsk, this.ifh, d + this.mbo.x, c + this.mbo.y + this.uer, this.mbo.width, this.mbo.height, this.mya, this.esd, this.jgr)
        }
        if (this.lbr != null) {
            if (this.wmm) {
                tbl.vpf.zso(b, d + this.fit.x, c + this.fit.y, this.fit.width, this.fit.height, this.eqy, this.wmm, this.dux, this.vkc, this.hpk, 1)
            }
            tbl.vpf.haz(b, this.lbr, this.kox, d + this.fit.x, c + this.fit.y + this.uua, this.fit.width, this.fit.height, this.mya, this.qwu, this.jgr)
        }
        if (this.yys != null) {
            if (this.wmm) {
                tbl.vpf.zso(b, d + this.zcn.x, c + this.zcn.y, this.zcn.width, this.zcn.height, this.eqy, this.wmm, this.dux, this.vkc, this.hpk, 1)
            }
            tbl.vpf.haz(b, this.yys, this.kox, d + this.zcn.x, c + this.zcn.y + this.uua, this.zcn.width, this.zcn.height, this.mya, this.qwu, this.jgr)
        }
        if (this.win != null) {
            if (this.btu) {
                tbl.vpf.zso(b, d + this.lni.x, c + this.lni.y, this.lni.width, this.lni.height, this.eqy, this.btu, this.dux, this.zua, this.hpk, 1)
            }
            tbl.vpf.haz(b, this.win.toString(), this.xpi, d + this.lni.x, c + this.lni.y + this.cds, this.lni.width, this.lni.height, this.mya, this.vhi, this.jgr, this.rhz, this.mvj)
        }
        if (this.left != null) {
            if (this.btu) {
                tbl.vpf.zso(b, d + this.wul.x, c + this.wul.y, this.wul.width, this.wul.height, this.eqy, this.btu, this.dux, this.zua, this.hpk, 1)
            }
            tbl.vpf.haz(b, this.left.toString(), this.xpi, d + this.wul.x, c + this.wul.y + this.cds, this.wul.width, this.wul.height, this.mya, this.vhi, this.jgr, this.rhz, this.mvj)
        }
        b.restore();
        if (this.kee && this.srn) {
            this.kee.drawImage(this.srn, this.x, this.y)
        }
    }
}
okf.prototype = new ryi;

function mbx() {
    var a = this;
    this.vpm = new Image();
    this.zrm = null;
    this.ilh = null;
    this.mjx = null;
    this.nab = false;
    this.mya = "arial";
    this.jgr = "bold";
    this.ezn = "white";
    this.gpn = "black";
    this.dux = 0.6;
    this.mss = null;
    this.zhc = null;
    this.wmm = null;
    this.cvg = null;
    this.fzw = null;
    this.uor = null;
    this.esd = 16;
    this.zlk = 30;
    this.qwu = 16;
    this.yju = 0;
    this.eqy = 4;
    this.brv = function(c, e, d, b) {
        mbx.prototype.brv.call(this, c, e, d);
        this.vpm = b;
        this.nab = true
    };
    this.ylm = function(b) {
        try {
            this.cvg = b.syy;
            this.blz = b.bzy;
            this.uor = b.oor;
            this.esd = b.zel;
            this.zlk = b.rjc;
            this.qwu = b.nlq;
            this.yju = b.qde;
            this.eqy = b.crl
        } catch (c) {
            console.error(c)
        }
    };
    this.ioq = function(b) {
        try {
            this.mya = b.font;
            this.jgr = b.ghh;
            this.ezn = b.dhs;
            this.gpn = b.niw;
            this.dux = b.lcr;
            this.mss = b.den;
            this.zhc = b.vdr;
            this.wmm = b.kke
        } catch (c) {
            console.error(c)
        }
    };
    this.cmi = function(b, d) {
        var c = (this.parent.ajb() === true) ? this.parent.bnl.exn.exo : this.parent.bnl.zbv.exo;
        if (b >= c.x && b <= c.x + c.width && d >= c.y && d <= c.y + c.height && this.iac()) {
            if (this.nab) {
                this.parent.afo()
            }
            return true
        }
        return false
    };
    this.arh = function() {};
    this.usa = function(b) {
        if (this.iac()) {
            if (this.nab) {
                this.parent.afo()
            }
            return true
        }
        return false
    };
    this.vrb = function() {};
    this.jug = function(b) {
        a.nab = b
    };
    this.yud = function() {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        var b = this.context2D,
            d = (this.width - this.vpm.width) / 2,
            c = (this.height - this.vpm.height) / 2;
        b.save();
        b.clearRect(0, 0, this.width, this.height);
        b.drawImage(this.vpm, d, c);
        if (this.ilh != null) {
            if (this.zhc) {
                tbl.vpf.zso(b, d + this.blz.x, c + this.blz.y, this.blz.width, this.blz.height, this.eqy, this.zhc, this.dux)
            }
            tbl.vpf.haz(b, this.ilh, this.ezn, d + this.blz.x, c + this.blz.y, this.blz.width, this.blz.height, this.mya, this.zlk, this.jgr, this.gpn, this.yju)
        }
        if (this.zrm != null) {
            if (this.mss) {
                tbl.vpf.zso(b, d + this.cvg.x, c + this.cvg.y, this.cvg.width, this.cvg.height, this.eqy, this.mss, this.dux)
            }
            tbl.vpf.haz(b, this.zrm, this.ezn, d + this.cvg.x, c + this.cvg.y, this.cvg.width, this.cvg.height, this.mya, this.esd, this.jgr)
        }
        if (this.mjx != null) {
            if (this.wmm) {
                tbl.vpf.zso(b, d + this.uor.x, c + this.uor.y, this.uor.width, this.uor.height, this.eqy, this.wmm, this.dux)
            }
            this.iaj(this.mjx, this.mya, this.qwu, this.uor)
        }
        b.restore();
        if (this.kee && this.srn) {
            this.kee.drawImage(this.srn, this.x, this.y)
        }
    };
    this.iaj = function(o, p, e, d) {
        var r = this.context2D,
            b = [],
            g = "",
            z = 0,
            A = 0,
            v = 0,
            B = 1,
            j = 0,
            f = 0,
            k = 0,
            t = 0,
            n = d.width,
            u = d.height,
            m = (this.width - this.vpm.width) / 2 + d.x,
            l = (this.height - this.vpm.height) / 2 + d.y,
            q = e,
            c = 0;
        r.save();
        r.fillStyle = this.ezn;
        r.strokeStyle = this.gpn;
        r.textBaseline = "bottom";
        r.lineJoin = "round";
        r.lineCap = "round";
        r.textAlign = "center";
        r.font = this.jgr + " " + q + "px " + p;
        c = r.measureText(o).width / n;
        c = (c > Math.round(c)) ? Math.round(c) + 1 : Math.round(c);
        f = q / 4;
        k = (c > 1) ? q * c + f * (c - 1) : q;
        if (k > u) {
            B = u / (k);
            q = Math.round(q * B) - 1;
            r.font = this.jgr + " " + q + "px " + p;
            c = r.measureText(o).width / n;
            c = (c > Math.round(c)) ? Math.round(c) + 1 : Math.round(c)
        }
        for (var s = v; s < o.length; s++) {
            g += o.charAt(s);
            j = r.measureText(g).width;
            if (o.charAt(s) == " " || o.charAt(s) == "|") {
                z = s
            }
            if (j >= n || o.charAt(s) == "|") {
                if (s < o.length - 1) {
                    b[A] = o.substring(v, z);
                    A++;
                    v = z + 1;
                    g = o.substring(z + 1, s)
                } else {
                    b[A] = o.substring(v, o.length)
                }
            } else {
                if (s == o.length - 1) {
                    b[A] = o.substring(v, o.length)
                }
            }
        }
        f = q / 4;
        k = (A > 0) ? q * (A + 1) + f * (A) : q;
        for (var s = 0; s < b.length; s++) {
            t = (q) * (s + 1) + f * (s);
            r.fillText(b[s], m + n / 2, l + (u - k) / 2 + t)
        }
        r.restore()
    }
}
mbx.prototype = new ryi;

function xpz() {
    this.gia = 0;
    this.mir = 0;
    this.win = 0;
    this.mya = "sans-serif";
    this.jgr = "bold";
    this.ezn = null;
    this.prk = null;
    this.kca = null;
    this.kip = null;
    this.yff = 16;
    this.qkt = 0;
    this.nlb = 0;
    this.hpk = 2;
    this.avs = 3;
    this.dwo = 3;
    this.qvc = 3;
    this.dpy = 3;
    this.ylm = function(a) {
        try {
            this.yff = a.fontSize;
            this.qkt = a.mam;
            this.nlb = a.rgf;
            this.hpk = a.lbi;
            this.avs = a.hix;
            this.dwo = a.pda;
            this.qvc = a.kud;
            this.dpy = a.mbf
        } catch (b) {
            console.error(b)
        }
    };
    this.ioq = function(a) {
        try {
            this.mya = a.font;
            this.jgr = a.ghh;
            this.ezn = a.dhs;
            this.prk = a.borderColor;
            this.kca = a.qlp;
            this.kip = a.backgroundColor
        } catch (b) {
            console.error(b)
        }
    };
    this.vrs = function(a, c, b, d) {
        this.gia = a;
        this.mir = c;
        this.win = b;
        if (d && d === true && this.context2D != null && this.iac() === true) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.kcs = function(a, b) {
        this.win = a;
        if (b && b === true && this.context2D != null && this.iac() === true) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.yud = function() {
        if (!this.iac()) {
            return
        }
        var a = this.context2D,
            b = null;
        a.save();
        a.lineJoin = "round";
        a.lineCap = "round";
        a.textAlign = "center";
        if (this.kca) {
            b = a.createLinearGradient(this.x + this.width / 2, this.y, this.x + this.width / 2, this.y + this.height);
            b.addColorStop(0, this.prk);
            b.addColorStop(1, this.kca);
            tbl.vpf.vzm(a, this.x, this.y, this.width, this.height, this.avs, this.dwo, this.qvc, this.dpy, this.kip, 1, b, this.hpk, 1)
        } else {
            tbl.vpf.vzm(a, this.x, this.y, this.width, this.height, this.avs, this.dwo, this.qvc, this.dpy, this.kip, 1, this.prk, this.hpk, 1)
        }
        tbl.vpf.bww(a, tbl.zbv.language.cmz + ":", this.ezn, this.x + this.hpk + this.qkt, this.y + this.nlb, 2 * this.width / 3 - this.hpk, this.height / 2, this.mya, this.yff, this.jgr, 0);
        tbl.vpf.bww(a, tbl.zbv.language.rwx + ":", this.ezn, this.x + this.hpk + this.qkt, this.y + this.height / 2 + this.nlb, 2 * this.width / 3 - this.hpk, this.height / 2, this.mya, this.yff, this.jgr, 0);
        tbl.vpf.ptw(a, this.mir + "/" + this.gia, this.ezn, this.x + this.hpk + 2 * this.width / 3, this.y + this.nlb, this.width / 3 - this.hpk - this.qkt, this.height / 2, this.mya, this.yff, this.jgr, 0);
        tbl.vpf.ptw(a, this.win, this.ezn, this.x + this.hpk + 2 * this.width / 3, this.y + this.height / 2 + this.nlb, this.width / 3 - this.hpk - this.qkt, this.height / 2, this.mya, this.yff, this.jgr, 0);
        a.restore();
        if (this.kee && this.srn) {
            this.kee.drawImage(this.srn, this.x, this.y)
        }
    }
}
xpz.prototype = new ryi;

function fxq() {
    var a = this;
    this.pgw = false;
    this.zgu = null;
    this.nab = false;
    this.hcs = -1;
    this.mtc = 0;
    this.fta = null;
    this.onq = 800;
    this.qtd = 0;
    this.kip = null;
    this.fah = null;
    this.pfr = null;
    this.rjo = 0;
    this.pbx = null;
    this.sad = null;
    this.ycz = null;
    this.pvr = null;
    this.bad = 0;
    this.baz = 0;
    this.dhf = new drx();
    this.xbg = new drx();
    this.eox = 30;
    this.brv = function(b, d, c) {
        fxq.prototype.brv.call(this, b, d, c);
        this.wkk()
    };
    this.zfg = function(c, b) {
        try {
            this.eox = c.owy;
            this.dhf = c.mga;
            this.xbg = c.hzo;
            this.zeg(c);
            this.oex(c);
            this.olw(c);
            this.znc(c);
            this.xyk(c);
            this.ioq(b, false)
        } catch (d) {
            console.error(d)
        }
    };
    this.ylm = function(g, r) {
        try {
            var d = {},
                c = this.zgu.aar("info"),
                k = this.zgu.aar("win"),
                s = this.zgu.aar("creditd"),
                o = this.zgu.aar("betd"),
                p = this.zgu.aar("betpopup"),
                n = this.zgu.aar("idd"),
                q = this.zgu.aar("timed"),
                b = this.zgu.aar("freeround"),
                m = this.zgu.kew("buttons");
            if (this.parent.ajb() || (this.parent.vjm && this.parent.vqz)) {
                if ((this.parent.smu() == null || this.parent.smu().o == false) && this.parent.style.zbv.czc == true) {
                    d = g.imf
                } else {
                    d = g.ivt
                }
            } else {
                if (r) {
                    if (this.parent.smu() != null) {
                        d = g.gtg
                    } else {
                        d = g.oqo
                    }
                } else {
                    if (this.parent.smu() != null) {
                        if (!this.parent.acf()) {
                            d = g.bcf
                        } else {
                            d = g.qfr
                        }
                    } else {
                        if (tbl.xyy.value57 === tbl.ui.phg || this.tfd()) {
                            if (!this.parent.acf()) {
                                d = g.qmo
                            } else {
                                d = g.mzb
                            }
                        } else {
                            if (tbl.xyy.value57 === tbl.ui.mjj) {
                                if (!this.parent.acf()) {
                                    d = g.jun
                                } else {
                                    d = g.zry
                                }
                            } else {
                                if (tbl.xyy.value57 === tbl.ui.csy) {
                                    if (!this.parent.acf()) {
                                        d = g.mhr
                                    } else {
                                        d = g.qoy
                                    }
                                }
                            }
                        }
                    }
                }
            }
            this.eox = g.owy;
            this.dhf = g.mga;
            this.xbg = g.hzo;
            if (s) {
                s.ylm(g.display);
                s.gix(g.ami)
            }
            if (o) {
                o.ylm(g.display);
                o.gix(g.que)
            }
            if (p) {
                p.ylm(g.ldl);
                p.gix(g.fhw)
            }
            if (n) {
                n.ylm(g.sal);
                n.gix(g.hso)
            }
            if (q) {
                q.ylm(g.sal);
                q.gix(g.flo)
            }
            if (c) {
                c.ylm(g.gzz);
                c.gix(g.gzz.exo)
            }
            if (k) {
                k.ylm(g.win);
                k.gix(g.win.exo)
            }
            if (b) {
                b.ylm(g.hws);
                b.gix(g.hws.exo)
            }
            for (var f = 0, j = m.length; f < j; f++) {
                if (m[f] instanceof kjn) {
                    m[f].ylm(g.wmv)
                }
            }
            if (this.parent.smu() != null) {
                if (this.parent.ajb() === true) {
                    if (this.parent.smu().o === true || this.parent.style.zbv.czc == false) {
                        this.zgu.nwi("start", "#ylm", [g.qij])
                    } else {
                        this.zgu.nwi("start", "#ylm", [g.yqk])
                    }
                } else {
                    this.zgu.nwi("start", "#ylm", [g.yqk]);
                    this.zgu.nwi("astart", "#ylm", [g.qij])
                }
            } else {
                this.zgu.nwi("start", "#ylm", [g.yqk]);
                if (this.parent.ajb() === true) {} else {
                    if (tbl.xyy.value57 === tbl.ui.phg || this.tfd()) {
                        this.zgu.nwi("astart", "#ylm", [g.yqk])
                    }
                }
            }
            if (r) {
                this.zgu.nwi("start", "#gix", [d.ote]);
                this.zgu.nwi("astart", "#gix", [d.bjy]);
                this.zgu.nwi("setting", "#gix", [d.fyi])
            } else {
                this.zgu.nwi("start", "#gix", [d.ote]);
                this.zgu.nwi("astart", "#gix", [d.bjy]);
                this.zgu.nwi("bet", "#gix", [d.zhb]);
                this.zgu.nwi("gamble", "#gix", [d.jkk]);
                this.zgu.nwi("exit", "#gix", [d.dep]);
                this.zgu.nwi("help", "#gix", [d.dep]);
                this.zgu.nwi("lang", "#gix", [d.omc]);
                this.zgu.nwi("line", "#gix", [d.uyb]);
                this.zgu.nwi("setting", "#gix", [d.fyi])
            }
        } catch (l) {
            console.error(l)
        }
    };
    this.ioq = function(b, r) {
        try {
            var d = this.zgu.aar("info"),
                l = this.zgu.aar("win"),
                p = this.zgu.aar("betpopup"),
                c = this.zgu.aar("freeround"),
                j = this.zgu.kew("displays"),
                o = this.zgu.aar("idd"),
                q = this.zgu.aar("timed"),
                n = this.zgu.kew("buttons"),
                g = (r === true) ? b.yiz : b.rns;
            this.kip = g.backgroundColor;
            this.fah = g.anv;
            this.pfr = g.rxl;
            this.rjo = g.tci;
            this.sad = g.utk;
            this.ycz = g.etc;
            if (d) {
                d.ioq(g.gzz)
            }
            if (l) {
                l.ioq(g.win)
            }
            if (c) {
                c.ioq(b.hws)
            }
            for (var f = 0, k = n.length; f < k; f++) {
                n[f].ioq((this.parent.bnl.btl === false) ? g.hek : (this.parent.jpr === tbl.bnl.fae) ? g.zxq : g.okr)
            }
            for (var f = 0, k = j.length; f < k; f++) {
                j[f].ioq(b.display)
            }
            if (p) {
                p.ioq(b.ldl)
            }
            if (o) {
                o.ioq(b.sal)
            }
            if (q) {
                q.ioq(b.sal)
            }
            if (this.parent.ajb() === true) {
                this.zgu.nwi("bet", "#ioq", [b.xzz])
            }
        } catch (m) {
            console.error(m)
        }
    };
    this.cmi = function(t, s, u) {
        var r = this.zgu.kew("buttons"),
            g = this.zgu.aar("line"),
            k = this.zgu.aar("bet"),
            c = this.zgu.aar("start"),
            p = this.zgu.aar("betd"),
            f = this.zgu.aar("creditd"),
            b = this.parent.zwb.aar("betsel"),
            e = this.parent.zwb.aar("linesel"),
            o = t - this.x,
            m = s - this.y;
        for (var n = 0, q = r.length; n < q; n++) {
            var d = r[n];
            if (o >= d.x && o <= d.x + d.width && m >= d.y && m <= d.y + d.height && d.iac() == true) {
                if (d.vib() && !d.lmr()) {
                    if (!this.parent.ajb() && (d === k || d === g)) {
                        d.phd(true, true, false);
                        for (var l = 0; l < q; l++) {
                            r[l].mrr(true, false)
                        }
                        d.xcv();
                        this.fta = function() {
                            if (d.xcv() === true) {
                                clearInterval(a.mtc);
                                d.phd(false, true);
                                for (var v = 0; v < q; v++) {
                                    r[v].mrr(false)
                                }
                            }
                        };
                        this.mtc = setInterval(this.fta, d.zmn)
                    } else {
                        if (d === c && c.xcv === this.hpr) {
                            d.phd(true, true, false)
                        } else {
                            d.phd(true, true)
                        }
                        d.xcv();
                        for (var l = 0; l < q; l++) {
                            r[l].mrr(true)
                        }
                    }
                    return true
                }
            }
        }
        if (k && k.vib() && !k.lmr() && k.iac()) {
            if (p && o >= p.x && o <= p.x + p.width && m >= p.y && m <= p.y + p.height) {
                if (!u) {
                    if ((b && b.vib()) && ((e && e.vib()) || !e)) {
                        this.parent.kzx()
                    }
                    return true
                }
            } else {
                if (f && o >= f.x && o <= f.x + f.width && m >= f.y && m <= f.y + f.height) {
                    if (!u) {
                        this.parent.ipl()
                    }
                    return true
                }
            }
        }
        return false
    };
    this.arh = function() {
        var f = this.zgu.kew("buttons"),
            k = this.zgu.aar("bet"),
            l = this.zgu.aar("line"),
            g = this.zgu.aar("start");
        for (var e = 0, b = f.length; e < b; e++) {
            var d = f[e];
            if (d.sea() === true) {
                d.phd(false, true);
                if (tbl.xyy.value82 && d == g) {
                    for (var c = 0; c < b; c++) {
                        f[c].mrr(false)
                    }
                }
                if (d === k || d === l) {
                    clearInterval(this.mtc);
                    for (var c = 0; c < b; c++) {
                        f[c].mrr(false)
                    }
                } else {
                    if (d === g && g.xcv === this.hpr) {
                        clearTimeout(this.qtd);
                        if (this.parent.hwo === false) {
                            this.zgu.nwi("start", "#uet")
                        }
                    }
                }
                return true
            }
        }
        return false
    };
    this.usa = function(c) {
        var m = this.zgu.kew("buttons"),
            f = this.zgu.aar("bet"),
            e = this.zgu.aar("line"),
            b = this.zgu.aar("start");
        for (var k = 0, l = m.length; k < l; k++) {
            var d = m[k];
            if (c == d.inp) {
                if (d.vib() && !d.lmr() && d.iac()) {
                    if (tbl.xyy.value82 && d == b) {
                        d.phd(true, true, false);
                        for (var g = 0; g < l; g++) {
                            m[g].mrr(true, false)
                        }
                    } else {
                        d.phd(true, true);
                        d.xcv();
                        for (var g = 0; g < l; g++) {
                            m[g].mrr(true)
                        }
                    }
                }
                return true
            }
        }
        if (c == this.parent.xcw.jdl.raz) {
            if (f && f.vib() && !f.lmr() && f.iac()) {
                this.parent.uqe();
                for (var g = 0, l = m.length; g < l; g++) {
                    m[g].mrr(true)
                }
            }
            return true
        } else {
            if (c == this.parent.xcw.vto.raz) {
                if (e && e.vib() && !e.lmr() && e.iac()) {
                    this.parent.uaz();
                    for (var g = 0, l = m.length; g < l; g++) {
                        m[g].mrr(true)
                    }
                }
                return true
            }
        }
        return false
    };
    this.vrb = function(g) {
        var f = this.zgu.kew("buttons"),
            k = this.zgu.aar("start");
        for (var e = 0, b = f.length; e < b; e++) {
            var d = f[e];
            if (d.sea() == true && g == d.inp) {
                if (tbl.xyy.value82 && d == k) {
                    d.xcv();
                    for (var c = 0; c < b; c++) {
                        f[c].mrr(false)
                    }
                }
                d.phd(false, true);
                return true
            }
        }
        return false
    };
    this.eue = function(n, m, o) {
        var l = this.zgu.kew("buttons"),
            e = this.zgu.aar("bet"),
            d = this.zgu.aar("line"),
            b = this.zgu.aar("start"),
            p = this.zgu.aar("astart");
        if (n != null && m != null) {
            var j = n - this.x;
            var f = m - this.y;
            for (var g = 0, k = l.length; g < k; g++) {
                var c = l[g];
                if (j >= c.x && j <= c.x + c.width && f >= c.y && f <= c.y + c.height && c.iac() && c.vib() && !c.lmr()) {
                    return c.xcv
                }
            }
        } else {
            if (o != null) {
                for (var g = 0, k = l.length; g < k; g++) {
                    var c = l[g];
                    if (o == c.inp && c.iac() && c.vib() && !c.lmr()) {
                        if (c == b || c == p) {
                            return null
                        }
                        return c.xcv
                    }
                }
                if (o == this.parent.xcw.jdl.raz && e && e.iac() && e.vib() && !e.lmr()) {
                    return this.parent.uqe
                } else {
                    if (o == this.parent.xcw.vto.raz && d && d.iac() && d.vib() && !d.lmr()) {
                        return this.parent.uaz
                    }
                }
            }
        }
        return null
    };
    this.wkk = function() {
        this.zgu = new nhr();
        this.zgu.brv();
        this.zgu.hbx("displays");
        this.zgu.hbx("buttons");
        this.zgu.hbx("allbuttons");
        this.zgu.hbx("infos");
        this.zgu.hbx("start");
        this.zgu.hbx("auto");
        this.zgu.hbx("collect");
        this.zgu.hbx("freespin");
        this.zgu.hbx("game");
        this.zgu.hbx("settings")
    };
    this.xyk = function(b) {
        var c = this.flv(b.gzz.exo);
        c.ylm(b.gzz);
        this.zgu.oro("info", c, ["infos"])
    };
    this.znc = function(b) {
        var c = this.flv(b.win.exo);
        c.font = this.parent.iau;
        c.vpm = this.parent.hly.lrj("s_symb");
        c.nql = this.parent.hly.lrj("s_symb").height / this.parent.dif.length;
        c.ylm(b.win);
        this.zgu.oro("win", c, ["infos"])
    };
    this.olw = function(b) {
        var c = new xpz();
        c.brv(b.hws.exo, this.context2D, null);
        c.parent = this;
        c.ylm(b.hws);
        c.yaf(false);
        this.zgu.oro("freeround", c)
    };
    this.oex = function(c) {
        var b = {};
        if (this.parent.ajb() || (this.parent.vjm && this.parent.vqz)) {
            if ((this.parent.smu() == null || this.parent.smu().o == false) && this.parent.style.zbv.czc == true) {
                b = c.imf
            } else {
                b = c.ivt
            }
        } else {
            if (this.parent.smu() != null) {
                if (!this.parent.acf()) {
                    b = c.bcf
                } else {
                    b = c.qfr
                }
            } else {
                if (tbl.xyy.value57 === tbl.ui.phg || this.tfd()) {
                    if (!this.parent.acf()) {
                        b = c.qmo
                    } else {
                        b = c.mzb
                    }
                } else {
                    if (tbl.xyy.value57 === tbl.ui.mjj) {
                        if (!this.parent.acf()) {
                            b = c.jun
                        } else {
                            b = c.zry
                        }
                    } else {
                        if (tbl.xyy.value57 === tbl.ui.csy) {
                            if (!this.parent.acf()) {
                                b = c.mhr
                            } else {
                                b = c.qoy
                            }
                        }
                    }
                }
            }
        }
        if (this.parent.smu() != null) {
            if (this.parent.ajb() === true) {
                if (this.parent.smu().o == true || this.parent.style.zbv.czc == false) {
                    this.zgu.oro("start", this.qco(b.ote, (this.parent.bnl.chn === false) ? this.parent.language.start : null, (this.parent.bnl.chn === false) ? "---" : "A", (this.parent.bnl.chn === false) ? this.parent.hly.lrj("btn") : this.parent.hly.lrj("btn_sp"), null, this.hpr, (!this.parent.vjm) ? this.parent.xcw.start : null, c.qij), ["buttons", "allbuttons", "start", "collect", "freespin", "game"])
                } else {
                    this.zgu.oro("start", this.tyo(b.ote, (this.parent.bnl.chn === false) ? this.parent.language.start : null, (this.parent.bnl.chn === false) ? this.parent.hly.lrj("btn") : this.parent.hly.lrj("btn_sp"), (this.parent.bnl.chn === false) ? null : this.parent.hly.lrj("btn_sph"), this.parent.hat, null, c.yqk), ["buttons", "allbuttons", "start", "collect", "freespin", "game"]);
                    this.zgu.oro("astart", this.qco(b.bjy, null, (this.parent.bnl.chn === false) ? "---" : "A", this.parent.hly.lrj("btn_astl"), null, this.parent.pep, null, c.wmv), ["buttons", "allbuttons", "start", "auto", "collect", "freespin", "game"])
                }
            } else {
                this.zgu.oro("start", this.tyo(b.ote, (this.parent.bnl.chn === false) ? this.parent.language.start : null, (this.parent.bnl.chn === false) ? this.parent.hly.lrj("btn") : this.parent.hly.lrj("btn_sp"), null, this.parent.hat, (!this.parent.vjm) ? this.parent.xcw.start : null, c.yqk), ["buttons", "allbuttons", "start", "collect", "freespin", "game"]);
                this.zgu.oro("astart", this.qco(b.bjy, this.parent.language.hlz, (this.parent.bnl.chn === false) ? "---" : "A", this.parent.hly.lrj("btn"), null, this.parent.pep, (!this.parent.vjm) ? this.parent.xcw.hwo : null, c.qij), ["buttons", "allbuttons", "start", "auto", "collect", "freespin", "game"])
            }
        } else {
            if (this.parent.ajb() === true) {
                if (this.parent.style.zbv.czc) {
                    this.zgu.oro("start", this.tyo(b.ote, (this.parent.bnl.chn === false) ? this.parent.language.start : null, (this.parent.bnl.chn === false) ? this.parent.hly.lrj("btn") : this.parent.hly.lrj("btn_sp"), (this.parent.bnl.chn === false) ? null : this.parent.hly.lrj("btn_sph"), this.parent.hat, null, c.yqk), ["buttons", "allbuttons", "start", "collect", "freespin", "game"]);
                    this.zgu.oro("astart", this.tyo(b.bjy, null, this.parent.hly.lrj("btn_ast"), null, this.parent.pep, null, c.wmv), ["buttons", "allbuttons", "start", "auto", "collect", "freespin", "game"])
                } else {
                    this.zgu.oro("start", this.tyo(b.ote, (this.parent.bnl.chn === false) ? this.parent.language.start : null, (this.parent.bnl.chn === false) ? this.parent.hly.lrj("btn") : this.parent.hly.lrj("btn_asp"), (this.parent.bnl.chn === false) ? null : this.parent.hly.lrj("btn_asph"), this.hpr, null, c.yqk), ["buttons", "allbuttons", "start", "collect", "freespin", "game"])
                }
            } else {
                this.zgu.oro("start", this.tyo(b.ote, (this.parent.bnl.chn === false) ? this.parent.language.start : null, (this.parent.bnl.chn === false) ? this.parent.hly.lrj("btn") : this.parent.hly.lrj("btn_asp"), (this.parent.bnl.chn === false) ? null : this.parent.hly.lrj("btn_asph"), this.parent.hat, (!this.parent.vjm) ? this.parent.xcw.start : null, c.yqk), ["buttons", "allbuttons", "start", "collect", "freespin", "game"]);
                this.zgu.oro("astart", this.tyo(b.bjy, this.parent.language.hwo, (tbl.xyy.value57 === tbl.ui.phg || this.tfd()) ? this.parent.hly.lrj("btn") : this.parent.hly.lrj("btn_s"), null, this.parent.pep, (!this.parent.vjm) ? this.parent.xcw.hwo : null, c.wmv), ["buttons", "allbuttons", "start", "auto", "collect", "freespin", "game"])
            }
        }
        if (this.parent.ajb() === true) {
            this.zgu.oro("bet", this.pro(b.zhb, "+", null, this.parent.dck, (!this.parent.vjm) ? this.parent.xcw.pgr : null, c.tic), ["buttons", "allbuttons"])
        } else {
            this.zgu.oro("bet", this.tyo(b.zhb, this.parent.language.hbp, this.parent.hly.lrj("btn_s"), null, this.parent.dck, (!this.parent.vjm) ? this.parent.xcw.pgr : null, c.wmv), ["buttons", "allbuttons"])
        }
        this.zgu.aar("bet").zmn = 300;
        this.zgu.oro("gamble", this.tyo(b.jkk, this.parent.language.odb, this.parent.hly.lrj("btn_s"), null, this.parent.bwh, (!this.parent.vjm) ? this.parent.xcw.odb : null, c.wmv), ["buttons", "allbuttons", "game", "auto", "collect"]);
        if (this.parent.smu() != null) {
            if (sessionStorage.sessionValue5 != null) {
                this.zgu.oro("exit", this.tyo(b.dep, (this.parent.bnl.chn === true) ? null : (tbl.xyy.value50.g === true) ? this.parent.language.dwn : this.parent.language.ybv, (this.parent.bnl.chn === false) ? this.parent.hly.lrj("btn_s") : this.parent.hly.lrj("btn_e"), null, this.parent.vml, (!this.parent.vjm) ? this.parent.xcw.mtm : null, c.wmv), ["buttons", "allbuttons", "collect"])
            } else {
                if (this.parent.ajb() === false) {
                    this.zgu.oro("help", this.tyo(b.dep, (this.parent.bnl.chn === true) ? null : this.parent.language.ehc, this.parent.hly.lrj("btn_s"), null, this.parent.xxs, (!this.parent.vjm) ? this.parent.xcw.wvo : null, c.wmv), ["buttons", "allbuttons"])
                }
            }
        } else {
            if (tbl.xyy.value57 !== tbl.ui.csy) {
                if (sessionStorage.sessionValue5 != null) {
                    this.zgu.oro("exit", this.tyo(b.dep, (this.parent.bnl.chn === true) ? null : (tbl.xyy.value50.g === true) ? this.parent.language.dwn : this.parent.language.ybv, (this.parent.bnl.chn === false) ? this.parent.hly.lrj("btn_s") : this.parent.hly.lrj("btn_e"), null, this.parent.vml, (!this.parent.vjm) ? this.parent.xcw.mtm : null, c.wmv), ["buttons", "allbuttons", "collect"])
                } else {
                    if (this.parent.ajb() === false) {
                        this.zgu.oro("help", this.tyo(b.dep, (this.parent.bnl.chn === true) ? null : this.parent.language.ehc, this.parent.hly.lrj("btn_s"), null, this.parent.xxs, (!this.parent.vjm) ? this.parent.xcw.wvo : null, c.wmv), ["buttons", "allbuttons"])
                    }
                }
            }
            if (tbl.xyy.value57 !== tbl.ui.phg && !this.tfd() && this.parent.smu() == null) {
                this.zgu.oro("lang", this.iwl(b.omc, this.parent.rjr(sessionStorage.sessionValue1), this.parent.ekz, (!this.parent.vjm) ? this.parent.xcw.language : null), ["buttons", "allbuttons"])
            }
        }
        if (this.parent.acf()) {
            this.zgu.oro("line", this.tyo(b.uyb, this.parent.language.yos, this.parent.hly.lrj("btn_s"), null, this.parent.cnm, (!this.parent.vjm) ? this.parent.xcw.ntl : null, c.wmv), ["buttons", "allbuttons"]);
            this.zgu.aar("line").zmn = 300
        }
        this.zgu.oro("setting", this.tyo(b.fyi, null, this.parent.hly.lrj("btn_m"), null, this.parent.xaj, null, c.wmv), ["buttons", "settings"])
    };
    this.zeg = function(c) {
        var b = null;
        if (!(this.parent.vjm && this.parent.vqz) && this.parent.style.zbv.ypa === false) {
            b = this.parent.hly.lrj("display_effect")
        }
        if (this.parent.ajb() === true) {
            this.zgu.oro("betpopup", this.flb(c.fhw, "", "", null, c.ldl), ["displays"]);
            this.zgu.nwi("betpopup", "#yaf", [false])
        }
        this.zgu.oro("creditd", this.flb(c.ami, (this.parent.qcu()) ? this.parent.language.yns : this.parent.language.nko, this.parent.jdq(this.parent.nko), b, c.display), ["displays"]);
        this.zgu.oro("betd", this.flb(c.que, this.parent.language.hbp, this.parent.jdq(this.parent.totalBet), b, c.display), ["displays"]);
        this.zgu.oro("idd", this.flb(c.hso, null, (this.parent.qcu() === true) ? this.parent.language.yns : "" + ((this.parent.jix > 0) ? this.parent.jix : ""), null, c.sal), ["displays"]);
        if (sessionStorage.sessionValue15 == "true" || tbl.xyy.value49) {
            this.zgu.oro("timed", this.flb(c.flo, null, "", null, c.sal), ["displays"])
        }
    };
    this.wrv = function() {
        if (this.hcs == 1) {
            this.bfs(this.nab)
        } else {
            if (this.hcs == 2) {
                this.uwi(this.nab)
            } else {
                if (this.hcs == 3) {
                    this.cqm(this.nab)
                } else {
                    if (this.hcs == 4) {
                        this.ped(this.nab)
                    } else {
                        if (this.hcs == 5) {
                            this.pwr(this.nab)
                        } else {
                            if (this.hcs == 6) {
                                this.ucx(this.nab)
                            } else {
                                if (this.hcs == 7) {
                                    this.hnx(this.nab)
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    this.bfs = function(d) {
        var c = this.zgu.kew("allbuttons"),
            e = 0,
            b = 0;
        this.nab = d;
        this.hcs = 1;
        for (e = 0, b = c.length; e < b; e++) {
            c[e].jug(d)
        }
    };
    this.uwi = function(d) {
        var c = this.zgu.kew("allbuttons"),
            f = this.zgu.kew("start"),
            e = 0,
            b = 0;
        this.nab = d;
        this.hcs = 2;
        for (e = 0, b = c.length; e < b; e++) {
            c[e].jug(false)
        }
        for (e = 0, b = f.length; e < b; e++) {
            f[e].jug(d)
        }
    };
    this.cqm = function(d) {
        var c = this.zgu.kew("allbuttons"),
            f = this.zgu.kew("game"),
            e = 0,
            b = 0;
        this.nab = d;
        this.hcs = 3;
        for (e = 0, b = c.length; e < b; e++) {
            c[e].jug(false)
        }
        for (e = 0, b = f.length; e < b; e++) {
            f[e].jug(d)
        }
    };
    this.ped = function(d) {
        var c = this.zgu.kew("allbuttons"),
            f = (this.pgw === true) ? this.zgu.kew("collect") : this.zgu.kew("game"),
            e = 0,
            b = 0;
        this.nab = d;
        this.hcs = 4;
        for (e = 0, b = c.length; e < b; e++) {
            c[e].jug(false)
        }
        for (e = 0, b = f.length; e < b; e++) {
            f[e].jug(d)
        }
    };
    this.hnx = function(d) {
        var b = this.zgu.kew("allbuttons"),
            c = this.zgu.kew("auto");
        i = 0, qyk = 0;
        this.nab = d;
        this.hcs = 7;
        for (i = 0, qyk = b.length; i < qyk; i++) {
            b[i].jug(false)
        }
        for (i = 0, qyk = c.length; i < qyk; i++) {
            c[i].jug(d)
        }
    };
    this.pwr = function(c) {
        var b = this.zgu.kew("allbuttons"),
            d = this.zgu.kew("freespin");
        i = 0, qyk = 0;
        this.nab = c;
        this.hcs = 5;
        for (i = 0, qyk = b.length; i < qyk; i++) {
            b[i].jug(false)
        }
        for (i = 0, qyk = d.length; i < qyk; i++) {
            d[i].jug(c)
        }
    };
    this.ucx = function(e) {
        var c = this.zgu.kew("allbuttons"),
            d = this.zgu.kew("settings"),
            f = 0,
            b = 0;
        this.nab = e;
        this.hcs = 6;
        for (f = 0, b = c.length; f < b; f++) {
            c[f].jug(false)
        }
        for (f = 0, b = d.length; f < b; f++) {
            d[f].jug(e)
        }
    };
    this.flb = function(c, g, f, e, b) {
        var d = new txv();
        d.brv(c, this.context2D, null, g, f);
        d.parent = this;
        d.vpm = e;
        d.ylm(b);
        return d
    };
    this.tyo = function(f, k, j, b, g, d, e) {
        var c = new kjn();
        c.brv(f, this.context2D, null, j, b, k);
        c.parent = this;
        c.xcv = g;
        c.ylm(e);
        if (d) {
            c.inp = d.raz
        }
        return c
    };
    this.qco = function(f, k, g, b, l, c, j, e) {
        var d = new kjn();
        d.brv(f, this.context2D, null, b, l, k);
        d.parent = this;
        d.xcv = c;
        d.value = g;
        d.ylm(e);
        if (j) {
            d.inp = j.raz
        }
        return d
    };
    this.pro = function(e, j, g, f, c, d) {
        var b = new qdu();
        b.brv(e, this.context2D, null, g, j);
        b.parent = this;
        b.xcv = f;
        b.ylm(d);
        if (c) {
            b.inp = c.raz
        }
        return b
    };
    this.iwl = function(d, f, e, c) {
        var b = new sgo();
        b.brv(d, this.context2D, null, f, null);
        b.parent = this;
        b.xcv = e;
        if (c) {
            b.inp = c.raz
        }
        return b
    };
    this.flv = function(b) {
        var c = new dpz();
        c.brv(b, this.context2D);
        c.parent = this;
        return c
    };
    this.tfd = function() {
        return (this.parent.vte > 0 && this.parent.wvw < this.parent.vte)
    };
    this.qod = function(c, b) {
        var d = this.zgu.aar("info");
        if (d) {
            d.dii(b);
            d.lbt(c, b)
        }
    };
    this.stop = function() {
        clearInterval(this.mtc)
    };
    this.tpk = function(b, c, d) {
        this.pvr = b;
        this.bad = c;
        this.baz = d
    };
    this.yud = function(m, j, n, f) {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        var c = (m != null && j != null && n != null && f != null),
            k = (c === true) ? new drx(m, j, n, f) : new drx(this.x, this.y, this.width, this.height),
            o = this.context2D,
            b = this.zgu.ofm();
        o.save();
        if (c) {
            if (n === 0 || f === 0) {
                return
            }
            o.beginPath();
            o.rect(m, j, n, f);
            o.closePath();
            o.clip()
        }
        o.clearRect(0, 0, this.width, this.height);
        if (this.pvr != null) {
            if (this.parent.jpr === tbl.bnl.kak) {
                o.drawImage(this.pvr, this.x + this.dhf.x + this.bad, this.y + this.dhf.y + this.baz, this.dhf.width, this.pvr.height - (this.y + this.dhf.y + this.baz), this.dhf.x, this.dhf.y, this.dhf.width, this.dhf.height)
            } else {
                o.drawImage(this.pvr, this.x + this.dhf.x + this.bad, this.y + this.dhf.y + this.baz, this.dhf.width, this.dhf.height, this.dhf.x, this.dhf.y, this.dhf.width, this.dhf.height)
            }
            if (this.xbg && this.xbg.width > 0 && this.xbg.height > 0) {
                o.drawImage(this.pvr, this.x + this.xbg.x + this.bad, this.y + this.xbg.y + this.baz, this.xbg.width, this.xbg.height, this.xbg.x, this.xbg.y, this.xbg.width, this.xbg.height)
            }
        }
        if (this.xbg && this.xbg.width > 0 && this.xbg.height > 0 && this.parent.bnl.btl === false) {
            var l = o.createLinearGradient(this.xbg.x, this.xbg.y, this.xbg.x + this.xbg.width, this.xbg.y),
                e = this.parent.hly.lrj("btn_back");
            l.addColorStop(0.2, this.sad);
            l.addColorStop(1, this.ycz);
            o.fillStyle = l;
            if (this.parent.jpr === tbl.bnl.fae) {
                o.fillRect(this.xbg.x, this.xbg.y, this.xbg.width, this.xbg.height);
                if (e) {
                    o.drawImage(e, this.xbg.x, this.xbg.y, this.xbg.width, this.xbg.height)
                }
            } else {
                if (this.parent.jpr === tbl.bnl.tqe) {
                    o.save();
                    o.translate(this.xbg.width / 2, this.xbg.height / 2);
                    o.rotate(Math.PI);
                    o.translate(-this.xbg.width / 2, -this.xbg.height / 2);
                    o.fillRect(this.xbg.x, this.xbg.y, this.xbg.width, this.xbg.height);
                    if (e) {
                        o.drawImage(e, this.xbg.x, this.xbg.y, this.xbg.width, this.xbg.height)
                    }
                    o.restore()
                }
            }
        }
        for (var d = 0, g = b.length; d < g; d++) {
            b[d].yud()
        }
        if (this.parent.kzg === true && !(this.parent.ajb() === true && this.parent.bnl.btl === false)) {
            this.parent.nqv(o, k)
        }
        o.restore();
        if (this.kee && this.srn) {
            if (c) {
                this.kee.drawImage(this.srn, m, j, n, f, this.x + m, this.y + j, n, f)
            } else {
                this.kee.drawImage(this.srn, this.x, this.y)
            }
        }
    };
    this.hpr = function() {
        if (a.parent.hwo === true) {
            a.ato()
        } else {
            a.parent.hat();
            if (a.parent.igk() === true) {
                a.zgu.nwi("start", "#iwq", [a.onq]);
                a.qtd = setTimeout(a.ato, a.onq)
            }
        }
    };
    this.ato = function() {
        a.parent.pep();
        if (a.parent.hwo === true) {
            a.zgu.nwi("start", "#qji")
        } else {
            a.zgu.nwi("start", "#uet")
        }
    }
}
fxq.prototype = new ryi;

function dol(e, b, a, c, d) {
    this.exo = {
        x: e.x || 0,
        y: e.y || 0
    };
    this.uaw = b;
    this.vtt = 0;
    this.yzo = 21;
    this.klg = a;
    this.jsw = c || 0;
    this.hka = d || 0;
    this.rnl = 100;
    this.mip = 96;
    this.mkm = function() {
        if (this.vtt < this.yzo) {
            this.vtt++
        }
        return (this.vtt >= this.yzo)
    };
    this.yud = function() {
        a.drawImage(this.uaw, this.vtt * this.rnl, 0, this.rnl, this.mip, this.exo.x, this.exo.y, this.jsw, this.hka)
    }
}

function fys() {
    this.zbh = false;
    this.lts = false;
    this.riv = false;
    this.gqc = [];
    this.keq = [];
    this.tph = [];
    this.erw = [];
    this.ilo = [];
    this.tdd = 89;
    this.xnz = 400;
    this.gxd = 3;
    this.font = "arial";
    this.ghh = "bold";
    this.zuq = true;
    this.qri = true;
    this.aba = null;
    this.isf = false;
    this.smt = [];
    this.ddz = 0;
    this.umw = false;
    this.wxl = false;
    this.yum = 0;
    this.dwg = 0;
    this.qex = false;
    this.ftq = true;
    this.plt = false;
    this.jsd = false;
    this.vmf = 0;
    this.hkd = 0;
    this.swv = [];
    this.bxk = false;
    this.gkg = 0;
    this.kvz = 0;
    this.pho = 0;
    this.ftj = -1;
    this.dpn = 0;
    this.vdu = 0;
    this.yau = true;
    this.yts = null;
    this.ezs = [];
    this.jeg = [];
    this.ccj = null;
    this.ghk = null;
    this.qlq = 0;
    this.hxs = null;
    this.uzz = null;
    this.qnm = null;
    this.nyl = null;
    this.qah = 0.05;
    this.ptj = 4;
    this.tpg = 5;
    this.hpk = 1;
    this.spy = 0;
    this.fwd = 0;
    this.yff = 40;
    this.pdr = 12;
    this.dpr = 5;
    this.elo = 0;
    this.yhg = 100;
    this.kuj = 96;
    this.pvr = null;
    this.bad = 0;
    this.baz = 0;
    this.yrc = 0;
    this.piu = new drx();
    this.xph = [];
    this.aox = 3;
    this.umf = 6;
    this.bok = 0;
    this.vnm = new drx(0, 0, 920, 160);
    this.obr = [0, 515, 405];
    this.kbe = 40;
    this.qgi = new drx(0, 165, 920, 160);
    this.mgl = [0, 330, 420];
    this.dbm = 40;
    this.caw = new drx(0, 330, 920, 160);
    this.pls = [0, 440, 415];
    this.tcw = 20;
    this.sqz = function() {};
    this.nyz = function() {};
    this.kpg = function() {};
    this.vpn = function() {};
    this.dab = function() {};
    this.sxc = function() {};
    this.ylm = function(a) {
        try {
            this.ptj = a.lineWidth;
            this.tpg = a.vfi;
            this.hpk = a.lbi;
            this.spy = a.ivv;
            this.fwd = a.nql;
            this.yff = a.fontSize;
            this.pdr = a.ixi;
            this.dpr = a.dvt;
            this.yhg = a.ztb;
            this.kuj = a.nix
        } catch (b) {
            console.error(b)
        }
    };
    this.ioq = function(a) {
        try {
            this.jeg = a.pwk;
            this.qlq = a.jzw;
            this.hxs = a.zst;
            this.uzz = a.rve;
            this.qnm = a.eqo;
            this.nyl = a.udt;
            this.qah = a.zxp
        } catch (b) {
            console.error(b)
        }
    };
    this.qvt = function() {
        this.riv = false;
        this.yaf(true)
    };
    this.pwz = function() {
        this.riv = false;
        this.yaf(false, true)
    };
    this.bgk = function() {
        return this.isf
    };
    this.ejg = function(d, b) {
        if (d && b) {
            this.smt = b;
            this.yts = [];
            for (var c = 0, a = d.length; c < a; c++) {
                this.yts[c] = d[c]
            }
            if (this.qri) {
                this.parent.hly.jsl("winline");
                this.parent.hly.dvl("winline")
            }
        } else {
            this.yts = null
        }
        this.isf = false;
        this.plt = false;
        this.jsd = false;
        this.riv = true;
        this.yaf(true, true)
    };
    this.start = function() {
        this.isf = true;
        this.plt = true;
        this.jsd = false;
        if (!this.umw) {
            this.gkg = 0
        } else {
            if (this.gkg >= this.pho) {
                this.gkg = 0
            }
        }
        this.ftq = true;
        this.parent.tfo = false;
        this.wxl = (this.parent.dds >= (this.parent.hmq - 1));
        if (this.umw && this.qri) {
            if (!this.parent.rxf && this.parent.rls) {
                this.parent.hly.jsl("winline");
                this.parent.hly.dvl("winline")
            }
        }
        this.sqz()
    };
    this.stop = function() {
        this.isf = false;
        this.plt = false;
        this.ljm();
        clearInterval(this.yum);
        clearTimeout(this.dwg);
        clearTimeout(this.parent.iaz)
    };
    this.lfh = function(d, c, a, f, j, e, b, g) {
        if (this.riv) {
            this.riv = false;
            this.parent.yud()
        }
        this.ftj = f;
        this.ddz = d;
        this.smt = c;
        this.vdu = j;
        this.dpn = e;
        this.yau = a;
        this.umw = g;
        if (b) {
            this.oib()
        } else {
            this.gao()
        }
    };
    this.oib = function() {
        this.vdx();
        this.start()
    };
    this.gao = function() {
        this.isf = true;
        this.plt = true;
        this.ftq = false;
        this.jsd = this.zuq;
        this.ljm();
        if (!this.parent.rxf && this.qri) {
            this.parent.hly.jsl("winline");
            this.parent.hly.dvl("winline")
        }
        this.yud();
        this.kpg()
    };
    this.yxh = function() {
        if (this.bxk) {
            this.vmf++;
            if (this.vmf == 6 || this.vmf == 10 || this.vmf == 15 || (this.parent.vrd == 2 && (this.vmf == 48 || this.vmf == 55 || this.vmf == 64))) {
                this.jia()
            }
            for (var a = this.swv.length - 1; a >= 0; a--) {
                if (this.swv[a].mkm()) {
                    this.swv.shift()
                }
            }
        }
        if (this.zuq) {
            if (this.umw) {
                this.jsd = true
            } else {
                if ((this.gkg % 3) == 0) {
                    this.jsd = !this.jsd
                }
            }
        }
        if (((!this.umw || this.wxl) && this.gkg < this.pho)) {
            this.parent.yud();
            this.gkg++;
            if (this.umw) {
                this.kvz++
            }
        } else {
            if (this.umw && !this.wxl && this.kvz < this.gxd) {
                this.parent.yud();
                this.kvz++;
                this.gkg = (this.gkg < this.pho) ? this.gkg + 1 : 0
            } else {
                this.kvz = 0;
                clearInterval(this.yum);
                this.rjx()
            }
        }
    };
    this.rjx = function() {
        this.isf = false;
        this.plt = (this.zbh && this.ftq);
        if (this.plt == true && this.wxl == true && this.parent.rxf == false && this.parent.hwo == true) {
            this.plt = false
        }
        if (!this.umw || this.wxl) {
            if (!(this.lts && this.zbh) && !this.bxk) {
                this.pwz()
            }
        }
        this.parent.yud();
        this.parent.lgt();
        this.parent.hhc();
        this.parent.ucf()
    };
    this.vdx = function() {
        this.pho = 0;
        for (var a = 0; a < this.smt.length; a++) {
            for (var b = 0; b < this.smt[a].length; b++) {
                if (this.smt[a][b] >= 0) {
                    if (this.gqc[this.smt[a][b]].yzo > this.pho) {
                        this.pho = this.gqc[this.smt[a][b]].yzo
                    }
                }
            }
        }
    };
    this.hkf = function() {
        if (this.iac()) {
            this.swv = [];
            this.bxk = true;
            this.vmf = 0
        }
    };
    this.abw = function() {
        this.vmf = 0
    };
    this.ljm = function() {
        this.bxk = false
    };
    this.jia = function() {
        var e = (Math.random() > 0.7) ? 4 : 3,
            d = this.yhg * e,
            g = this.kuj * e,
            a = Math.random();
        while (Math.abs(a - this.hkd) < 0.3) {
            a = Math.random()
        }
        this.hkd = a;
        var f = Math.round(a * (this.width - d));
        a = Math.random();
        var c = Math.round(a * (this.height - g));
        var b = new dol({
            x: f,
            y: c
        }, this.parent.hly.lrj("firework"), this.context2D, d, g);
        this.swv.push(b)
    };
    this.nws = function(b) {
        this.qex = true;
        this.gkg = 0;
        this.yrc = b;
        if (this.yrc >= this.parent.jto) {
            this.piu = this.vnm;
            for (var c = 0, a = this.obr.length; c < a; c++) {
                this.xph[c] = this.obr[c]
            }
            this.parent.hly.dvl("megawin");
            this.parent.dxk(48);
            this.pho = this.kbe
        } else {
            if (this.yrc >= this.parent.bcx) {
                this.piu = this.qgi;
                for (var c = 0, a = this.mgl.length; c < a; c++) {
                    this.xph[c] = this.mgl[c]
                }
                this.parent.hly.dvl("bigwin");
                this.parent.dxk(48);
                this.pho = this.dbm
            } else {
                if (this.yrc >= this.parent.vid) {
                    this.piu = this.caw;
                    for (var c = 0, a = this.pls.length; c < a; c++) {
                        this.xph[c] = this.pls[c]
                    }
                    this.parent.hly.dvl("nicewin");
                    this.parent.dxk(24);
                    this.pho = this.tcw
                }
            }
        }
        this.pho += (this.xph.length - 1) * this.umf;
        this.bok = 0;
        this.parent.jwm(true);
        this.dab()
    };
    this.ola = function() {
        this.qex = false;
        clearInterval(this.yum);
        if (this.yrc >= this.parent.jto) {
            this.parent.hly.jsl("megawin")
        } else {
            if (this.yrc >= this.parent.bcx) {
                this.parent.hly.jsl("bigwin")
            } else {
                if (this.yrc >= this.parent.vid) {
                    this.parent.hly.jsl("nicewin")
                }
            }
        }
        this.pwz();
        this.parent.jwm(false);
        this.parent.gll()
    };
    this.tpk = function(a, b, c) {
        this.pvr = a;
        this.bad = b;
        this.baz = c
    };
    this.yud = function() {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        var d = this.context2D;
        d.save();
        d.clearRect(0, 0, this.width, this.height);
        d.lineWidth = this.ptj;
        d.lineCap = "round";
        d.lineJoin = "round";
        if (this.riv) {
            this.jmh()
        }
        if (this.plt) {
            if (this.isf && this.zbh && this.yau) {
                for (var b = 0; b < this.smt.length; b++) {
                    for (var f = 0; f < this.smt[b].length; f++) {
                        if (this.smt[b][f] != -1) {
                            if (this.ftq) {
                                this.jcv(b, f)
                            } else {
                                this.mjo(b, f)
                            }
                        }
                    }
                }
                if (this.yau) {
                    this.hhd(this.ddz)
                }
                for (var c = this.vdu; c < this.vdu + this.dpn; c++) {
                    if (this.ftj >= 0 && (this.smt[c][this.ilo[this.ddz][c] - 1] == this.ftj || this.parent.rnx(this.smt[c][this.ilo[this.ddz][c] - 1]))) {
                        if (this.ftq) {
                            this.jcv(c, this.ilo[this.ddz][c] - 1)
                        } else {
                            this.mjo(c, this.ilo[this.ddz][c] - 1)
                        }
                    }
                }
            } else {
                if (this.isf && this.yau) {
                    this.hhd(this.ddz)
                }
                for (var b = 0; b < this.smt.length; b++) {
                    for (var f = 0; f < this.smt[b].length; f++) {
                        if (this.smt[b][f] != -1) {
                            if (this.ftq) {
                                this.jcv(b, f)
                            } else {
                                this.mjo(b, f)
                            }
                        }
                    }
                }
            }
            if (this.aba) {
                for (var b = 0; b < this.smt.length; b++) {
                    for (var f = 0; f < this.smt[b].length; f++) {
                        if (this.smt[b][f] != -1) {
                            d.drawImage(this.aba, 0, f * this.fwd, this.aba.width, this.fwd, this.tph[b][f].x, this.tph[b][f].y, this.spy, this.fwd)
                        }
                    }
                }
            }
            if (this.isf) {
                if (this.ddz < 0) {
                    if (this.jeg[this.jeg.length - 2]) {
                        for (var b = 0; b < this.smt.length; b++) {
                            for (var f = 0; f < this.smt[b].length; f++) {
                                if (this.parent.ojk >= 0 && this.smt[b][f] == this.parent.ojk) {
                                    this.szx(b, f, this.jeg[this.jeg.length - 2])
                                }
                            }
                        }
                    }
                } else {
                    for (var c = this.vdu; c < this.vdu + this.dpn; c++) {
                        if (this.ftj >= 0 && (this.smt[c][this.ilo[this.ddz][c] - 1] == this.ftj || this.parent.rnx(this.smt[c][this.ilo[this.ddz][c] - 1]))) {
                            this.szx(c, this.ilo[this.ddz][c] - 1, this.jeg[this.ddz])
                        }
                    }
                }
            }
            if (this.bxk) {
                for (var e = 0, a = this.swv.length; e < a; e++) {
                    this.swv[e].yud()
                }
            }
        } else {
            if (this.qex) {
                this.uwo()
            }
        }
        d.restore();
        if (this.parent.fmo()) {
            if (this.kee && this.srn) {
                this.kee.drawImage(this.srn, this.x, this.y)
            }
        }
    };
    this.uwo = function() {
        var l = this.context2D,
            f = this.parent.hly.lrj("wins"),
            b = (this.height / 2 - this.piu.height) / 2,
            g = this.xph[0],
            a = this.gkg % this.umf,
            k = (a < this.aox) ? Math.floor(this.xph[this.bok + 1] / this.aox) * a : this.xph[this.bok + 1],
            j = (a < this.aox) ? Math.floor(this.piu.height / this.aox) * a : this.piu.height,
            c = 1,
            e = 5;
        l.save();
        if (this.gkg >= this.pho - e) {
            c = (this.pho - this.gkg) * (1 / e)
        }
        l.globalAlpha = c;
        for (var d = 0; d <= this.bok && d < this.xph.length - 1; d++) {
            if (d == this.xph.length - 2) {
                b += this.height / 2
            }
            if (d == this.bok) {
                l.drawImage(f, g, this.piu.y, this.xph[d + 1], this.piu.height, ((this.width - this.xph[d + 1]) / 2 + (this.xph[d + 1] - k) / 2), (b + (this.piu.height - j) / 2), k, j)
            } else {
                l.drawImage(f, g, this.piu.y, this.xph[d + 1], this.piu.height, (this.width - this.xph[d + 1]) / 2, b, this.xph[d + 1], this.piu.height)
            }
            g += this.xph[d + 1]
        }
        l.restore()
    };
    this.jmh = function() {
        if (this.yts) {
            this.ezs = [];
            for (var b = 0; b < this.smt.length; b++) {
                for (var d = 0; d < this.smt[b].length; d++) {
                    if (this.smt[b][d] != -1) {
                        this.mjo(b, d);
                        if (this.aba) {
                            this.context2D.drawImage(this.aba, 0, d * this.fwd, this.aba.width, this.fwd, this.tph[b][d].x, this.tph[b][d].y, this.spy, this.fwd)
                        }
                    }
                }
            }
            for (var c = 0, a = this.yts.length; c < a; c++) {
                this.lxt(this.yts[c])
            }
        } else {
            for (var c = 0; c < this.parent.yos; c++) {
                this.hhd(c)
            }
        }
    };
    this.hhd = function(c) {
        var a = this.context2D;
        a.save();
        a.strokeStyle = (this.jsd) ? this.jeg[c].fdn : this.jeg[c].fsb;
        a.lineWidth = this.ptj;
        a.beginPath();
        for (var b = 0; b < this.erw[c].length; b++) {
            if (b == 0) {
                a.moveTo(this.erw[c][b].x, this.erw[c][b].y)
            } else {
                a.lineTo(this.erw[c][b].x, this.erw[c][b].y)
            }
        }
        a.moveTo(this.erw[c][0].x, this.erw[c][0].y);
        a.stroke();
        a.strokeStyle = (this.jsd) ? this.jeg[c].jgn : this.jeg[c].pdl;
        a.lineWidth = this.ptj - 2 * this.hpk;
        a.stroke();
        a.restore()
    };
    this.lxt = function(d) {
        var a = this.context2D,
            c = null;
        a.save();
        for (var b = 1; b < this.erw[d].length; b++) {
            c = this.erw[d][b - 1].x + "_" + this.erw[d][b - 1].y + "_" + this.erw[d][b].x + "_" + this.erw[d][b].y;
            if (this.ezs.indexOf(c) < 0) {
                this.ezs.push(c);
                a.beginPath();
                a.moveTo(this.erw[d][b - 1].x, this.erw[d][b - 1].y);
                a.lineTo(this.erw[d][b].x, this.erw[d][b].y);
                a.moveTo(this.erw[d][b - 1].x, this.erw[d][b - 1].y);
                a.strokeStyle = (this.jsd) ? this.jeg[this.jeg.length - 1].fdn : this.jeg[this.jeg.length - 1].fsb;
                a.lineWidth = this.ptj;
                a.stroke();
                a.strokeStyle = (this.jsd) ? this.jeg[this.jeg.length - 1].jgn : this.jeg[this.jeg.length - 1].pdl;
                a.lineWidth = this.ptj - 2 * this.hpk;
                a.stroke()
            }
        }
        a.restore()
    };
    this.jcv = function(a, c) {
        var b = this.context2D;
        b.save();
        if (this.pvr != null) {
            this.context2D.drawImage(this.pvr, this.tph[a][c].x + this.bad, this.tph[a][c].y + this.baz, this.spy, this.fwd, this.tph[a][c].x, this.tph[a][c].y, this.spy, this.fwd)
        }
        if (this.gqc[this.smt[a][c]].yzo <= this.gkg) {
            b.drawImage(this.gqc[this.smt[a][c]].uaw, (this.gqc[this.smt[a][c]].yzo - 1) * this.gqc[this.smt[a][c]].vfc, 0, this.gqc[this.smt[a][c]].vfc, this.gqc[this.smt[a][c]].ypw, this.tph[a][c].x + (this.spy - this.gqc[this.smt[a][c]].vfc) / 2, this.tph[a][c].y + (this.fwd - this.gqc[this.smt[a][c]].ypw) / 2, this.gqc[this.smt[a][c]].vfc, this.gqc[this.smt[a][c]].ypw)
        } else {
            b.drawImage(this.gqc[this.smt[a][c]].uaw, this.gkg * this.gqc[this.smt[a][c]].vfc, 0, this.gqc[this.smt[a][c]].vfc, this.gqc[this.smt[a][c]].ypw, this.tph[a][c].x + (this.spy - this.gqc[this.smt[a][c]].vfc) / 2, this.tph[a][c].y + (this.fwd - this.gqc[this.smt[a][c]].ypw) / 2, this.gqc[this.smt[a][c]].vfc, this.gqc[this.smt[a][c]].ypw)
        }
        b.restore()
    };
    this.mjo = function(a, c) {
        var b = this.context2D;
        b.save();
        if (this.pvr != null) {
            this.context2D.drawImage(this.pvr, this.tph[a][c].x + this.bad, this.tph[a][c].y + this.baz, this.spy, this.fwd, this.tph[a][c].x, this.tph[a][c].y, this.spy, this.fwd)
        }
        b.drawImage(this.keq[this.smt[a][c]], this.tph[a][c].x + (this.spy - this.keq[this.smt[a][c]].width) / 2, this.tph[a][c].y + (this.fwd - this.keq[this.smt[a][c]].height) / 2);
        b.restore()
    };
    this.szx = function(a, d, c) {
        var b = this.context2D;
        b.save();
        if (c) {
            b.lineWidth = this.tpg;
            b.strokeStyle = (this.jsd) ? c.fdn : c.fsb;
            b.strokeRect(this.tph[a][d].x + this.tpg / 2, this.tph[a][d].y + this.tpg / 2, this.spy - this.tpg, this.fwd - this.tpg);
            b.strokeStyle = (this.jsd) ? c.jgn : c.pdl;
            b.lineWidth = this.tpg - 2 * this.hpk;
            b.strokeRect(this.tph[a][d].x + this.tpg / 2, this.tph[a][d].y + this.tpg / 2, this.spy - this.tpg, this.fwd - this.tpg)
        }
        b.restore()
    }
}
fys.prototype = new ryi;

function esm() {
    var a = this;
    this.mgj = 0;
    this.mel = 1;
    this.drr = 7;
    this.iyw = 0;
    this.xxz = 0;
    this.utu = 0;
    this.bwz = 0;
    this.qkx = this.mgj;
    this.koz = this.srp;
    this.glc = function() {
        this.yaf(true);
        this.ibu = true;
        this.nab = false;
        this.qkx = this.mgj;
        this.xxz = Math.floor(this.width / this.drr);
        this.bwz = 0;
        this.utu = 0
    };
    this.ypx = function() {
        this.ibu = true;
        this.nab = false;
        this.qkx = this.mel;
        this.xxz = -Math.floor(this.width / this.drr);
        this.bwz = 1;
        this.utu = this.width
    };
    this.jtk = function() {
        if (a.bwz < a.drr) {
            a.utu += a.xxz;
            a.bwz++;
            return true
        } else {
            a.ibu = false;
            a.nab = true;
            if (a.qkx == a.mel) {
                a.yaf(false)
            }
            return false
        }
    };
    this.dvl = function() {
        if (this.jis == this.hsh) {
            this.parent.hly.dvl("maxstep")
        } else {
            this.parent.hly.dvl("step" + (this.jis % 12))
        }
    };
    this.myq = function(b, d) {
        var c = false;
        this.jis = b;
        if (this.jis < this.kdz) {
            c = true;
            this.jis = this.kdz
        }
        if (this.jis >= this.hsh) {
            c = true;
            this.jis = this.hsh
        }
        this.rgu = this.jis + 1;
        if (c) {
            this.xcv(this.jis)
        }
        if (d && d === true) {
            this.parent.yud()
        }
    };
    this.wdq = function() {
        a.eso = false
    };
    this.yud = function() {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        this.vzk();
        if (this.kee && this.srn) {
            if (this.ibu) {
                if (this.utu > 0) {
                    if (this.koz === this.cwp) {
                        this.kee.drawImage(this.srn, this.width - this.utu, 0, this.utu, this.height, this.x, this.y, this.utu, this.height)
                    } else {
                        if (this.koz === this.srp) {
                            this.kee.drawImage(this.srn, 0, 0, this.utu, this.height, this.x + this.width - this.utu, this.y, this.utu, this.height)
                        }
                    }
                }
            } else {
                this.kee.drawImage(this.srn, this.x, this.y)
            }
        }
    };
    this.ipf = function(c) {
        var f = this.ezn,
            e = this.ezn,
            b = 0,
            d = 0;
        if (this.koz === this.srp) {
            b = this.qkt;
            d = this.nnz.x - 2 * this.qkt
        } else {
            if (this.koz === this.cwp) {
                b = this.nnz.x + this.nnz.width + this.qkt;
                d = this.width - this.qkt - (this.nnz.x + this.nnz.width + this.qkt)
            }
        }
        if (this.jis > 0 && this.jis < this.mxw.length - 1) {
            tbl.vpf.szx(c, b, this.nnz.y + ((this.lzu - this.rgu) * this.etf), d, this.etf, this.pci, this.fmi);
            tbl.vpf.ptw(c, this.parent.fyo(this.mxw[this.jis]), this.ghk, b, this.nnz.y + ((this.lzu - this.rgu) * this.etf) + (this.etf - this.yff) / 2, d, this.yff, this.mya, this.yff, this.jgr, this.qkt)
        } else {
            if (this.jis == 0) {
                f = this.ghk
            } else {
                if (this.jis == this.mxw.length - 1) {
                    e = this.ghk
                }
            }
        }
        tbl.vpf.szx(c, b, this.nnz.y + (this.etf * (this.lzu - 1)), d, this.etf, this.pci, this.fmi);
        tbl.vpf.ptw(c, this.parent.fyo(this.mxw[0]), f, b, this.nnz.y + (this.etf * (this.lzu - 1)) + (this.etf - this.yff) / 2, d, this.yff, this.mya, this.yff, this.jgr, this.qkt);
        tbl.vpf.szx(c, b, this.nnz.y, d, this.etf, this.pci, this.fmi);
        tbl.vpf.ptw(c, this.parent.fyo(this.mxw[this.mxw.length - 1]), e, b, this.nnz.y + (this.etf - this.yff) / 2, d, this.yff, this.mya, this.yff, this.jgr, this.qkt);
        tbl.vpf.haz(c, "+", this.ezn, this.mbq.x, this.mbq.y, this.mbq.width, this.mbq.height, this.mya, this.yff, this.jgr);
        tbl.vpf.haz(c, "", this.ezn, this.gqv.x, this.gqv.y, this.gqv.width, this.gqv.height, this.mya, this.yff, this.jgr);
        if (this.lbd) {
            tbl.vpf.haz(c, this.lbd, this.ezn, this.ojs.x, this.ojs.y, this.ojs.width, this.ojs.height, this.mya, this.yff, this.jgr)
        }
    }
}
esm.prototype = new wma;

function ezp() {
    var a = this;
    this.mgj = 0;
    this.mel = 1;
    this.drr = 7;
    this.iyw = 0;
    this.xxz = 0;
    this.utu = 0;
    this.bwz = 0;
    this.qkx = this.mgj;
    this.glc = function() {
        this.yaf(true);
        this.ibu = true;
        this.nab = false;
        this.qkx = this.mgj;
        this.xxz = Math.floor(this.width / this.drr);
        this.bwz = 0;
        this.utu = 0
    };
    this.ypx = function() {
        this.ibu = true;
        this.nab = false;
        this.qkx = this.mel;
        this.xxz = -Math.floor(this.width / this.drr);
        this.bwz = 1;
        this.utu = this.width
    };
    this.jtk = function() {
        if (a.bwz < a.drr) {
            a.utu += a.xxz;
            a.bwz++;
            return true
        } else {
            a.ibu = false;
            a.nab = true;
            if (a.qkx == a.mel) {
                a.yaf(false)
            }
            return false
        }
    };
    this.dvl = function() {
        if (this.jis == this.hsh) {
            this.parent.hly.dvl("maxstep")
        } else {
            this.parent.hly.dvl("step" + (this.jis % 12))
        }
    };
    this.wdq = function() {
        a.eso = false
    };
    this.yud = function() {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        this.vzk();
        if (this.kee && this.srn) {
            if (this.ibu) {
                if (this.utu > 0) {
                    if (this.koz === this.cwp) {
                        this.kee.drawImage(this.srn, this.width - this.utu, 0, this.utu, this.height, this.x, this.y, this.utu, this.height)
                    } else {
                        if (this.koz === this.srp) {
                            this.kee.drawImage(this.srn, 0, 0, this.utu, this.height, this.x + this.width - this.utu, this.y, this.utu, this.height)
                        }
                    }
                }
            } else {
                this.kee.drawImage(this.srn, this.x, this.y)
            }
        }
    };
    this.ipf = function(c) {
        var f = this.ezn,
            e = this.ezn,
            b = 0,
            d = 0;
        if (this.koz === this.srp) {
            b = this.qkt;
            d = this.nnz.x - 2 * this.qkt
        } else {
            if (this.koz === this.cwp) {
                b = this.nnz.x + this.nnz.width + this.qkt;
                d = this.width - this.qkt - (this.nnz.x + this.nnz.width + this.qkt)
            }
        }
        if (this.jis > 0 && this.jis < this.mxw.length - 1) {
            tbl.vpf.szx(c, b, this.nnz.y + ((this.lzu - this.rgu) * this.etf), d, this.etf, this.pci, this.fmi);
            tbl.vpf.bww(c, this.mxw[this.jis], this.ghk, b, this.nnz.y + ((this.lzu - this.rgu) * this.etf) + (this.etf - this.yff) / 2, d, this.yff, this.mya, this.yff, this.jgr, this.qkt)
        } else {
            if (this.jis == 0) {
                f = this.ghk
            } else {
                if (this.jis == this.mxw.length - 1) {
                    e = this.ghk
                }
            }
        }
        tbl.vpf.szx(c, b, this.nnz.y + (this.etf * (this.lzu - 1)), d, this.etf, this.pci, this.fmi);
        tbl.vpf.bww(c, this.mxw[0], f, b, this.nnz.y + (this.etf * (this.lzu - 1)) + (this.etf - this.yff) / 2, d, this.yff, this.mya, this.yff, this.jgr, this.qkt);
        tbl.vpf.szx(c, b, this.nnz.y, d, this.etf, this.pci, this.fmi);
        tbl.vpf.bww(c, this.mxw[this.mxw.length - 1], e, b, this.nnz.y + (this.etf - this.yff) / 2, d, this.yff, this.mya, this.yff, this.jgr, this.qkt);
        tbl.vpf.haz(c, "+", this.ezn, this.mbq.x, this.mbq.y, this.mbq.width, this.mbq.height, this.mya, this.yff, this.jgr);
        tbl.vpf.haz(c, "", this.ezn, this.gqv.x, this.gqv.y, this.gqv.width, this.gqv.height, this.mya, this.yff, this.jgr);
        if (this.lbd) {
            tbl.vpf.haz(c, this.lbd, this.ezn, this.ojs.x, this.ojs.y, this.ojs.width, this.ojs.height, this.mya, this.yff, this.jgr)
        }
    }
}
ezp.prototype = new wma;

function fmq() {
    this.vpm = new Image();
    this.yqd = [];
    this.unx = 0;
    this.lon = 0;
    this.dsl = [];
    this.dsa = 0;
    this.czm = 0;
    this.zde = 0;
    this.wuu = [];
    this.pvr = null;
    this.bad = 0;
    this.baz = 0;
    this.ylm = function(a) {
        try {
            this.wuu = a.uyb;
            this.czm = a.rnl;
            this.zde = a.mip
        } catch (b) {
            console.error(b)
        }
    };
    this.cmi = function(b, f, c) {
        var e = this.parent.kdj.zgu.aar("line"),
            a = this.parent.zwb.aar("betsel"),
            d = this.parent.zwb.aar("linesel");
        if (b >= this.x && b <= this.x + this.width && f >= this.y && f <= this.y + this.height && this.iac() === true) {
            if (e && e.vib() && !e.lmr()) {
                if (!c) {
                    this.parent.hly.jsl("panel");
                    this.parent.hly.dvl("panel");
                    if ((a && a.vib()) && ((d && d.vib()) || !d)) {
                        this.parent.kzx()
                    }
                    return true
                }
            }
        }
        return false
    };
    this.yud = function() {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        var c = this.context2D,
            e = false;
        if (this.pvr != null) {
            c.drawImage(this.pvr, this.x + this.bad, this.y + this.baz, this.width, this.height, this.x, this.y, this.width, this.height)
        }
        if (this.dsl.length > 0) {
            for (var f = this.unx - 1, d = 0; f <= this.lon - 1; f++, d++) {
                e = false;
                for (var b = 0, a = this.dsl.length; b < a; b++) {
                    if (this.yqd[f] === this.dsl[b]) {
                        e = true;
                        c.drawImage(this.vpm, 0, this.vpm.height / 2 + (this.yqd[f] - 1) * this.zde, this.czm, this.zde, this.x, this.y + this.wuu[d], this.czm, this.zde)
                    }
                }
                if (e === false) {
                    c.drawImage(this.vpm, 0, (this.yqd[f] - 1) * this.zde, this.czm, this.zde, this.x, this.y + this.wuu[d], this.czm, this.zde)
                }
            }
        } else {
            for (var f = this.unx - 1, d = 0; f <= this.lon - 1; f++, d++) {
                if (this.yqd[f] <= this.dsa) {
                    c.drawImage(this.vpm, 0, this.vpm.height / 2 + (this.yqd[f] - 1) * this.zde, this.czm, this.zde, this.x, this.y + this.wuu[d], this.czm, this.zde)
                } else {
                    c.drawImage(this.vpm, 0, (this.yqd[f] - 1) * this.zde, this.czm, this.zde, this.x, this.y + this.wuu[d], this.czm, this.zde)
                }
            }
        }
    };
    this.kwn = function(a, b) {
        this.dsa = a;
        if (b && b === true) {
            this.yud()
        }
    };
    this.ilr = function(b, d) {
        this.dsl = [];
        if (b) {
            for (var c = 0, a = b.length; c < a; c++) {
                this.dsl[c] = b[c]
            }
        }
        if (d && d === true) {
            this.yud()
        }
    };
    this.ztt = function(a) {
        this.vpm = a;
        this.width = this.czm;
        this.height = this.wuu[this.wuu.length - 1] + this.zde;
        this.gix(new drx(this.x, this.y, this.width, this.height))
    };
    this.tpk = function(a, b, c) {
        this.pvr = a;
        this.bad = b;
        this.baz = c
    }
}
fmq.prototype = new ryi;

function yzj(g, c, f, e, j, a, d, b) {
    this.iax = g;
    this.tsa = f;
    this.wvv = e;
    this.opv = j;
    this.wkz = c;
    this.mag = a;
    this.zeb = d;
    this.enw = b;
    this.rl = 5;
    this.r1 = [];
    this.r2 = [];
    this.r3 = [];
    this.r4 = [];
    this.r5 = [];
    this.r6 = [];
    this.r7 = [];
    this.r8 = [];
    this.r9 = [];
    this.kce = [];
    this.rkg = [];
    this.hju = [];
    this.prg = [];
    this.saa = [];
    this.xhf = [];
    this.ysy = 5;
    this.gvk = [];
    this.mmq = [];
    this.knv = [];
    this.myv = [];
    this.grt = [];
    this.cxa = [];
    this.knz = [];
    this.yvo = [];
    this.lfp = [];
    this.qqa = [];
    this.lml = [];
    this.eao = [];
    this.bsj = [];
    this.xme = [];
    this.wnv = [];
    this.nbd = [];
    this.ljy = [];
    this.tzl = [];
    this.axy = [];
    this.gpx = [];
    this.jix = 0;
    this.nko = 0;
    this.win = 0;
    this.isw = 0;
    this.rxr = 0;
    this.riu = 0;
    this.yos = 0;
    this.hld = 0;
    this.ykq = 0;
    this.lgd = 0;
    this.yls = 1;
    this.ujf = 1;
    this.rht = 0;
    this.zfa = 0;
    this.add = 0;
    this.wrm = 0;
    this.pwy = 0;
    this.ncz = 1;
    this.klm = 1;
    this.ejt = 0;
    this.wvw = 0;
    this.vte = 0;
    this.hic = 0;
    this.udn = "";
    this.prs = "";
    this.guo = "";
    this.xuy = "";
    this.hyn = 0;
    this.jtz = function(k) {
        return this.osb(k)
    };
    this.fbn = function(o) {
        if (o != null) {
            this.ooc = 0;
            this.vul = this.iei(o);
            if (this.vul == 0) {
                this.rl = this.iei(o);
                this.r1 = this.jtz(o);
                this.r2 = this.jtz(o);
                this.r3 = this.jtz(o);
                if (this.rl >= 4) {
                    this.r4 = this.jtz(o)
                }
                if (this.rl >= 5) {
                    this.r5 = this.jtz(o)
                }
                if (this.rl >= 6) {
                    this.r6 = this.jtz(o)
                }
                if (this.rl >= 7) {
                    this.r7 = this.jtz(o)
                }
                if (this.rl >= 8) {
                    this.r8 = this.jtz(o)
                }
                if (this.rl >= 9) {
                    this.r9 = this.jtz(o)
                }
                if (this.rl >= 10) {
                    this.kce = this.jtz(o)
                }
                if (this.rl >= 11) {
                    this.rkg = this.jtz(o)
                }
                if (this.rl >= 12) {
                    this.hju = this.jtz(o)
                }
                if (this.rl >= 13) {
                    this.prg = this.jtz(o)
                }
                if (this.rl >= 14) {
                    this.saa = this.jtz(o)
                }
                if (this.rl >= 15) {
                    this.xhf = this.jtz(o)
                }
                this.ysy = this.iei(o);
                if (this.ysy > 0) {
                    this.gvk = this.jtz(o);
                    this.mmq = this.jtz(o);
                    this.knv = this.jtz(o);
                    if (this.ysy >= 4) {
                        this.myv = this.jtz(o)
                    }
                    if (this.ysy >= 5) {
                        this.grt = this.jtz(o)
                    }
                    if (this.ysy >= 6) {
                        this.cxa = this.jtz(o)
                    }
                    if (this.ysy >= 7) {
                        this.knz = this.jtz(o)
                    }
                    if (this.ysy >= 8) {
                        this.yvo = this.jtz(o)
                    }
                    if (this.ysy >= 9) {
                        this.lfp = this.jtz(o)
                    }
                    if (this.ysy >= 10) {
                        this.qqa = this.jtz(o)
                    }
                    if (this.ysy >= 11) {
                        this.lml = this.jtz(o)
                    }
                    if (this.ysy >= 12) {
                        this.eao = this.jtz(o)
                    }
                    if (this.ysy >= 13) {
                        this.bsj = this.jtz(o)
                    }
                    if (this.ysy >= 14) {
                        this.xme = this.jtz(o)
                    }
                    if (this.ysy >= 15) {
                        this.wnv = this.jtz(o)
                    }
                }
                this.tia = this.nyx(o);
                this.lgc = this.iei(o);
                for (var l = 0, k = (this.rl < 5) ? 5 : this.rl; l < k; l++) {
                    this.nbd[l] = this.yom(o)
                }
                this.jix = this.yom(o);
                this.nko = this.yom(o);
                this.win = this.yom(o);
                this.riu = this.nyx(o);
                this.isw = this.yom(o);
                this.rxr = this.yom(o);
                this.yos = this.nyx(o);
                this.hld = this.yom(o);
                this.ykq = this.yom(o);
                this.lgd = this.yom(o);
                this.yls = this.yom(o);
                this.ujf = this.yom(o);
                this.rht = this.yom(o);
                this.zfa = this.yom(o);
                this.add = this.nyx(o);
                this.wrm = this.nyx(o);
                this.pwy = this.nyx(o);
                this.ncz = this.yom(o);
                this.klm = this.nyx(o);
                for (var l = 0, k = (this.ysy < 5) ? 5 : this.ysy; l < k; l++) {
                    this.ljy[l] = this.yom(o)
                }
                for (var l = 0; l < 8; l++) {
                    this.tzl[l] = this.nyx(o)
                }
                var p = this.nyx(o);
                for (var l = 0; l < p; l++) {
                    this.axy[l] = this.yom(o)
                }
                var n = this.nyx(o);
                for (var l = 0; l < n; l++) {
                    this.gpx[l] = this.yom(o)
                }
                this.flq(o);
                if (this.tia == 0) {
                    this.rfx("A/u250")
                } else {
                    this.agu.gyp()
                }
            } else {
                if (this.vul == 1) {
                    this.tia = this.nyx(o);
                    this.lgc = this.iei(o);
                    this.jix = this.yom(o);
                    this.nko = this.yom(o);
                    this.win = this.yom(o);
                    for (var l = 0, k = (this.rl < 5) ? 5 : this.rl; l < k; l++) {
                        this.nbd[l] = this.yom(o)
                    }
                    this.riu = this.nyx(o);
                    this.yos = this.nyx(o);
                    this.hld = this.yom(o);
                    this.ykq = this.yom(o);
                    this.lgd = this.yom(o);
                    this.yls = this.yom(o);
                    this.ujf = this.yom(o);
                    this.rht = this.yom(o);
                    for (var l = 0, k = (this.ysy < 5) ? 5 : this.ysy; l < k; l++) {
                        this.ljy[l] = this.yom(o)
                    }
                    var n = this.nyx(o);
                    for (var l = 0; l < n; l++) {
                        this.gpx[l] = this.yom(o)
                    }
                    for (var l = 0; l < 8; l++) {
                        this.tzl[l] = this.nyx(o)
                    }
                    this.flq(o);
                    if (this.lgc == 0) {
                        if (this.tia == tbl.ukv.uvm.jck) {
                            this.agu.gyp()
                        } else {
                            if (this.tia == tbl.ukv.uvm.jok) {
                                this.agu.utz()
                            } else {
                                if (this.tia == tbl.ukv.uvm.wkr) {
                                    this.agu.dkf()
                                } else {
                                    if (this.tia == tbl.ukv.uvm.rps) {
                                        this.agu.nii()
                                    } else {
                                        if (this.tia == tbl.ukv.uvm.vcd) {
                                            this.agu.qpl()
                                        } else {
                                            if (this.tia == tbl.ukv.uvm.pzf) {
                                                this.agu.oqq()
                                            } else {
                                                if (this.tia == tbl.ukv.uvm.lef) {
                                                    this.agu.hsj()
                                                } else {
                                                    if (this.tia == tbl.ukv.uvm.nhu) {
                                                        this.agu.eax()
                                                    } else {
                                                        if (this.tia == tbl.ukv.uvm.ooy) {
                                                            this.agu.tgs()
                                                        } else {
                                                            if (this.tia == tbl.ukv.uvm.mcw) {
                                                                this.agu.nft()
                                                            } else {
                                                                if (this.tia == tbl.ukv.uvm.roq) {
                                                                    this.agu.ere()
                                                                } else {
                                                                    if (this.tia == tbl.ukv.uvm.qnr) {
                                                                        this.agu.kkd()
                                                                    } else {
                                                                        if (this.tia == tbl.ukv.uvm.qza) {
                                                                            this.agu.gmc()
                                                                        } else {
                                                                            this.ppz()
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                        this.agu.lcd(this.lgc)
                    }
                } else {
                    if (this.vul == 2) {} else {
                        if (this.vul == 3) {
                            this.nko = this.yom(o);
                            this.agu.csd()
                        } else {
                            if (this.vul === 6 || this.vul === 7) {
                                this.qhp(o.substring(this.ooc))
                            } else {
                                if (this.vul === 8) {
                                    this.rfx("8")
                                } else {
                                    if (this.vul == 9) {
                                        this.agu.qqr.vhb = o.substring(this.ooc)
                                    } else {
                                        if (this.vul == 10) {
                                            var m = JSON.parse(o.substring(this.ooc)).Message;
                                            for (var l = 0, k = m.length; l < k; l++) {
                                                if (m[l].DisplayType == tbl.axj.ujx.mta) {
                                                    this.ibb.push(m[l])
                                                }
                                            }
                                            if (this.ibb.length > 0) {
                                                this.agu.cqa()
                                            }
                                        } else {
                                            this.kjw = this.iei(o);
                                            this.agu.wpf(o.substring(2))
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    this.flq = function(t) {
        var l = null,
            n = [],
            q = null,
            v = null,
            o = null,
            m = null,
            p = null,
            k = null;
        if (this.vul == 0) {
            l = this.yqb(t);
            if (l != "") {
                n = l.split("#");
                if (n.length >= 1) {
                    q = n[0].split("|");
                    this.prs = q[0];
                    if (q.length > 1) {
                        this.guo = q[1];
                        if (q.length > 2) {
                            this.xuy = q[2]
                        }
                    }
                    if (n.length >= 2) {
                        v = n[1].split("|");
                        if (v.length >= 1) {
                            m = v[0];
                            this.ooc = 0;
                            this.ejt = this.nyx(m);
                            this.wvw = this.yom(m);
                            this.vte = this.yom(m);
                            this.hic = this.yom(m);
                            this.udn = this.yqb(m);
                            if (v.length >= 2) {
                                k = v[1];
                                if (k) {
                                    this.hyn = parseFloat(k)
                                }
                            }
                        }
                    }
                }
            }
            if (tbl.xyy.value21.e === true && tbl.xyy.value21.s) {
                if (this.hyn == 0) {
                    this.prs = ""
                } else {
                    if (this.hyn != 0 && tbl.xyy.value21.m == 1) {
                        this.prs = ""
                    }
                }
            }
        } else {
            l = this.yqb(t);
            if (l != "") {
                n = l.split("#");
                if (n.length > 1) {
                    m = n[1];
                    o = n[1].split("|{");
                    m = o[0];
                    if (m) {
                        this.ooc = 0;
                        this.wvw = this.yom(m);
                        this.vte = this.yom(m);
                        this.hic = this.yom(m)
                    }
                    if (o.length > 1) {
                        p = "{" + o[1];
                        var r = JSON.parse(p).Message;
                        this.emv.length = 0;
                        this.nfc.length = 0;
                        for (var s = 0, u = r.length; s < u; s++) {
                            if (r[s].DisplayType == tbl.axj.ujx.mbr) {
                                this.nfc.push(r[s])
                            } else {
                                if (r[s].DisplayType == tbl.axj.ujx.mta) {
                                    this.emv.push(r[s])
                                }
                            }
                        }
                    }
                    if (this.nfc.length > 0) {
                        this.agu.owx()
                    }
                }
            }
        }
    };
    this.ppz = function() {};
    this.play = function(l, k, m) {
        this.rfx("A/u251," + l + "," + k + "," + m)
    };
    this.urn = function() {
        this.rfx("A/u254")
    };
    this.lbj = function() {
        this.rfx("A/u258")
    };
    this.odb = function(k) {
        this.rfx("A/u257," + k)
    };
    this.edg = function(l, k, m) {
        this.rfx("A/u256," + l + "," + k + "," + m)
    }
}
yzj.prototype = new ecs;

function aeu() {
    this.brv = function(a, b) {
        this.iax = b;
        this.qqr = a;
        return this
    };
    this.connect = function(c, f, e, g, a, d, b) {
        this.tsa = f;
        this.wvv = e;
        this.opv = g;
        this.wkz = c;
        this.zeb = d;
        this.enw = b;
        this.twc = new yzj(this.iax, c, f, e, g, a, d, b);
        this.twc.brv(this)
    };
    this.play = function(b, a, c) {
        this.twc.play(b, a, c)
    };
    this.edg = function(b, a, c) {
        this.twc.edg(b, a, c)
    };
    this.urn = function() {
        this.twc.urn()
    };
    this.lbj = function() {
        this.twc.lbj()
    };
    this.odb = function(a) {
        this.twc.odb(a)
    };
    this.gyp = function() {
        var c = this.twc.tia;
        this.qqr.r1 = this.twc.r1;
        this.qqr.r2 = this.twc.r2;
        this.qqr.r3 = this.twc.r3;
        this.qqr.r4 = this.twc.r4;
        this.qqr.r5 = this.twc.r5;
        this.qqr.r6 = this.twc.r6;
        this.qqr.r7 = this.twc.r7;
        this.qqr.r8 = this.twc.r8;
        this.qqr.r9 = this.twc.r9;
        this.qqr.kce = this.twc.kce;
        this.qqr.rkg = this.twc.rkg;
        this.qqr.hju = this.twc.hju;
        this.qqr.prg = this.twc.prg;
        this.qqr.saa = this.twc.saa;
        this.qqr.xhf = this.twc.xhf;
        if (c == tbl.ukv.uvm.vcd || c == tbl.ukv.uvm.pzf || c == tbl.ukv.uvm.lef || c == tbl.ukv.uvm.nhu || c == tbl.ukv.uvm.ooy) {
            this.qqr.r1 = this.twc.gvk;
            this.qqr.r2 = this.twc.mmq;
            this.qqr.r3 = this.twc.knv;
            this.qqr.r4 = this.twc.myv;
            this.qqr.r5 = this.twc.grt;
            this.qqr.r6 = this.twc.cxa;
            this.qqr.r7 = this.twc.knz;
            this.qqr.r8 = this.twc.yvo;
            this.qqr.r9 = this.twc.lfp;
            this.qqr.kce = this.twc.qqa;
            this.qqr.rkg = this.twc.lml;
            this.qqr.hju = this.twc.eao;
            this.qqr.prg = this.twc.bsj;
            this.qqr.saa = this.twc.xme;
            this.qqr.xhf = this.twc.wnv
        }
        this.qqr.lio = this.twc.nbd;
        this.qqr.nko = this.twc.nko;
        this.qqr.isw = this.twc.isw;
        this.qqr.rxr = this.twc.rxr;
        this.qqr.wrm = this.twc.wrm;
        this.qqr.pwy = this.twc.pwy;
        if (this.ztq()) {
            for (var b = 0, a = this.twc.axy.length; b < a && this.twc.axy[b] <= this.twc.rxr; b++) {
                this.qqr.axy[b] = this.twc.axy[b]
            }
        } else {
            for (var b = 0, a = this.twc.axy.length; b < a && this.twc.axy[b] * this.twc.add <= this.twc.rxr; b++) {
                this.qqr.axy[b] = this.twc.axy[b]
            }
        }
        if (c == tbl.ukv.uvm.jck || ((c == tbl.ukv.uvm.jok || c == tbl.ukv.uvm.roq) && this.twc.win == 0) || c == tbl.ukv.uvm.wkr || c == tbl.ukv.uvm.mcw || c == tbl.ukv.uvm.ooy) {
            this.qqr.mim = true
        } else {
            this.qqr.mim = false
        }
        this.qqr.yos = this.twc.yos;
        this.qqr.uik = this.twc.riu;
        this.qqr.hzg = this.qqr.axy[this.qqr.uik];
        this.qqr.win = this.twc.win;
        for (var b = 0; b < this.twc.gpx.length; b++) {
            this.qqr.hxx[b] = this.twc.gpx[b]
        }
        this.qqr.oaw = this.twc.ljy;
        this.qqr.lgd = this.twc.lgd;
        this.qqr.rht = this.twc.rht;
        this.qqr.ykq = this.twc.ykq;
        this.qqr.hld = this.twc.hld;
        this.qqr.yrj = this.twc.hld;
        this.qqr.yls = this.twc.yls;
        this.qap();
        this.qqr.dwv();
        this.qqr.qay(c, this.twc.tzl, this.twc.jix)
    };
    this.utz = function() {
        this.qqr.hch({
            type: "roundStarted",
            sender: this.qqr.wkz,
            lang: sessionStorage.sessionValue1.toUpperCase(),
            data: {
                balanceBefore: this.qqr.fyo(this.qqr.nko)
            }
        });
        this.qqr.state = this.twc.tia;
        this.qqr.lio = this.twc.nbd;
        this.qqr.nko = this.twc.nko;
        this.qqr.yos = this.twc.yos;
        this.qqr.uik = this.twc.riu;
        this.qqr.win = this.twc.win;
        for (var a = 0; a < this.twc.gpx.length; a++) {
            this.qqr.hxx[a] = this.twc.gpx[a]
        }
        if (this.qqr.izi && this.qqr.win > 0) {
            this.qqr.izi.zgu.nwi("history", "#duw", [this.twc.tzl])
        }
        this.qqr.zle = false;
        this.qap();
        this.qqr.ysv();
        this.qqr.bhg(this.twc.jix)
    };
    this.dkf = function() {
        this.qqr.state = this.twc.tia;
        this.qqr.nko = this.twc.nko;
        this.hkc = false;
        this.qap();
        this.qqr.jen();
        this.qqr.bhg(this.twc.jix)
    };
    this.nft = function() {
        this.qqr.hch({
            type: "roundStarted",
            sender: this.qqr.wkz,
            lang: sessionStorage.sessionValue1.toUpperCase(),
            data: {
                balanceBefore: this.qqr.fyo(this.qqr.nko)
            }
        });
        this.qqr.state = this.twc.tia;
        this.qqr.lio = this.twc.nbd;
        this.qqr.nko = this.twc.nko;
        this.qqr.yos = this.twc.yos;
        this.qqr.uik = this.twc.riu;
        this.qqr.win = this.twc.win;
        for (var a = 0; a < this.twc.gpx.length; a++) {
            this.qqr.hxx[a] = this.twc.gpx[a]
        }
        this.qqr.zle = false;
        if (this.qqr.izi && this.qqr.win > 0) {
            this.qqr.izi.duw(this.twc.tzl[0], this.twc.tzl, true)
        }
        this.qap();
        this.qqr.zvb();
        this.qqr.bhg(this.twc.jix)
    };
    this.ere = function() {
        this.qqr.state = this.twc.tia;
        this.qqr.nko = this.twc.nko;
        this.qqr.win = this.twc.win;
        if (this.qqr.izi) {
            this.qqr.izi.duw(this.twc.tzl[0], this.twc.tzl, false)
        }
        this.qqr.ybq();
        this.qqr.bhg(this.twc.jix)
    };
    this.kkd = function() {
        this.qqr.state = this.twc.tia;
        this.qqr.nko = this.twc.nko;
        this.qqr.win = this.twc.win;
        this.qqr.zix();
        this.qqr.bhg(this.twc.jix)
    };
    this.nii = function() {
        this.qqr.hch({
            type: "roundStarted",
            sender: this.qqr.wkz,
            lang: sessionStorage.sessionValue1.toUpperCase(),
            data: {
                balanceBefore: this.qqr.fyo(this.qqr.nko)
            }
        });
        this.qqr.state = this.twc.tia;
        this.qqr.lio = this.twc.nbd;
        this.qqr.nko = this.twc.nko;
        this.qqr.yos = this.twc.yos;
        this.qqr.uik = this.twc.riu;
        this.qqr.win = this.twc.win;
        for (var a = 0; a < this.twc.gpx.length; a++) {
            this.qqr.hxx[a] = this.twc.gpx[a]
        }
        this.qqr.zle = (this.twc.hld > this.qqr.hld);
        this.qqr.lgd = this.twc.lgd;
        this.qqr.rht = this.twc.rht;
        this.qqr.ykq = this.twc.ykq;
        this.qqr.hld = this.twc.hld;
        this.qqr.yrj = this.twc.hld;
        this.qqr.yls = this.twc.yls;
        this.qap();
        this.qqr.wmi();
        this.qqr.bhg(this.twc.jix)
    };
    this.qpl = function() {
        this.qqr.state = this.twc.tia;
        this.qqr.oaw = this.twc.ljy;
        this.qqr.lio = this.twc.nbd;
        this.qqr.nko = this.twc.nko;
        this.qqr.yos = this.twc.yos;
        this.qqr.uik = this.twc.riu;
        this.qqr.win = this.twc.win;
        for (var a = 0; a < this.twc.gpx.length; a++) {
            this.qqr.hxx[a] = this.twc.gpx[a]
        }
        this.qqr.zle = (this.twc.hld > this.qqr.hld);
        this.qqr.lgd = this.twc.lgd;
        this.qqr.rht = this.twc.rht;
        this.qqr.ykq = this.twc.ykq;
        this.qqr.hld = this.twc.hld;
        this.qqr.yrj = this.twc.hld;
        this.qqr.yls = this.twc.yls;
        this.qap();
        this.qqr.kof();
        this.qqr.bhg(this.twc.jix)
    };
    this.oqq = function() {
        this.qqr.state = this.twc.tia;
        this.qqr.oaw = this.twc.ljy;
        this.qqr.lio = this.twc.nbd;
        this.qqr.nko = this.twc.nko;
        this.qqr.yos = this.twc.yos;
        this.qqr.uik = this.twc.riu;
        this.qqr.win = this.twc.win;
        for (var a = 0; a < this.twc.gpx.length; a++) {
            this.qqr.hxx[a] = this.twc.gpx[a]
        }
        this.qqr.zle = (this.twc.hld > this.qqr.hld);
        this.qqr.yrj = this.qqr.hld;
        this.qqr.lgd = this.twc.lgd;
        this.qqr.rht = this.twc.rht;
        this.qqr.ykq = this.twc.ykq;
        this.qqr.hld = this.twc.hld;
        this.qqr.yls = this.twc.yls;
        this.qap();
        this.qqr.woi();
        this.qqr.bhg(this.twc.jix)
    };
    this.hsj = function() {
        this.qqr.state = this.twc.tia;
        this.qqr.oaw = this.twc.ljy;
        this.qqr.lio = this.twc.nbd;
        this.qqr.nko = this.twc.nko;
        this.qqr.yos = this.twc.yos;
        this.qqr.uik = this.twc.riu;
        this.qqr.win = this.twc.win;
        for (var a = 0; a < this.twc.gpx.length; a++) {
            this.qqr.hxx[a] = this.twc.gpx[a]
        }
        this.qqr.zle = (this.twc.hld > this.qqr.hld);
        this.qqr.yrj = this.qqr.hld;
        this.qqr.lgd = this.twc.lgd;
        this.qqr.rht = this.twc.rht;
        this.qqr.ykq = this.twc.ykq;
        this.qqr.hld = this.twc.hld;
        this.qqr.yls = this.twc.yls;
        this.qap();
        this.qqr.ego();
        this.qqr.bhg(this.twc.jix)
    };
    this.eax = function() {
        this.qqr.state = this.twc.tia;
        this.qqr.oaw = this.twc.ljy;
        this.qqr.lio = this.twc.nbd;
        this.qqr.nko = this.twc.nko;
        this.qqr.yos = this.twc.yos;
        this.qqr.uik = this.twc.riu;
        this.qqr.win = this.twc.win;
        for (var a = 0; a < this.twc.gpx.length; a++) {
            this.qqr.hxx[a] = this.twc.gpx[a]
        }
        if (this.qqr.izi && this.qqr.win > 0) {
            this.qqr.izi.zgu.nwi("history", "#duw", [this.twc.tzl])
        }
        this.qqr.zle = (this.twc.hld > this.qqr.hld);
        this.qqr.lgd = this.twc.lgd;
        this.qqr.rht = this.twc.rht;
        this.qqr.ykq = this.twc.ykq;
        this.qqr.hld = this.twc.hld;
        this.qqr.yrj = this.twc.hld;
        this.qqr.yls = this.twc.yls;
        this.qap();
        this.qqr.gpw();
        this.qqr.bhg(this.twc.jix)
    };
    this.tgs = function() {
        this.qqr.state = this.twc.tia;
        this.qqr.oaw = this.twc.ljy;
        this.qqr.lio = this.twc.nbd;
        this.qqr.nko = this.twc.nko;
        this.qqr.yos = this.twc.yos;
        this.qqr.uik = this.twc.riu;
        this.qqr.win = this.twc.win;
        for (var a = 0; a < this.twc.gpx.length; a++) {
            this.qqr.hxx[a] = this.twc.gpx[a]
        }
        this.qqr.zle = (this.twc.hld > this.qqr.hld);
        this.qqr.lgd = this.twc.lgd;
        this.qqr.rht = this.twc.rht;
        this.qqr.ykq = this.twc.ykq;
        this.qqr.hld = this.twc.hld;
        this.qqr.yrj = this.twc.hld;
        this.qqr.yls = this.twc.yls;
        this.qap();
        this.qqr.mwd();
        this.qqr.bhg(this.twc.jix)
    };
    this.qap = function() {
        this.qqr.prs = this.twc.prs;
        this.qqr.guo = this.twc.guo;
        this.qqr.xuy = this.twc.xuy;
        this.qqr.wvw = this.twc.wvw;
        this.qqr.vte = this.twc.vte;
        this.qqr.hic = this.twc.hic;
        this.qqr.udn = this.twc.udn;
        if (this.qqr.vte > 0 && this.qqr.wvw < this.qqr.vte) {
            this.qqr.uik = this.twc.ejt
        }
        this.qqr.hyn = this.twc.hyn
    };
    this.ztq = function() {
        return false
    }
}
aeu.prototype = new vwn;

function ead() {
    var a = this;
    this.tsj = false;
    this.vng = -1;
    this.exx = 0;
    this.vwf = null;
    this.zzq = 3;
    this.aai = 0;
    this.dzn = null;
    this.zvx = null;
    this.fdu = false;
    this.nfo = false;
    this.voj = false;
    this.jie = [];
    this.vez = null;
    this.pyz = false;
    this.tbo = [];
    this.nab = false;
    this.pfr = null;
    this.ota = null;
    this.etf = 0;
    this.lzu = 0;
    this._y = 0;
    this._d = 0;
    this.vgn = 0;
    this.jdx = 4;
    this.wmg = 2;
    this.agv = 9;
    this.ueg = true;
    this.tha = 0;
    this.wjk = -1;
    this.rcp = 0;
    this.ecf = -1;
    this.kam = -1;
    this.ksk = -1;
    this.cgt = false;
    this.gks = [];
    this.iyw = 0;
    this.ugo = 0;
    this.ujy = 0;
    this.zxc = 89;
    this.xwb = 0;
    this.rzm = 0;
    this.rfw = null;
    this.pvr = null;
    this.bad = 0;
    this.baz = 0;
    this.syx = [];
    this.wqk = [];
    this.hkb = [];
    this.obt = [];
    this.xsl = [];
    this.brv = function(f, k, j, c, b, d, g, e) {
        ead.prototype.brv.call(this, f, k, j);
        this.zzq = d;
        this.tha = this.height / this.zzq;
        this.vwf = b;
        this.zvx = g;
        this.lzu = e;
        this.etf = Math.round(c);
        this.dzn = [];
        this.aai = 0;
        this.vgn = 0;
        this.agv = Math.round(this.etf / 20);
        this.jdx = Math.round(this.etf / 12);
        this.wmg = Math.round(this.etf / 2);
        this.tbo.length = 0
    };
    this.ioq = function(b) {
        try {
            this.pfr = b.rxl;
            this.ota = b.fcz
        } catch (c) {
            console.error(c)
        }
    };
    this.gix = function(c, b) {
        ead.prototype.gix.call(this, c);
        try {
            this.etf = Math.round(b);
            this.agv = Math.round(this.etf / 20);
            this.jdx = Math.round(this.etf / 12);
            this.wmg = Math.round(this.etf / 2);
            this._y = this.y + (this.zzq - 1) * this.tha
        } catch (d) {
            console.error(d)
        }
    };
    this.cmi = function(b, e) {
        var d = b - this.x - ((this.parent.zqv()) ? this.parent.bnl.vbe.exo.x : 0),
            c = e - this.y - ((this.parent.zqv()) ? this.parent.bnl.vbe.exo.y : 0);
        if (d >= 0 && d <= this.width && c >= 0 && c <= this.height) {
            if (this.parent.pwb && this.parent.psl && !this.parent.bvn && !this.tsj && this.parent.haw()) {
                this.opd()
            } else {
                if (!this.parent.pwb) {
                    if (tbl.xyy.value43) {
                        if (this.parent.hff()) {
                            this.parent.hat();
                            if (this.parent.kdj) {
                                this.parent.kdj.zgu.jle("buttons", "#mrr", [true])
                            }
                        }
                    } else {
                        if (this.nab) {
                            this.wjk = c;
                            this.rcp = 0;
                            this.parent.coq();
                            this.parent.yjy();
                            this.parent.wlg()
                        }
                    }
                }
            }
            return true
        }
        return false
    };
    this.arh = function() {
        if (this.wjk >= 0) {
            this.dpp();
            return true
        }
        return false
    };
    this.pqp = function(b, f, c) {
        var e = b - this.x - ((this.parent.zqv()) ? this.parent.bnl.vbe.exo.x : 0),
            d = f - this.y - ((this.parent.zqv()) ? this.parent.bnl.vbe.exo.y : 0);
        if (this.wjk >= 0) {
            if (e >= 0 && e <= this.width && d >= 0 && d <= this.height) {
                if (d > this.wjk) {
                    this.xwb = cyh(this.gjq)
                } else {
                    if (d < this.wjk) {
                        this.xwb = cyh(this.hid)
                    }
                }
                this.wjk = d;
                if (c) {
                    clearTimeout(this.rzm);
                    this.rzm = setTimeout(this.dpp, 500)
                }
                return true
            } else {
                this.dpp();
                return true
            }
        }
        return false
    };
    this.yud = function() {
        var g = 0,
            k = 0,
            d = 0;
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        if (this.aai >= 0) {
            this.context2D.save();
            if (this.parent.fhx === false) {
                this.context2D.beginPath();
                this.context2D.rect(this.x, this.y, this.width, this.height);
                this.context2D.closePath();
                this.context2D.clip()
            }
            if (this.pvr != null) {
                this.context2D.drawImage(this.pvr, this.x + this.bad, this.y + this.baz, this.width, this.height, this.x, this.y, this.width, this.height)
            }
            for (var f = 0, b = this.wqk.length; f < b; f++) {
                if (this.wqk[f]) {
                    this.context2D.drawImage(this.wqk[f].vpm, this.wqk[f].mun * this.width, 0, this.width, this.wqk[f].vpm.height, this.x, this.y + f * this.tha, this.width, this.wqk[f].vpm.height)
                }
            }
            g = this._y - this.height + this.rcp;
            for (var f = 0; f < this.zzq + 1; f++) {
                k = this.aai + f;
                d = this.dzn[k];
                try {
                    if (this.voj === false) {
                        this.context2D.drawImage(this.vwf[d], this.x, g)
                    } else {
                        this.context2D.drawImage(this.jie[d], this.x, g)
                    }
                } catch (l) {
                    if (!this.parent.vjm) {
                        console.error("can not display image " + this.vwf.length + "" + d + "" + k + "" + this.dzn.length + "" + this.dzn)
                    }
                }
                g += this.tha
            }
            g = this._y - this.height;
            for (var f = 0; f < this.zzq + 1; f++) {
                k = this.aai + f;
                d = this.dzn[k];
                try {
                    for (var c = 0, b = this.gks.length; c < b; c++) {
                        if (this.gks[c] == d && this.syx[d] && (this.syx[d].dmv || !this.syx[d].ger)) {
                            this.context2D.drawImage(this.syx[d].vpm, this.syx[d].mun * this.width, 0, this.width, this.syx[d].vpm.height, this.x, g + (this.tha - this.syx[d].vpm.height) / 2, this.width, this.syx[d].vpm.height);
                            break
                        }
                    }
                } catch (l) {
                    if (!this.parent.vjm) {
                        console.error("can not display image " + this.syx.length + "" + d + "" + k + "" + this.dzn.length + "" + this.dzn)
                    }
                }
                g += this.tha
            }
            for (var f = 0, b = this.tbo.length; f < b; f++) {
                if (this.tbo[f]) {
                    this.context2D.drawImage(this.tbo[f], this.x, this.y + f * this.tha)
                }
            }
            for (var f = 0, b = this.hkb.length; f < b; f++) {
                if (this.hkb[f]) {
                    this.context2D.drawImage(this.hkb[f].vpm, this.hkb[f].mun * this.width, 0, this.width, this.hkb[f].vpm.height, this.x, this.y + f * this.tha, this.width, this.hkb[f].vpm.height)
                }
            }
            if (this.fdu) {
                this.context2D.fillStyle = this.pfr;
                this.context2D.fillRect(this.x, this.y, this.width, this.height)
            }
            if (this.nfo) {
                this.context2D.fillStyle = this.ota;
                this.context2D.fillRect(this.x, this.y, this.width, this.height)
            }
            if (this.rfw != null) {
                this.context2D.drawImage(this.rfw, this.x, this.y)
            }
            this.context2D.restore();
            if (this.kee && this.srn) {
                this.kee.drawImage(this.srn, this.x, this.y)
            }
        }
    };
    this.hfd = function(b) {
        this.kam = -1;
        this.ksk = -1;
        this.exx = b;
        this.tsj = false;
        this.ecf = -1;
        this.aai = 0;
        this.ueg = true;
        this.vng = -1;
        this.dzn.length = this.lzu;
        for (var c = 0; c <= this.zzq; c++) {
            this.dzn[this.dzn.length - 1 - this.zzq + c] = this.dzn[c]
        }
        this.aai = this.dzn.length - 1 - this.zzq;
        this.ueg = true;
        this.mde(false)
    };
    this.cau = function(d, f) {
        for (var b = 0; b < this.lzu; b++) {
            if (b < this.zvx.length) {
                this.dzn[b] = this.zvx[b]
            } else {
                var c = b % this.zvx.length;
                this.dzn[b] = this.zvx[c]
            }
        }
        if (f) {
            var e = (this.zzq > 1) ? d - 2 : d - 1;
            if (e < 0) {
                e = this.zvx.length + e
            }
            for (var b = 0; b <= this.zzq; b++) {
                this.dzn[b] = this.zvx[e];
                e += 1;
                if (e == this.zvx.length) {
                    e = e - this.zvx.length
                }
            }
        }
        this.aai = 0;
        this._y = this.y + (this.zzq - 1) * this.tha
    };
    this.opd = function() {
        this.pyz = true;
        if (this.aai > this.zzq) {
            var c = this.aai;
            var d = this.zzq;
            for (var b = 0; b <= this.zzq; b++) {
                this.dzn[d + b + 1] = this.dzn[c + b]
            }
            this.aai = this.zzq + 1
        }
    };
    this.cfc = function() {
        this.aai = 0;
        this.ecf = 0;
        this.jiy()
    };
    this.gjq = function() {
        if (a.rcp < a.tha / 4) {
            a.rcp = a.rcp + 2;
            if (a.parent.fhx === false) {
                a.yud()
            } else {
                a.parent.ymh()
            }
        }
    };
    this.hid = function() {
        if (a.rcp > 0) {
            a.rcp = a.rcp - 2;
            if (a.parent.fhx === false) {
                a.yud()
            } else {
                a.parent.ymh()
            }
        }
    };
    this.dpp = function() {
        clearTimeout(a.rzm);
        a.parent.pgu();
        if (a.rcp > 0) {
            a.hid();
            a.xwb = cyh(a.dpp)
        } else {
            a.aoq()
        }
    };
    this.aoq = function() {
        vcu(this.xwb);
        this.wjk = -1;
        this.rcp = 0
    };
    this.urb = function(c) {
        if (this.rcp > 0) {
            this.rcp = 0
        }
        if (this.zzq === 1 && this.ecf < 0 && this.kam >= 0 && this._y === this.y + this.height - this.etf) {
            this.jjg(this.kam, this.ksk, this.cgt)
        }
        if (this.aai >= 0) {
            if (this.aai > 0) {
                if (!this.pyz || !this.parent.iil) {
                    this._y += this.etf;
                    this._d += this.etf
                } else {
                    this._y += (this.etf + this.etf / 2);
                    this._d += (this.etf + this.etf / 2)
                }
            } else {
                if (this.aai == 0) {
                    if (this.ecf == -1) {
                        this.vng += 1;
                        this.aai = this.exx - 1 - this.zzq;
                        this._y += this.etf;
                        this._d += this.etf;
                        for (var b = 0; b <= this.zzq; b++) {
                            this.dzn[this.exx - 1 - this.zzq + b] = this.dzn[b]
                        }
                    } else {
                        if (this.vgn < this.wmg && this.ueg) {
                            this._y += this.jdx;
                            this.vgn += this.jdx;
                            if (this.vgn >= this.wmg) {
                                this.ueg = false
                            }
                        } else {
                            if (this.vgn > 0 && !this.ueg) {
                                this._y -= this.agv;
                                this.vgn -= this.agv;
                                if (this.vgn <= 0) {
                                    this.tsj = true;
                                    this.pyz = false;
                                    if (typeof this.xys === "function") {
                                        this.xys()
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (this._d > this.tha - this.etf && this.aai > 0) {
                if (c && this.ecf >= 0) {
                    if (this.aai == 1) {
                        if (typeof this.bew === "function") {
                            this.bew()
                        }
                        if (this.vez) {
                            this.vez.play()
                        }
                        if (!this.parent.zdx && !this.parent.nrx) {
                            if (this.uqu()) {
                                this.lji()
                            }
                        }
                    }
                }
                this.aai -= 1;
                this._d = 0;
                this._y = this.y + (this.zzq - 1) * this.tha
            }
        }
    };
    this.axb = function(e, c, f) {
        for (var d = 0, b = this.hkb.length; d < b; d++) {
            if (this.hkb[d]) {
                if (this.hkb[d].pzo === false && this.hkb[d].mun < this.hkb[d].yzo - 1) {
                    this.hkb[d].mun += 1
                } else {
                    if (this.hkb[d].pzo === true && this.hkb[d].mun > 0) {
                        this.hkb[d].mun -= 1
                    } else {
                        if (this.hkb[d].loop === true) {
                            this.hkb[d].mun = (this.hkb[d].pzo === false) ? 0 : this.hkb[d].yzo - 1
                        } else {
                            if (this.hkb[d].pwz === true) {
                                this.hkb[d] = null
                            }
                        }
                    }
                }
            }
        }
        if (f && f === true) {
            this.yud()
        }
    };
    this.rrp = function() {
        for (var c = 0, b = this.hkb.length; c < b; c++) {
            if (this.hkb[c] && ((this.hkb[c].pzo === false && this.hkb[c].mun < this.hkb[c].yzo - 1) || (this.hkb[c].pzo === true && this.hkb[c].mun > 0))) {
                return true
            }
        }
        return false
    };
    this.jeh = function(d) {
        for (var c = 0, b = this.wqk.length; c < b; c++) {
            if (this.wqk[c]) {
                if (this.wqk[c].pzo === false && this.wqk[c].mun < this.wqk[c].yzo - 1) {
                    this.wqk[c].mun += 1
                } else {
                    if (this.wqk[c].pzo === true && this.wqk[c].mun > 0) {
                        this.wqk[c].mun -= 1
                    } else {
                        if (this.wqk[c].loop === true) {
                            this.wqk[c].mun = (this.wqk[c].pzo === false) ? 0 : this.wqk[c].yzo - 1
                        } else {
                            if (this.wqk[c].pwz === true) {
                                this.wqk[c] = null
                            }
                        }
                    }
                }
            }
        }
        if (d && d === true) {
            this.yud()
        }
    };
    this.qpm = function() {
        for (var c = 0, b = this.wqk.length; c < b; c++) {
            if (this.wqk[c] && ((this.wqk[c].pzo === false && this.wqk[c].mun < this.wqk[c].yzo - 1) || (this.wqk[c].pzo === true && this.wqk[c].mun > 0))) {
                return true
            }
        }
        return false
    };
    this.smz = function(d, c, b) {
        this.kam = d;
        this.ksk = c;
        this.cgt = b;
        if (this.zzq > 1) {
            this.jjg(this.kam, this.ksk, this.cgt)
        }
    };
    this.jjg = function(j, g, d) {
        var k = 0,
            c = 0,
            e = 0,
            b = [];
        this.vng = -1;
        this.ecf = j;
        k = (this.zzq > 1) ? this.ecf - 2 : this.ecf - 1;
        if (k < 0) {
            k = this.zvx.length + k
        }
        c = (d === true) ? this.dzn.length + g : this.zzq + g + 1;
        for (var f = 0; f <= this.zzq; f++) {
            e = this.aai + f;
            if (e >= this.dzn.length) {
                e = e - this.dzn.length
            }
            b[f] = this.dzn[e]
        }
        for (var f = 0; f < c; f++) {
            this.dzn[f] = this.zvx[k];
            k += 1;
            if (k == this.zvx.length) {
                k = k - this.zvx.length
            }
        }
        this.aai = this.zzq + g + 1;
        for (var f = 0; f <= this.zzq; f++) {
            this.dzn[this.aai + f] = b[f]
        }
        this.mde(true);
        this.kam = -1;
        this.ksk = -1;
        this.cgt = false
    };
    this.mde = function(k) {
        var d = -1,
            n = -1,
            b = 0,
            o = true,
            e = false,
            m = 0,
            l = 0;
        if (this.obt.length > 0 && this.xsl.length > 0) {
            if (k) {
                for (var g = 0; g < this.obt.length; g++) {
                    for (var f = 0; f < this.obt[g].length - 1; f++) {
                        if (this.dzn[this.zzq] == this.obt[g][f]) {
                            d = f;
                            n = g
                        }
                    }
                }
                if (n >= 0 && d >= 0 && d < this.obt[n].length - 1) {
                    if (this.zzq + this.obt[n].length - d - 1 < this.aai) {
                        for (var g = d + 1, f = 1; g < this.obt[n].length; g++, f++) {
                            this.dzn[this.zzq + f] = this.obt[n][g]
                        }
                    }
                }
            }
            d = -1;
            n = -1;
            for (var g = 0; g < this.obt.length; g++) {
                for (var f = 1; f < this.obt[g].length; f++) {
                    if (this.dzn[this.aai] == this.obt[g][f]) {
                        d = f;
                        n = g
                    }
                }
            }
            if (n >= 0 && d > 0) {
                if (this.aai - d > this.zzq) {
                    for (var g = d - 1, f = 1; g >= 0; g--, f++) {
                        this.dzn[this.aai - f] = this.obt[n][g]
                    }
                }
            }
            d = -1;
            n = -1;
            for (var g = 0; g < this.obt.length; g++) {
                for (var f = 0; f < this.obt[g].length; f++) {
                    if (this.dzn[this.aai + this.zzq] == this.obt[g][f]) {
                        d = f;
                        n = g
                    }
                }
            }
            if (n >= 0 && d >= 0 && d < this.obt[n].length - 1) {
                if (!k) {
                    for (var g = d + 1; g < this.obt[n].length; g++) {
                        this.dzn[m++] = this.obt[n][g]
                    }
                } else {
                    if (this.aai + this.zzq + this.obt[n].length - d - 1 < this.dzn.length) {
                        for (var g = d + 1, f = 1; g < this.obt[n].length; g++, f++) {
                            this.dzn[this.aai + this.zzq + f] = this.obt[n][g]
                        }
                    }
                }
            }
            m = (k) ? this.zzq + 1 : m;
            l = (k) ? this.dzn.length : this.aai;
            for (var c = m; c < l; c++) {
                if (k == false || (c < this.aai || c > this.aai + this.zzq)) {
                    d = -1;
                    n = -1;
                    for (var g = 0; g < this.obt.length; g++) {
                        for (var f = 0; f < this.obt[g].length; f++) {
                            if (this.dzn[c] == this.obt[g][f]) {
                                d = f;
                                n = g
                            }
                        }
                    }
                    if (n >= 0 && d >= 0) {
                        o = true;
                        b = 0;
                        for (var g = 0; g < this.obt[n].length && o; g++) {
                            if (this.dzn[c - d + g] != this.obt[n][g]) {
                                o = false
                            } else {
                                b++
                            }
                        }
                        if (o) {
                            c += this.obt[n].length - d - 1
                        } else {
                            if (b == 0) {
                                this.dzn[c] = this.xsl[Math.floor(Math.random() * this.xsl.length)]
                            } else {
                                if (b == this.obt[n].length - 1 && (c + b < this.aai || c + b > this.aai + this.zzq) && c + b < this.dzn.length) {
                                    e = false;
                                    for (var g = 0; g < this.obt.length && !e; g++) {
                                        for (var f = 0; f < this.obt[g].length && !e; f++) {
                                            if (this.dzn[c + b] == this.obt[g][f]) {
                                                e = true
                                            }
                                        }
                                    }
                                    if (!e) {
                                        this.dzn[c + b] = this.obt[n][this.obt[n].length - 1];
                                        c += b
                                    } else {
                                        this.dzn[c] = this.xsl[Math.floor(Math.random() * this.xsl.length)]
                                    }
                                } else {
                                    for (var q = 0; q < b; q++) {
                                        if (c + q < this.aai || c + q > this.aai + this.zzq) {
                                            this.dzn[c + q] = this.xsl[Math.floor(Math.random() * this.xsl.length)]
                                        }
                                    }
                                    c += b - 1
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    this.jug = function(b) {
        this.nab = b
    };
    this.vib = function() {
        return this.nab
    };
    this.uqu = function() {
        for (var c = 0, b = this.gks.length; c < b; c++) {
            if (this.gks[c] >= 0) {
                return true
            }
        }
        return false
    };
    this.nbb = function(b) {
        this.gks = b
    };
    this.txk = function(b) {
        return this.gks
    };
    this.lji = function() {
        for (var d = 0, b = this.gks.length; d < b; d++) {
            var c = this.syx[this.gks[d]];
            if (c) {
                c.dmv = true;
                c.huf = c.loop;
                c.ger = c.pwz
            }
        }
        if (this.parent.fhx === false) {
            this.yud()
        } else {
            this.parent.ymh()
        }
        this.ujy = 0;
        this.ugo = new Date().getTime();
        this.bhi()
    };
    this.jiy = function() {
        for (var c = 0, b = this.syx.length; c < b; c++) {
            if (this.syx[c]) {
                this.syx[c].dmv = false
            }
        }
        clearTimeout(this.iyw)
    };
    this.fhv = function() {
        for (var c = 0, b = this.syx.length; c < b; c++) {
            if (this.syx[c]) {
                this.syx[c].huf = false
            }
        }
    };
    this.shz = function() {
        for (var c = 0, b = this.syx.length; c < b; c++) {
            if (this.syx[c]) {
                this.syx[c].ger = true;
                this.syx[c].mun = 0
            }
        }
    };
    this.bgk = function() {
        for (var c = 0, b = this.syx.length; c < b; c++) {
            if (this.syx[c] && this.syx[c].dmv) {
                return true
            }
        }
        return false
    };
    this.bhi = function() {
        var f = true,
            d = null;
        a.ujy++;
        for (var e = 0, b = a.gks.length; e < b; e++) {
            d = a.syx[a.gks[e]];
            if (d && d.dmv) {
                d.mun = (d.mun < d.yzo - 1) ? d.mun + 1 : (d.ger) ? 0 : d.mun;
                if ((d.mun === 0 && d.huf === false) || (d.mun === d.yzo - 1 && d.ger === false)) {
                    d.dmv = false
                }
                if (f === true && d.dmv === true) {
                    f = false
                }
            }
        }
        if (a.parent.fhx === false) {
            a.yud()
        } else {
            a.parent.ymh()
        }
        if (f === false) {
            var c = (a.ujy * a.zxc - (new Date().getTime() - a.ugo));
            if (c < 2) {
                c = 0
            }
            a.iyw = setTimeout(a.bhi, c)
        } else {
            clearTimeout(a.iyw);
            a.parent.udv()
        }
    };
    this.qjg = function(d) {
        for (var c = 0, b = d.length; c < b; c++) {
            if (d[c]) {
                this.syx[c] = {};
                this.syx[c].vpm = d[c].vpm;
                this.syx[c].loop = d[c].loop;
                this.syx[c].pwz = d[c].pwz;
                this.syx[c].yzo = this.syx[c].vpm.width / this.width;
                this.syx[c].mun = 0;
                this.syx[c].dmv = false;
                this.syx[c].huf = false;
                this.syx[c].ger = true
            }
        }
    };
    this.tpk = function(b, c, d) {
        this.pvr = b;
        this.bad = c;
        this.baz = d
    };
    this.sgs = function(b) {
        this.rfw = b
    };
    this.svs = function(f, e, b, d, c) {
        if (e == null || f < 0) {
            return
        }
        this.hkb[f] = {
            vpm: e,
            mun: 0,
            yzo: e.width / this.width,
            loop: b,
            pwz: d,
            pzo: c
        }
    };
    this.mdv = function() {
        return this.hkb
    };
    this.hea = function(f, e, b, d, c) {
        if (e == null || f < 0) {
            return
        }
        this.wqk[f] = {
            vpm: e,
            mun: 0,
            yzo: e.width / this.width,
            loop: b,
            pwz: d,
            pzo: c
        }
    };
    this.cwo = function() {
        return this.wqk
    };
    this.kmw = function(g, c) {
        this.obt = [];
        this.xsl = [];
        for (var f = 0, b = g.length; f < b; f++) {
            this.obt[f] = [];
            for (var e = 0, d = g[f].length; e < d; e++) {
                this.obt[f][e] = g[f][e]
            }
        }
        for (var f = 0, b = c.length; f < b; f++) {
            this.xsl[f] = c[f]
        }
    };
    this.bew = null;
    this.xys = null
}
ead.prototype = new ryi;

function ffk() {
    var a = this;
    this.zkb = null;
    this.kza = -1;
    this.crc = 0;
    this.idt = 0;
    this.ibu = false;
    this.zxc = 370;
    this.vlo = 0;
    this.btj = 0;
    this.nmv = 0;
    this.pup = 0;
    this.tmi = "arial";
    this.kid = "arial";
    this.ozp = "yellow";
    this.rhz = "black";
    this.vhi = 0;
    this.gco = 60;
    this.acj = 1;
    this.hxn = new drx();
    this.duc = new drx();
    this.zny = new drx();
    this.lni = new drx();
    this.ylm = function(b) {
        ffk.prototype.ylm.call(this, b);
        try {
            this.vhi = b.hhy;
            this.gco = b.yec;
            this.hxn = b.idf;
            this.duc = b.ute;
            this.zny = b.hbr;
            this.lni = b.hfz;
            this.acj = b.jnb
        } catch (c) {
            console.error(c)
        }
    };
    this.ioq = function(b) {
        ffk.prototype.ioq.call(this, b);
        try {
            this.tmi = b.vij;
            this.kid = b.hnm;
            this.ozp = b.fzq;
            this.rhz = b.cgp
        } catch (c) {
            console.error(c)
        }
    };
    this.kvm = function(c, b) {
        this.btj = c;
        this.nmv = b
    };
    this.kcs = function(b) {
        this.crc = b;
        tbl.zbv.zwb.nwi("tops", "#yud")
    };
    this.sgm = function() {
        if (this.hxn.width > 0 && this.hxn.height > 0) {
            return true
        }
        return false
    };
    this.start = function(d, c, b) {
        this.ibu = true;
        this.idt = b;
        this.btj = d;
        this.nmv = c;
        this.pup = this.idt - this.btj;
        tbl.zbv.kdj.pwr(false);
        this.kzt();
        this.xwy()
    };
    this.stop = function() {
        this.ibu = false;
        this.bbe();
        clearTimeout(this.vlo)
    };
    this.yfv = function() {
        return this.ibu
    };
    this.kzt = function() {
        tbl.zbv.hly.dvl("addfreespin" + this.pup)
    };
    this.bbe = function() {
        tbl.zbv.hly.jsl("addfreespin" + this.pup)
    };
    this.xwy = function() {
        if (a.btj < a.idt) {
            a.btj++;
            a.nmv++;
            tbl.zbv.zwb.nwi("tops", "#yud");
            a.vlo = setTimeout(a.xwy, a.zxc)
        } else {
            a.jts()
        }
    };
    this.jts = function() {
        tbl.zbv.zwb.nwi("tops", "#yud");
        this.ibu = false;
        tbl.zbv.ljd();
        clearTimeout(this.vlo)
    };
    this.yud = function() {
        if (!this.iac()) {
            return
        }
        var b = this.context2D;
        b.save();
        b.lineJoin = "round";
        b.lineCap = "round";
        b.textBaseline = "bottom";
        b.textAlign = "start";
        b.drawImage(this.vpm, 0, 0);
        if (this.zkb != null && this.kza >= 0 && this.zny.width > 0 && this.zny.height > 0) {
            if (this.zkb.width > 2 * this.zny.width) {
                b.drawImage(this.zkb, this.zny.width * this.kza, 0, this.zny.width, this.zny.height, this.zny.x, this.zny.y, this.zny.width, this.zny.height)
            } else {
                b.drawImage(this.zkb, this.zny.x, this.zny.y, this.zny.width, this.zny.height)
            }
        }
        b.fillStyle = this.ozp;
        if (this.rhz) {
            b.strokeStyle = this.rhz
        }
        b.lineWidth = this.acj;
        if (this.btj != null && this.hxn.width > 0 && this.hxn.height > 0) {
            this.tqi(this.btj.toString(), this.hxn, this.tmi, this.vhi)
        }
        if (this.nmv != null && this.duc.width > 0 && this.duc.height > 0) {
            this.tqi(this.nmv.toString(), this.duc, this.tmi, this.vhi)
        }
        b.fillStyle = this.ezn;
        if (this.gpn) {
            b.strokeStyle = this.gpn
        }
        b.lineWidth = this.ptj;
        b.textAlign = "center";
        for (var c = 0; c < this.jlo.length; c++) {
            this.iaj(this.jlo[c], this.aae[c], this.yff, this.mya)
        }
        if (this.crc > 0 && this.lni.width > 0 && this.lni.height > 0) {
            this.qbd()
        }
        b.restore();
        if (this.kee && this.srn) {
            this.kee.drawImage(this.srn, this.x, this.y)
        }
    };
    this.tqi = function(j, f, d, l) {
        var k = this.context2D,
            b = l,
            c = 1,
            g = 0,
            e = 0;
        k.save();
        k.font = this.jgr + " " + b + "px " + d;
        if (b > f.height) {
            c = f.height / b;
            b = Math.round(b * c) - 1;
            k.font = this.jgr + " " + b + "px " + d
        }
        g = k.measureText(j).width;
        if (g > f.width) {
            c = f.width / g;
            b = Math.round(b * c) - 1;
            k.font = this.jgr + " " + b + "px " + d
        }
        e = (f.height + b) / 2;
        k.fillText(j, f.x + (f.width - g) / 2, f.y + e);
        if (k.lineWidth >= 1) {
            k.strokeText(j, f.x + (f.width - g) / 2, f.y + e)
        }
        k.restore()
    };
    this.qbd = function() {
        var c = this.context2D,
            d = this.gco,
            b = 0,
            e = 1;
        c.save();
        c.font = this.jgr + " " + d + "px " + this.kid;
        b = (c.measureText(this.crc).width > b) ? c.measureText(this.crc).width : b;
        if (b > this.lni.width) {
            e = (this.lni.width / b);
            d = Math.round(d * e) - 1;
            c.font = this.jgr + " " + d + "px " + this.kid
        }
        c.fillText(this.crc, this.lni.x + this.lni.width / 2, this.lni.y + (this.lni.height - d) / 2 + d);
        c.restore()
    }
}
ffk.prototype = new qlg;
tbl.ukv = {
    uvm: {
        jck: 0,
        bpq: 1,
        yua: 2,
        jok: 3,
        wkr: 4,
        rps: 5,
        vcd: 6,
        roq: 7,
        qnr: 8,
        mcw: 9,
        pzf: 10,
        lef: 11,
        nhu: 12,
        juz: 13,
        ooy: 14,
        kej: 15,
        egb: 16,
        gbu: 20,
        ier: 21,
        vzn: 22,
        oqi: 23,
        qto: 24,
        grg: 25,
        svz: 30,
        pck: 31,
        uvv: 32,
        vhh: 33,
        qza: 68
    }
};

function ksw() {
    this.zyj = null;
    this.jhu = null;
    this.hwg = null;
    this.gmw = null;
    this.hme = null;
    this.etr = [];
    this.kdj = null;
    this.mrb = null;
    this.gnk = null;
    this.izi = null;
    this.khi = null;
    this.jsp = null;
    this.dfq = null;
    this.cma = null;
    this.lio = [];
    this.hxx = [];
    this.win = 0;
    this.hzg = 1;
    this.uik = 0;
    this.totalBet = 1000;
    this.axy = [];
    this.isw = 0;
    this.rxr = 0;
    this.yos = 10;
    this.nko = 0;
    this.uab = 0;
    this.gpx = [];
    this.rxw = 0;
    this.ojk = -1;
    this.zkx = -1;
    this.sii = -1;
    this.r1 = [];
    this.r2 = [];
    this.r3 = [];
    this.r4 = [];
    this.r5 = [];
    this.r6 = [];
    this.r7 = [];
    this.r8 = [];
    this.r9 = [];
    this.kce = [];
    this.rkg = [];
    this.hju = [];
    this.prg = [];
    this.saa = [];
    this.xhf = [];
    this.fcp = 3;
    this.qzg = 5;
    this.dif = [];
    this.pwy = 1;
    this.wrm = 1;
    this.ixc = 1;
    this.mfx = [];
    this.oaw = null;
    this.vjf = false;
    this.ykq = 0;
    this.yls = 1;
    this.hld = 0;
    this.yrj = 0;
    this.lgd = 0;
    this.rht = 0;
    this.qqs = true;
    this.zle = false;
    this.mim = false;
    this.ylo = false;
    this.hwo = false;
    this.iib = false;
    this.wkw = false;
    this.qeb = 1;
    this.wlj = true;
    this.prs = "";
    this.dez = false;
    this.kzg = false;
    this.ygg = false;
    this.qwg = true;
    this.uyx = false;
    this.vte = 0;
    this.wvw = 0;
    this.hic = 0;
    this.udn = "";
    this.guo = "";
    this.xuy = "";
    this.dvw = null;
    this.zdx = true;
    this.cpd = false;
    this.pwb = false;
    this.fsv = 20;
    this.qna = true;
    this.psl = false;
    this.kad = false;
    this.byj = [15, 20, 25, 30, 35];
    this.wjd = [8, 8, 8, 8, 8];
    this.knh = [0, 0, 0, 0, 0];
    this.dec = this.byj;
    this.bev = 16;
    this.lny = 16;
    this.tck = this.bev;
    this.qmu = 12;
    this.xkg = 0;
    this.hgh = 0;
    this.vwf = [];
    this.iil = true;
    this.pyw = false;
    this.hjn = false;
    this.yph = false;
    this.sla = true;
    this.hqd = 0;
    this.mmn = 0;
    this.ans = [];
    this.jbi = true;
    this.mym = false;
    this.fbg = false;
    this.ynm = false;
    this.hlt = false;
    this.tfo = false;
    this.vrd = 1;
    this.jto = 400;
    this.bcx = 200;
    this.vid = 100;
    this.ogp = true;
    this.hon = true;
    this.yug = false;
    this.exl = [];
    this.tfr = 50;
    this.dvs = null;
    this.aor = null;
    this.idb = [
        [-1, -1, -1],
        [-1, -1, -1],
        [-1, -1, -1],
        [-1, -1, -1],
        [-1, -1, -1]
    ];
    this.mie = [
        [-1, -1, -1],
        [-1, -1, -1],
        [-1, -1, -1],
        [-1, -1, -1],
        [-1, -1, -1]
    ];
    this.jcd = false;
    this.dds = 0;
    this.axq = 0;
    this.aui = -1;
    this.nut = 0;
    this.icw = false;
    this.sxv = false;
    this.prt = -1;
    this.dml = false;
    this.tct = true;
    this.gxd = 3;
    this.cst = false;
    this.hmq = 0;
    this.jcw = true;
    this.pur = 330;
    this.xmc = [];
    this.erw = null;
    this.tph = null;
    this.ilo = [
        [2, 2, 2, 2, 2],
        [1, 1, 1, 1, 1],
        [3, 3, 3, 3, 3],
        [1, 2, 3, 2, 1],
        [3, 2, 1, 2, 3]
    ];
    this.xrr = [];
    this.wec = 1;
    this.lrf = 5;
    this.kzw = 1;
    this.yjr = 5;
    this.ywz = true;
    this.isq = 0;
    this.cgr = 0;
    this.tld = 30;
    this.qhz = 50;
    this.ukc = false;
    this.yzd = 0;
    this.klc = 0;
    this.rxf = false;
    this.rls = true;
    this.bwg = 0;
    this.leu = 0;
    this.qln = false;
    this.emh = 0;
    this.lcq = false;
    this.nip = true;
    this.qdh = false;
    this.odb = false;
    this.ucs = null;
    this.bvn = false;
    this.dso = true;
    this.mlo = 0;
    this.muf = 0;
    this.rsu = 0;
    this.jwg = 0;
    this.pgw = true;
    this.kvt = null;
    this.wjx = false;
    this.pyx = false;
    this.uxw = true;
    this.agq = "";
    this.ifo = false;
    this.wyg = -1;
    this.rmf = 0;
    this.iaz = 0;
    this.xem = 0;
    this.ahs = 0;
    this.id = 0;
    this.gar = 0;
    this.mtj = 0;
    this.kem = 0;
    this.arb = 0;
    this.nei = 0;
    this.kwh = -1;
    this.aah = 0;
    this.duk = 0;
    this.dgz = -1;
    this.pfm = 0;
    this.psp = 0;
    this.qnp = -1;
    this.hch = function(b) {
        if (!tbl.zbv.vjm) {
            tbl.vpf.hch(b)
        }
    };
    this.bfi = function() {
        var b = new rsc();
        b.brv();
        return b
    };
    this.vxn = function() {
        this.xcw = new vie()
    };
    this.kfi = function() {
        this.jgf();
        var f = [];
        if (!(this.vte > 0 && this.wvw < this.vte)) {
            while (this.uik < this.oav()) {
                this.uik++
            }
            var e = this.spp(this.mim);
            if (this.uik > e) {
                var d = (e < 0) ? 0 : e;
                this.uik = d
            }
        }
        this.hzg = this.axy[this.uik];
        this.totalBet = this.vrh();
        this.ern();
        this.uhe();
        this.clq();
        for (var c = 0, b = this.hly.npl("symb"); c < b; c++) {
            this.vwf[c] = this.hly.lrj("symb" + c)
        }
        if (tbl.xyy.value38) {
            f[tbl.os.bic] = "w";
            f[tbl.os.xhe] = "l";
            f[tbl.os.rvi] = "m";
            f[tbl.os.ufm] = "i";
            f[tbl.os.ijc] = "a";
            this.iil = tbl.xyy.value38[f[tbl.vpf.lhl]]
        }
    };
    this.cmu = function() {
        this.kgd();
        this.bbn();
        this.cha();
        this.lrz();
        this.odr();
        this.gfz();
        if (this.nip) {
            this.sov()
        }
        if (this.bnl.vpc) {
            this.pil();
            this.iuf()
        }
        if (this.bnl.isp && !(this.vte > 0 && this.wvw < this.vte)) {
            this.mpo();
            if (this.acf()) {
                this.qww()
            }
        }
        if (this.bnl.kut) {
            this.zib();
            if (!this.bnl.dqo) {
                this.flc()
            }
        }
        if (this.bnl.jgx) {
            this.tgi()
        }
        if (this.vjm) {
            this.kik()
        } else {
            this.oya();
            if (this.bnl.zrj) {
                this.gsq()
            }
            if (this.buj()) {
                this.jnd()
            }
            if (this.hgo()) {
                this.mvd()
            }
            if (this.smu() != null && !this.ajb()) {
                this.sex(this.smu())
            }
        }
        if (!(this.vjm && !this.xfp)) {
            this.uqb();
            this.fed()
        }
        if (this.bnl.dqo) {
            this.xig(this.smu())
        }
        this.ake();
        if (!this.vjm) {
            this.mky();
            this.yxo()
        }
        if (!this.xfp) {
            this.gec()
        }
    };
    this.dwv = function() {
        if (!this.tdf) {
            if (this.xqx === false) {
                this.koi.style.marginTop = (-this.height / 2 + this.ggj()) + "px";
                this.koi.style.marginLeft = (-this.width / 2) + "px"
            } else {
                this.koi.style.left = "0px";
                this.koi.style.top = "0px";
                this.koi.style.marginTop = ((this.xwq - this.height) / 2 + this.ggj()) + "px";
                this.koi.style.marginLeft = ((this.qga - this.width) / 2) + "px"
            }
            this.koi.style.width = (this.width > this.qga) ? this.qga + "px" : this.width + "px";
            this.koi.style.height = (this.height > this.xwq) ? this.xwq + "px" : this.height + "px";
            this.canvas.width = Math.round(this.width);
            this.canvas.height = Math.round(this.height);
            this.context2D = this.canvas.getContext("2d");
            this.khi = document.createElement("canvas");
            this.khi.width = this.bnl.ics.exo.width;
            this.khi.height = this.bnl.ics.exo.height;
            this.jsp = this.khi.getContext("2d");
            if (this.zqv() === true && typeof WebGL2D != "undefined") {
                try {
                    this.vbe = document.getElementById("canvas2");
                    this.vbe.width = Math.round(this.bnl.vbe.exo.width);
                    this.vbe.height = Math.round(this.bnl.vbe.exo.height);
                    WebGL2D.enable(this.vbe);
                    this.rbd = this.vbe.getContext("webgl-2d");
                    this.fhx = true;
                    this.dfq = document.createElement("canvas");
                    this.dfq.width = this.bnl.ics.exo.width;
                    this.dfq.height = this.bnl.ics.exo.height;
                    this.cma = this.dfq.getContext("2d")
                } catch (b) {
                    this.vbe = null;
                    this.rbd = null;
                    this.fhx = false
                }
            }
            if (this.xhk) {
                this.xhk.style.width = this.width + "px";
                this.xhk.style.height = this.height + "px"
            }
            this.offsetLeft = this.koi.offsetLeft;
            this.offsetTop = this.koi.offsetTop;
            this.width = this.canvas.width;
            this.height = this.canvas.height;
            this.tdf = true
        }
    };
    this.ake = function() {};
    this.zib = function() {
        ksw.prototype.zib.call(this);
        var b = this.zwb.aar("topi");
        try {
            if (b) {
                if (tbl.xyy.value57 === tbl.ui.phg || this.smu() != null) {
                    b.dqs("language", this.hly.lrj("icon_l"), sessionStorage.sessionValue1, [tbl.language.EN, tbl.language.DE, tbl.language.RU, tbl.language.EE, tbl.language.ES, tbl.language.TR, tbl.language.CZ, tbl.language.GR, tbl.language.AT, tbl.language.US, tbl.language.BG, tbl.language.CO, tbl.language.MX, tbl.language.CL, tbl.language.VE, tbl.language.BR, tbl.language.GE, tbl.language.HU, tbl.language.RO, tbl.language.PT, tbl.language.FR, tbl.language.HR, tbl.language.IT, tbl.language.SE])
                }
                if (this.ajb() === false) {
                    b.uju("help", new String("?"), true)
                }
                if (tbl.xyy.value27 && this.lcu) {
                    b.dqs("audio", this.hly.lrj("icon_a"), this.tvo[this.cjs], this.tvo);
                    if (this.afx() === true) {
                        b.uju("melody", this.hly.lrj("icon_m"), this.qwg)
                    }
                }
                if (sessionStorage.sessionValue14 == "true" && tbl.vpf.xkm()) {
                    b.uju("fullscreen", this.hly.lrj("icon_f"), this.jcg)
                }
                if (tbl.xyy.value28 && this.dso) {
                    b.uju("turbo", this.hly.lrj("icon_t"), this.bvn)
                }
                b.uju("auto", this.hly.lrj("icon_as"), this.hwo);
                b.uju("gamble", this.hly.lrj("icon_g"), this.odb)
            }
        } catch (c) {
            console.error(c)
        }
    };
    this.flc = function() {
        ksw.prototype.flc.call(this);
        var c = this.zwb.aar("topb");
        try {
            if (c) {
                if ((tbl.xyy.value5.length > 1) && (tbl.xyy.value57 === tbl.ui.phg || this.smu() != null)) {
                    c.nth("language", this.language.language, this.rjr(tbl.xyy.value5[this.dwe]), this.ekz, this.xcw.language, 0, 1)
                }
                if (tbl.xyy.value27 && this.lcu) {
                    c.nth("audio", this.language.audio, this.hly.lrj("btn_a"), this.ywv, this.xcw.audio, this.cjs, this.tvo.length);
                    if (this.afx() === true) {
                        c.nth("melody", this.language.oom, this.hly.lrj("btn_mu"), this.qzr, this.xcw.pag, (this.qwg) ? 1 : 0, 2)
                    }
                }
                if (sessionStorage.sessionValue14 == "true" && tbl.vpf.xkm()) {
                    c.nth("fullscreen", this.language.jcg, this.hly.lrj("btn_f"), (tbl.vpf.bgr) ? this.wqz : this.clz, this.xcw.jcg, (this.jcg) ? 1 : 0, 2)
                }
                if (tbl.xyy.value28 && this.dso) {
                    c.nth("turbo", this.language.bvn, this.hly.lrj("btn_t"), this.rdl, this.xcw.bvn, (this.bvn) ? 1 : 0, 2)
                }
                c.tlz("help", this.language.zms, this.hly.lrj("btn_p"), this.xxs, this.xcw.wvo);
                if (this.guo != "" && (tbl.xyy.value81 && tbl.xyy.value81.g === true)) {
                    c.tlz("rules", this.language.bjq, this.hly.lrj("btn_gr"), this.trq, this.xcw.nuy)
                }
                if (tbl.xyy.value12 && !this.qcu()) {
                    c.tlz("history", this.language.uap, this.hly.lrj("btn_h"), this.vrg, this.xcw.uap)
                }
                if (tbl.xyy.value36 && !this.qcu()) {
                    c.tlz("statistic", this.language.xho, this.hly.lrj("btn_st"), this.qge, this.xcw.xho)
                }
                c.zyl()
            }
        } catch (b) {
            console.error(b)
        }
    };
    this.xig = function(b) {
        ksw.prototype.xig.call(this, b);
        var d = this.zwb.aar("settings"),
            e = "",
            c = 0;
        if (d) {
            if (tbl.xyy.value5.length > 1) {
                c++;
                d.nth("language", this.language.language, this.rjr(tbl.xyy.value5[this.dwe]), this.ekz, 0, 1)
            }
            if (tbl.xyy.value27 && this.lcu) {
                c++;
                d.nth("audio", this.language.audio, this.hly.lrj("btn_a"), this.ywv, this.cjs, this.tvo.length);
                if (this.afx() === true) {
                    c++;
                    d.nth("melody", this.language.oom, this.hly.lrj("btn_mu"), this.qzr, (this.qwg) ? 1 : 0, 2)
                }
            }
            if (sessionStorage.sessionValue14 == "true" && tbl.vpf.xkm()) {
                c++;
                d.nth("fullscreen", this.language.jcg, this.hly.lrj("btn_f"), this.wqz, (this.jcg) ? 1 : 0, 2)
            }
            if (tbl.xyy.value28 && this.dso && c < 4) {
                d.nth("turbo", this.language.bvn, this.hly.lrj("btn_t"), this.rdl, (this.bvn) ? 1 : 0, 2)
            }
            d.nth("gamble", this.language.odb, this.hly.lrj("btn_g"), this.bwh, (this.odb) ? 1 : 0, 2);
            if (this.nns[this.gyd] === tbl.fax.srp) {
                e = this.language.left
            } else {
                if (this.nns[this.gyd] === tbl.fax.cwp) {
                    e = this.language.bnt
                } else {
                    if (this.nns[this.gyd] === tbl.fax.krg) {
                        e = this.language.uhy
                    }
                }
            }
            d.nth("adjustment", e, this.hly.lrj("btn_l"), this.gbx, (this.jpr === tbl.bnl.fae) ? 0 : 1, 2);
            d.cts("help", this.language.wvo, this.hly.lrj("btn_p"), this.xxs);
            if (this.guo != "" && (tbl.xyy.value81 && tbl.xyy.value81.g === true)) {
                d.cts("rules", this.language.qtu, this.hly.lrj("btn_gr"), this.trq)
            }
            if (tbl.xyy.value12 && !this.qcu()) {
                d.cts("history", this.language.uap, this.hly.lrj("btn_h"), this.vrg)
            }
            if (tbl.xyy.value36 && !this.qcu()) {
                d.cts("statistic", this.language.xho, this.hly.lrj("btn_st"), this.qge)
            }
            d.fxc = this.acf();
            d.zfg(this.bnl.pnn);
            d.ylm(this.bnl.pnn);
            d.ioq(this.style.pnn);
            d.uib(this.language, true)
        }
    };
    this.kgd = function() {
        var b = (this.vjm && this.vqz) ? this.bnl.cqb : this.bnl.exn;
        this.kdj = new fxq();
        this.kdj.parent = this;
        this.kdj.pgw = this.pgw;
        this.kdj.brv(b.exo, null, this.context2D);
        this.kdj.zfg(b, this.style.exn);
        this.kdj.qod(this.dvs, 0);
        this.kdj.qod(this.aor, 1)
    };
    this.gfz = function() {};
    this.oya = function() {};
    this.fed = function() {
        this.gnk.oex(this.bnl.ehc, this.style.ehc, this.hly.lrj("btn_s"))
    };
    this.bhn = function() {};
    this.wez = function() {};
    this.gsq = function() {
        var b = new ohg();
        b.brv(this.bnl.top.exo, null, this.context2D);
        b.parent = this;
        this.zwb.oro("tops", b)
    };
    this.cha = function() {
        this.xmc = []
    };
    this.bbn = function() {
        var e = [],
            c = (this.state == tbl.ukv.uvm.vcd || this.state == tbl.ukv.uvm.pzf || this.state == tbl.ukv.uvm.lef || this.state == tbl.ukv.uvm.nhu || this.state == tbl.ukv.uvm.ooy) ? true : false;
        if (c) {
            if (this.qqs) {
                e = this.oaw
            } else {
                e = this.lio
            }
        } else {
            e = this.lio
        }
        this.zyj = new ead();
        this.jhu = new ead();
        this.hwg = new ead();
        this.gmw = new ead();
        this.hme = new ead();
        this.zyj.vez = this.hly.uvl("stop1");
        this.jhu.vez = this.hly.uvl("stop2");
        this.hwg.vez = this.hly.uvl("stop1");
        if (this.gmw != null) {
            this.gmw.vez = this.hly.uvl("stop2")
        }
        if (this.hme != null) {
            this.hme.vez = this.hly.uvl("stop1")
        }
        if (this.fhx === false) {
            this.zyj.brv(this.bnl.zyj.exo, this.context2D, null, (this.iil) ? this.bnl.zyj.xwy : this.bnl.zyj.ezr, this.vwf, this.fcp, this.r1, this.dec[0])
        } else {
            this.zyj.brv(this.bnl.zyj.plz, this.rbd, null, (this.iil) ? this.bnl.zyj.xwy : this.bnl.zyj.ezr, this.vwf, this.fcp, this.r1, this.dec[0])
        }
        this.zyj.cau(e[0], true);
        if (this.fhx === false) {
            this.jhu.brv(this.bnl.jhu.exo, this.context2D, null, (this.iil) ? this.bnl.jhu.xwy : this.bnl.jhu.ezr, this.vwf, this.fcp, this.r2, this.dec[1])
        } else {
            this.jhu.brv(this.bnl.jhu.plz, this.rbd, null, (this.iil) ? this.bnl.jhu.xwy : this.bnl.jhu.ezr, this.vwf, this.fcp, this.r2, this.dec[1])
        }
        this.jhu.cau(e[1], true);
        if (this.fhx === false) {
            this.hwg.brv(this.bnl.hwg.exo, this.context2D, null, (this.iil) ? this.bnl.hwg.xwy : this.bnl.hwg.ezr, this.vwf, this.fcp, this.r3, this.dec[2])
        } else {
            this.hwg.brv(this.bnl.hwg.plz, this.rbd, null, (this.iil) ? this.bnl.hwg.xwy : this.bnl.hwg.ezr, this.vwf, this.fcp, this.r3, this.dec[2])
        }
        this.hwg.cau(e[2], true);
        if (this.fhx === false) {
            this.gmw.brv(this.bnl.gmw.exo, this.context2D, null, (this.iil) ? this.bnl.gmw.xwy : this.bnl.gmw.ezr, this.vwf, this.fcp, this.r4, this.dec[3])
        } else {
            this.gmw.brv(this.bnl.gmw.plz, this.rbd, null, (this.iil) ? this.bnl.gmw.xwy : this.bnl.gmw.ezr, this.vwf, this.fcp, this.r4, this.dec[3])
        }
        this.gmw.cau(e[3], true);
        if (this.fhx === false) {
            this.hme.brv(this.bnl.hme.exo, this.context2D, null, (this.iil) ? this.bnl.hme.xwy : this.bnl.hme.ezr, this.vwf, this.fcp, this.r5, this.dec[4])
        } else {
            this.hme.brv(this.bnl.hme.plz, this.rbd, null, (this.iil) ? this.bnl.hme.xwy : this.bnl.hme.ezr, this.vwf, this.fcp, this.r5, this.dec[4])
        }
        this.hme.cau(e[4], true);
        this.etr = [this.zyj, this.jhu, this.hwg, this.gmw, this.hme];
        this.dvw = [true, true, true, true, true];
        for (var d = 0, b = this.etr.length; d < b; d++) {
            this.etr[d].parent = this;
            this.etr[d].ioq(this.style.zvx);
            this.etr[d].sgs(this.hly.lrj("reelfront"))
        }
    };
    this.uqb = function() {
        this.gnk = new mzz();
        this.gnk.brv(this.bnl.ehc.exo, null, this.context2D);
        this.gnk.parent = this;
        this.gnk.aqm(false);
        this.gnk.ylm(this.bnl.ehc);
        this.gnk.ioq(this.style.ehc)
    };
    this.sov = function() {
        var c = this.bnl.odb,
            b = this.hly.lrj("g_back");
        if (this.vjm && this.vqz && this.style.zbv.czc) {
            c = this.bnl.cju;
            b = this.hly.lrj("m_g_back")
        }
        this.izi = new ihf();
        this.izi.parent = this;
        this.izi.brv(c.exo, null, this.context2D);
        this.izi.vpm = b;
        this.izi.zfg(c);
        this.izi.ioq(this.style.odb);
        this.izi.ssb();
        this.izi.qod(this.ucs, 0);
        this.izi.yaf(false)
    };
    this.lrz = function() {};
    this.odr = function() {
        this.mrb = this.kxt();
        this.mrb.parent = this;
        this.mrb.erw = this.erw;
        this.mrb.pwk = this.pta;
        this.mrb.ilo = this.ilo;
        this.mrb.tph = this.tph;
        this.mrb.gxd = this.gxd;
        this.mrb.xnz = this.pur;
        this.mrb.gqc = this.xmc;
        this.mrb.zbh = this.jcd;
        this.mrb.lts = (this.icw == true || this.sxv == true);
        this.mrb.zuq = this.jcw;
        this.mrb.ogp = this.ogp;
        this.mrb.ylm(this.bnl.qaw);
        this.mrb.ioq(this.style.qaw)
    };
    this.mpo = function() {
        var b = new esm();
        b.brv(this.bnl.htb.exo, null, this.context2D);
        b.parent = this;
        b.lbd = this.language.hzg;
        b.xcv = this.jtc;
        b.hjk = this.xcw.pgr.raz;
        b.hoh = this.xcw.jdl.raz;
        b.wng = this.hly.lrj("effect");
        b.ylm(this.bnl.htb);
        b.ioq(this.style.bnj);
        b.kfi(this.axy, this.oav(), this.spp(false));
        b.hsm(this.qhb(), this.spp(true));
        b.myq(this.uik, false);
        b.yaf(false);
        this.zwb.oro("betsel", b)
    };
    this.qww = function() {
        this.mfx = [];
        for (var b = this.pwy; b <= this.wrm;) {
            this.mfx.push(b);
            b += this.ixc
        }
        var c = new ezp();
        c.brv(this.bnl.ndy.exo, null, this.context2D);
        c.parent = this;
        c.lbd = this.language.yos;
        c.xcv = this.tiq;
        c.hjk = this.xcw.ntl.raz;
        c.hoh = this.xcw.vto.raz;
        c.wng = this.hly.lrj("effect");
        c.ylm(this.bnl.ndy);
        c.ioq(this.style.bnj);
        c.kfi(this.mfx, 0, this.mfx.length - 1);
        c.hca(this.yos, false);
        c.yaf(false);
        this.zwb.oro("linesel", c)
    };
    this.tgi = function() {
        this.zwb.oro("llinep", this.cwt(this.bnl.lmc.exo.x, this.bnl.lmc.exo.y, this.hly.lrj("winlines"), this.wec, this.lrf, this.bnl.lmc));
        this.zwb.oro("rlinep", this.cwt(this.bnl.ulf.exo.x, this.bnl.ulf.exo.y, this.hly.lrj("winlines"), this.kzw, this.yjr, this.bnl.ulf));
        this.zwb.nwi("llinep", "#kwn", [this.yos]);
        this.zwb.nwi("rlinep", "#kwn", [this.yos])
    };
    this.pil = function() {
        var c = new qhl(),
            b = this.hly.lrj("m_win");
        if (this.vjm && this.vqz && this.style.zbv.czc) {
            b = this.hly.lrj("m_m_win")
        }
        c.brv(this.bnl.npw.exo, this.context2D, null, b, "");
        c.parent = this;
        c.ylm(this.bnl.npw);
        c.ioq(this.style.npw);
        c.yaf(false);
        this.zwb.oro("winp", c)
    };
    this.iuf = function() {};
    this.kik = function() {
        var b = new dxb();
        b.brv(this.bnl.uap.exo, null, this.context2D);
        b.parent = this;
        b.zfg(this.bnl.uap);
        b.ioq(this.style.uap);
        this.zwb.oro("history", b)
    };
    this.cwt = function(b, j, d, g, c, e) {
        var f = new fmq();
        f.brv(new drx(b, j, 0, 0), this.context2D);
        f.yqd = this.xrr;
        f.parent = this;
        f.unx = g;
        f.lon = c;
        f.ylm(e);
        f.ztt(d);
        f.yaf(true);
        return f
    };
    this.kxt = function() {
        var e = [];
        for (var d = 0, b = this.hly.npl("symb"); d < b; d++) {
            e[d] = this.hly.lrj("symb" + d)
        }
        var c = new wsn();
        c.brv(this.bnl.qaw.exo, null, this.context2D);
        c.keq = e;
        c.aba = this.hly.lrj("reelfront");
        c.yaf(false);
        return c
    };
    this.ofe = function() {
        if (this.hjn === true) {
            for (var c = 0, b = this.etr.length; c < b; c++) {
                if (!this.fhx) {
                    this.etr[c].tpk(this.khi, this.bnl.ics.nkd, this.bnl.ics.ewh)
                }
            }
            if (this.mrb) {
                this.mrb.tpk(this.khi, this.bnl.ics.nkd + this.mrb.x, this.bnl.ics.ewh + this.mrb.y)
            }
        }
        if (this.kdj) {
            this.kdj.tpk(this.khi, this.bnl.ics.nkd, this.bnl.ics.ewh)
        }
    };
    this.qay = function(d, c, b) {
        this.hch({
            type: "gameDataLoaded",
            sender: this.wkz,
            lang: sessionStorage.sessionValue1.toUpperCase(),
            data: {
                success: true
            }
        });
        this.grs = true;
        this.state = d;
        this.jix = b;
        clearInterval(this.gkx);
        if (this.lcu) {
            if (webAudioEngine && webAudioEngine.state == "suspended") {
                this.cjs = 0
            }
            if (this.hly.whc === true) {
                this.uht(this.tvo[this.cjs])
            } else {
                this.pde((this.tvo[this.cjs] === 0))
            }
        }
        if (this.nrx === true) {
            this.kpy = true
        }
        this.kfi();
        this.cmu();
        this.wvz();
        this.zya();
        if (this.izi) {
            this.izi.zgu.nwi("history", "#duw", [c])
        }
        this.avl();
        window.cyh(this.myb)
    };
    this.myb = function() {
        tbl.zbv.bhg(tbl.zbv.jix);
        tbl.zbv.wzg = true;
        tbl.zbv.ysn();
        tbl.zbv.drk();
        tbl.zbv.ofe();
        tbl.zbv.yud();
        if (tbl.zbv.nrx === true) {
            tbl.zbv.web(true)
        }
        if (tbl.vpf.lhl === tbl.os.ijc && tbl.vpf.ddh !== tbl.hxu.ecu) {
            tbl.zbv.jem([{
                oai: tbl.lgc.uvk
            }])
        } else {
            if (tbl.zbv.vte > 0) {
                if (tbl.zbv.wvw === 0) {
                    tbl.zbv.jem([{
                        oai: tbl.lgc.quq
                    }])
                } else {
                    if (tbl.zbv.wvw < tbl.zbv.vte) {
                        tbl.zbv.jem([{
                            oai: tbl.lgc.rag
                        }])
                    }
                }
            } else {
                tbl.zbv.zuf(tbl.zbv.state)
            }
        }
        if (tbl.xyy.value37 && !tbl.zbv.qcu()) {
            tbl.zbv.xxe()
        }
        if (tbl.zbv.hgo()) {
            setTimeout(tbl.zbv.yud, 20)
        }
    };
    this.qqo = function() {
        this.agu = new aeu().brv(this, tbl.xyy.value6)
    };
    this.twa = function() {
        this.agu = new qyw().brv(this, tbl.xyy.value6)
    };
    this.cmi = function(q) {
        if (q.preventDefault) {
            q.preventDefault()
        }
        if (q.stopPropagation) {
            q.stopPropagation()
        }
        if (this.kpy) {
            return
        }
        var k = 0,
            j = 0,
            u = false,
            l = false,
            f = false,
            v = this.zwb.aar("stats"),
            t = this.zwb.aar("topb"),
            c = this.zwb.aar("topi"),
            d = this.zwb.aar("betsel"),
            n = this.zwb.aar("linesel"),
            o = this.zwb.aar("llinep"),
            w = this.zwb.aar("rlinep"),
            z = this.zwb.aar("finfop"),
            p = this.zwb.aar("finfoc"),
            m = this.zwb.aar("autop"),
            b = this.zwb.aar("settings"),
            g = this.zwb.aar("jwp");
        if (q.touches) {
            var e = q.touches[0];
            u = true;
            if (!this.xow) {
                k = e.pageX - this.offsetLeft;
                j = e.pageY - this.offsetTop
            } else {
                k = Math.round((e.pageX - this.offsetLeft) / this.vce);
                j = Math.round((e.pageY - this.offsetTop) / this.yhn)
            }
        } else {
            if (q.which != 1) {
                return
            }
            if (!this.xow) {
                k = q.pageX - this.offsetLeft;
                j = q.pageY - this.offsetTop
            } else {
                k = Math.round((q.pageX - this.offsetLeft) / this.vce);
                j = Math.round((q.pageY - this.offsetTop) / this.yhn)
            }
        }
        this.erf();
        if (m && m.iac()) {
            if (m.cmi(k, j)) {
                return
            }
        }
        if (t && t.iac()) {
            if (t.cmi(k, j)) {
                clearTimeout(this.pfm);
                return
            } else {
                f = true
            }
        }
        if (d) {
            if (d.iac()) {
                if (d.cmi(k, j, u)) {
                    clearTimeout(this.pfm);
                    return
                } else {
                    l = true
                }
            }
        }
        if (n) {
            if (n.iac()) {
                if (n.cmi(k, j, u)) {
                    clearTimeout(this.pfm);
                    return
                } else {
                    l = true
                }
            }
        }
        if (f) {
            this.wuy(this.kdj.eue(k, j, null));
            return
        } else {
            if (l) {
                if ((d && d.vib()) && ((n && n.vib()) || !n)) {
                    this.jzk(this.kdj.eue(k, j, null))
                }
                return
            }
        }
        if (this.acf() && !this.uyx && o && w) {
            if (o.cmi(k, j, l)) {
                return
            } else {
                if (w.cmi(k, j, l)) {
                    return
                }
            }
        }
        if (z) {
            if (z.cmi(k, j)) {
                return
            }
        }
        if (p) {
            if (p.cmi(k, j)) {
                return
            }
        }
        if (b && b.iac()) {
            if (b.cmi(k, j)) {
                return
            }
        }
        if (c) {
            if (c.cmi(k, j, u)) {
                return
            }
        }
        if (v && v.iac()) {
            if (v.cmi(k, j)) {
                return
            }
        }
        if (this.gnk && this.gnk.iac()) {
            if (this.gnk.cmi(k, j)) {
                return
            }
        }
        if (this.izi && this.izi.iac()) {
            if (this.izi.cmi(k, j)) {
                return
            }
        }
        if (g) {
            if (g.cmi(k, j)) {
                return
            }
        }
        if (this.kdj) {
            if (this.kdj.cmi(k, j, l)) {
                return
            }
        }
        for (var r = 0, s = this.etr.length; r < s; r++) {
            if (this.etr[r].cmi(k, j)) {
                return
            }
        }
    };
    this.arh = function(j) {
        if (j.preventDefault) {
            j.preventDefault()
        }
        if (j.stopPropagation) {
            j.stopPropagation()
        }
        if (this.kpy) {
            return
        }
        var k = this.zwb.aar("topb"),
            d = this.zwb.aar("autop"),
            g = this.zwb.aar("settings"),
            c = this.zwb.aar("betsel"),
            e = this.zwb.aar("linesel");
        if (d && d.iac()) {
            if (d.arh()) {
                return
            }
        }
        if (c) {
            if (c.arh()) {
                return
            }
        }
        if (e) {
            if (e.arh()) {
                return
            }
        }
        if (this.gnk && this.gnk.iac()) {
            if (this.gnk.arh()) {
                return
            }
        }
        if (this.izi && this.izi.iac()) {
            if (this.izi.arh()) {
                return
            }
        }
        if (this.kdj) {
            if (this.kdj.arh()) {
                return
            }
        }
        if (k) {
            if (k.arh()) {
                return
            }
        }
        if (g) {
            if (g.arh()) {
                return
            }
        }
        for (var f = 0, b = this.etr.length; f < b; f++) {
            if (this.etr[f].arh()) {
                return
            }
        }
    };
    this.usa = function(c) {
        if (c.preventDefault) {
            c.preventDefault()
        }
        if (c.stopPropagation) {
            c.stopPropagation()
        }
        if (this.kpy) {
            return
        }
        var k = false,
            e = false,
            l = this.zwb.aar("topb"),
            b = this.zwb.aar("betsel"),
            d = this.zwb.aar("linesel"),
            g = this.zwb.aar("finfop"),
            j = this.zwb.aar("finfoc"),
            f = this.zwb.aar("autop");
        if (f && f.iac()) {
            if (f.usa(c.keyCode)) {
                return
            }
        }
        if (l) {
            if (l.usa(c.keyCode)) {
                clearTimeout(this.pfm);
                return
            } else {
                if (l.iac() && l.vib()) {
                    e = true
                }
            }
        }
        if (g) {
            if (g.usa()) {
                return
            }
        }
        if (j) {
            if (j.usa(c.keyCode)) {
                return
            }
        }
        if (b) {
            if (b.iac()) {
                if (b.usa(c.keyCode)) {
                    clearTimeout(this.pfm);
                    return
                } else {
                    k = true
                }
            }
        }
        if (d) {
            if (d.iac()) {
                if (d.usa(c.keyCode)) {
                    clearTimeout(this.pfm);
                    return
                } else {
                    k = true
                }
            }
        }
        if (e) {
            this.wuy(this.kdj.eue(null, null, c.keyCode));
            return
        } else {
            if (k) {
                if ((b && b.vib()) && ((d && d.vib()) || !d)) {
                    this.jzk(this.kdj.eue(null, null, c.keyCode))
                }
                return
            }
        }
        if (this.gnk && this.gnk.iac()) {
            if (this.gnk.usa(c.keyCode)) {
                return
            }
        }
        if (this.izi && this.izi.iac()) {
            if (this.izi.usa(c.keyCode)) {
                return
            }
        }
        if (this.kdj) {
            if (this.kdj.usa(c.keyCode)) {
                return
            }
        }
    };
    this.vrb = function(c) {
        if (c.preventDefault) {
            c.preventDefault()
        }
        if (c.stopPropagation) {
            c.stopPropagation()
        }
        if (this.kpy) {
            return
        }
        var b = this.zwb.aar("autop"),
            d = this.zwb.aar("topb");
        if (b && b.iac()) {
            if (b.vrb()) {
                return
            }
        }
        if (this.gnk && this.gnk.iac()) {
            if (this.gnk.vrb()) {
                return
            }
        }
        if (this.izi && this.izi.iac()) {
            if (this.izi.vrb()) {
                return
            }
        }
        if (this.kdj) {
            if (this.kdj.vrb(c.keyCode)) {
                return
            }
        }
        if (d) {
            if (d.vrb()) {
                return
            }
        }
    };
    this.ajb = function() {
        return (tbl.vpf.jap() && !this.vjm)
    };
    this.rde = function() {
        return (tbl.vpf.jap() && !this.xfp)
    };
    this.afx = function() {
        return (this.ygg === true && this.hly.whc === true)
    };
    this.jnl = function() {
        if (this.afx() === true) {
            this.hly.dvl("melody")
        }
    };
    this.sau = function() {
        if (this.afx() === true) {
            this.hly.jsl("melody")
        }
    };
    this.lfn = function(c, b) {
        if (this.afx() === true && this.qwg === true) {
            this.hly.jib("melody", c, b)
        }
    };
    this.ruu = function() {
        return false
    };
    this.gqb = function() {
        return 1
    };
    this.eef = function() {
        return 0
    };
    this.yct = function(b) {
        this.bnl = this.shu(b);
        this.width = this.bnl.canvas.exo.width;
        this.height = this.bnl.canvas.exo.height;
        this.mdh();
        this.qbe();
        this.hxb()
    };
    this.btg = function() {
        this.style = new xkh()
    };
    this.shu = function(b) {
        this.jpr = b;
        if (b == tbl.bnl.lpq) {
            return new sef()
        } else {
            if (b == tbl.bnl.lyw) {
                return new fqs()
            } else {
                if (b == tbl.bnl.mjj) {
                    return new rbo()
                } else {
                    if (b == tbl.bnl.kak) {
                        return new qrn()
                    } else {
                        if (b == tbl.bnl.xxd) {
                            return new wrb()
                        } else {
                            if (b == tbl.bnl.lcm) {
                                return new ftf()
                            } else {
                                if (b == tbl.bnl.qlv) {
                                    return new iom()
                                } else {
                                    if (b == tbl.bnl.chg) {
                                        return new hbt()
                                    } else {
                                        if (b == tbl.bnl.tqx) {
                                            return new yqu()
                                        } else {
                                            if (b == tbl.bnl.tqe) {
                                                return new qor()
                                            } else {
                                                if (b == tbl.bnl.fae) {
                                                    return new whm()
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return null
    };
    this.hxb = function() {};
    this.zuw = function(b) {
        if (this.tdf) {
            this.zpp();
            this.trc(b);
            this.ofe()
        } else {
            this.pmk()
        }
    };
    this.zpp = function() {
        this.canvas.width = 0;
        if (this.xqx === false) {
            this.koi.style.marginTop = (-this.height / 2 + this.ggj()) + "px";
            this.koi.style.marginLeft = (-this.width / 2) + "px"
        } else {
            this.koi.style.left = "0px";
            this.koi.style.top = "0px";
            this.koi.style.marginTop = ((this.xwq - this.height) / 2 + this.ggj()) + "px";
            this.koi.style.marginLeft = ((this.qga - this.width) / 2) + "px"
        }
        this.koi.style.width = (this.width > this.qga) ? this.qga + "px" : this.width + "px";
        this.koi.style.height = (this.height > this.xwq) ? this.xwq + "px" : this.height + "px";
        this.canvas.width = Math.round(this.width);
        this.canvas.height = Math.round(this.height);
        if (this.xhk) {
            this.xhk.style.width = this.width + "px";
            this.xhk.style.height = this.height + "px"
        }
        this.width = this.canvas.width;
        this.height = this.canvas.height
    };
    this.trc = function(b) {
        this.adk();
        this.cxt();
        this.ajf();
        this.lyj();
        this.bzu();
        if (!(this.vjm && !this.xfp)) {
            this.ude()
        }
        if (!this.vjm) {
            this.obp();
            if (this.bnl.zrj) {
                if (this.zwb.aar("tops")) {
                    this.hip()
                } else {
                    this.gsq()
                }
            } else {
                this.zwb.vbi("tops")
            }
            if (this.buj()) {
                this.yaj()
            }
            this.gvd();
            if (this.hgo()) {
                this.ezt()
            }
        } else {
            this.kik()
        }
        if (this.bnl.vpc) {
            this.oqu();
            this.nob()
        }
        if (this.bnl.isp) {
            this.hnh();
            if (this.acf()) {
                this.adx()
            }
        }
        if (this.bnl.kut) {
            this.paz();
            if (!this.bnl.dqo) {
                this.huu()
            }
        }
        if (this.bnl.jgx) {
            this.zdy()
        }
        if (this.bnl.dqo) {
            this.jiu()
        }
        this.jdv();
        if (b) {
            this.zdk()
        }
        this.tdg();
        this.tlo();
        this.vtu()
    };
    this.adk = function() {
        if (this.kdj) {
            var b = (this.vjm && this.vqz) ? this.bnl.cqb : this.bnl.exn;
            this.kdj.gix(b.exo);
            this.kdj.ylm(b, this.vjf);
            if (this.bnl.btl === true) {
                this.kdj.ioq(this.style.exn, this.vjf)
            }
        }
    };
    this.cxt = function() {
        if (this.zyj) {
            this.zyj.gix((this.fhx === false) ? this.bnl.zyj.exo : this.bnl.zyj.plz, (this.iil) ? this.bnl.zyj.xwy : this.bnl.zyj.ezr)
        }
        if (this.jhu) {
            this.jhu.gix((this.fhx === false) ? this.bnl.jhu.exo : this.bnl.jhu.plz, (this.iil) ? this.bnl.jhu.xwy : this.bnl.jhu.ezr)
        }
        if (this.hwg) {
            this.hwg.gix((this.fhx === false) ? this.bnl.hwg.exo : this.bnl.hwg.plz, (this.iil) ? this.bnl.hwg.xwy : this.bnl.hwg.ezr)
        }
        if (this.gmw) {
            this.gmw.gix((this.fhx === false) ? this.bnl.gmw.exo : this.bnl.gmw.plz, (this.iil) ? this.bnl.gmw.xwy : this.bnl.gmw.ezr)
        }
        if (this.hme) {
            this.hme.gix((this.fhx === false) ? this.bnl.hme.exo : this.bnl.hme.plz, (this.iil) ? this.bnl.hme.xwy : this.bnl.hme.ezr)
        }
    };
    this.oqu = function() {
        var b = this.zwb.aar("winp");
        if (b) {
            b.gix(this.bnl.npw.exo);
            b.ylm(this.bnl.npw)
        }
    };
    this.nob = function() {};
    this.ajf = function() {
        if (this.mrb) {
            this.mrb.gix(this.bnl.qaw.exo);
            this.mrb.erw = this.erw;
            this.mrb.tph = this.tph;
            this.mrb.ylm(this.bnl.qaw)
        }
    };
    this.zdy = function() {
        var c = this.zwb.aar("llinep"),
            b = this.zwb.aar("rlinep");
        if (c) {
            c.x = this.bnl.lmc.exo.x;
            c.y = this.bnl.lmc.exo.y;
            c.ylm(this.bnl.lmc)
        }
        if (b) {
            b.x = this.bnl.ulf.exo.x;
            b.y = this.bnl.ulf.exo.y;
            b.ylm(this.bnl.ulf)
        }
    };
    this.hnh = function() {
        var b = this.zwb.aar("betsel");
        if (b) {
            b.gix(this.bnl.htb.exo);
            b.ylm(this.bnl.htb)
        }
    };
    this.adx = function() {
        var b = this.zwb.aar("linesel");
        if (b) {
            b.gix(this.bnl.ndy.exo);
            b.ylm(this.bnl.ndy)
        }
    };
    this.hip = function() {
        var b = this.zwb.aar("tops");
        if (b) {
            b.gix(this.bnl.top.exo);
            b.yaf(this.bnl.zrj)
        }
    };
    this.ude = function() {
        if (this.gnk) {
            this.gnk.gix(this.bnl.ehc.exo);
            this.gnk.ylm(this.bnl.ehc);
            if (this.bnl.btl === true) {
                this.gnk.ioq(this.style.ehc)
            }
        }
    };
    this.bzu = function() {
        if (this.izi) {
            var b = (this.vjm && this.vqz) ? this.bnl.cju : this.bnl.odb;
            this.izi.gix(b.exo);
            this.izi.ylm(b);
            if (this.bnl.btl === true) {
                this.izi.ioq(this.style.odb)
            }
        }
    };
    this.lyj = function() {};
    this.obp = function() {};
    this.jdv = function() {};
    this.zdk = function() {
        if (this.zwb.aar("tops")) {
            this.gnk.giq(true);
            this.wez()
        } else {
            this.xrs = null;
            this.gnk.rbc(this.ujp, true)
        }
        this.gnk.mkm()
    };
    this.mdh = function() {
        var c = 0 - this.bnl.qaw.exo.x,
            b = 0 - this.bnl.qaw.exo.y;
        this.tph = [
            [{
                x: this.bnl.zyj.exo.x + c,
                y: this.bnl.zyj.exo.y + b
            }, {
                x: this.bnl.zyj.exo.x + c,
                y: this.bnl.zyj.exo.y + b + this.bnl.qaw.nql
            }, {
                x: this.bnl.zyj.exo.x + c,
                y: this.bnl.zyj.exo.y + b + 2 * this.bnl.qaw.nql
            }],
            [{
                x: this.bnl.jhu.exo.x + c,
                y: this.bnl.jhu.exo.y + b
            }, {
                x: this.bnl.jhu.exo.x + c,
                y: this.bnl.jhu.exo.y + b + this.bnl.qaw.nql
            }, {
                x: this.bnl.jhu.exo.x + c,
                y: this.bnl.jhu.exo.y + b + 2 * this.bnl.qaw.nql
            }],
            [{
                x: this.bnl.hwg.exo.x + c,
                y: this.bnl.hwg.exo.y + b
            }, {
                x: this.bnl.hwg.exo.x + c,
                y: this.bnl.hwg.exo.y + b + this.bnl.qaw.nql
            }, {
                x: this.bnl.hwg.exo.x + c,
                y: this.bnl.hwg.exo.y + b + 2 * this.bnl.qaw.nql
            }],
            [{
                x: this.bnl.gmw.exo.x + c,
                y: this.bnl.gmw.exo.y + b
            }, {
                x: this.bnl.gmw.exo.x + c,
                y: this.bnl.gmw.exo.y + b + this.bnl.qaw.nql
            }, {
                x: this.bnl.gmw.exo.x + c,
                y: this.bnl.gmw.exo.y + b + 2 * this.bnl.qaw.nql
            }],
            [{
                x: this.bnl.hme.exo.x + c,
                y: this.bnl.hme.exo.y + b
            }, {
                x: this.bnl.hme.exo.x + c,
                y: this.bnl.hme.exo.y + b + this.bnl.qaw.nql
            }, {
                x: this.bnl.hme.exo.x + c,
                y: this.bnl.hme.exo.y + b + 2 * this.bnl.qaw.nql
            }]
        ]
    };
    this.qbe = function() {
        var e = 0 - this.bnl.qaw.exo.x,
            b = 0 - this.bnl.qaw.exo.y;
        this.erw = [];
        for (var g = 0, f = this.bnl.erw.length; g < f; g++) {
            this.erw[g] = [];
            for (var d = 0, k = 0, c = this.bnl.erw[g].length; d < c; d += 2, k += 1) {
                this.erw[g][k] = {
                    x: this.bnl.erw[g][d] + e,
                    y: this.bnl.erw[g][d + 1] + b
                }
            }
        }
    };
    this.ern = function() {
        this.dvs = [];
        if (this.qcu() === false && this.prs != "") {
            this.dvs.push(this.prs)
        }
        this.dvs.push(this.language.kft);
        this.dvs.push(this.language.jux + " " + this.fyo(this.hwy()) + ((this.ajb() === true) ? "|" : " ") + this.language.yxu + " " + this.fyo(this.hdu()));
        this.dvs.push(this.language.hwd)
    };
    this.uhe = function() {
        this.aor = [];
        this.aor[0] = this.language.vdh;
        this.aor[1] = this.language.gap
    };
    this.clq = function() {
        this.ucs = [];
        this.ucs[0] = this.language.uhd;
        this.ucs[1] = this.language.xwv
    };
    this.zea = function() {
        ksw.prototype.zea.call(this);
        if (this.ykt() === true) {
            this.hly.rrc(true);
            this.hly.rdn(tbl.xyy.value45 === tbl.tnv.xjq || tbl.xyy.value45 === tbl.tnv.nhj)
        }
    };
    this.wdc = function() {
        var c = "";
        this.hly.zcd("spin", null, false, this.vrk + "reels");
        this.hly.zcd("stop1", null, false, this.vrk + "stop_reel2");
        this.hly.zcd("stop2", null, false, this.vrk + "stop_reel2");
        this.hly.zcd("start", null, false, this.vrk + "onstart");
        if (this.afx() === true) {
            this.hly.zcd("melody", null, true, this.vrk + "background")
        }
        if (this.hqd > 0) {
            this.hly.zcd("wincountfade", null, false, this.vrk + "count_fade")
        }
        c = tbl.xyy.value30 + "/slot/sounds/";
        this.hly.zcd("winfinal", this.rnt, false, c + "winfinal");
        if (this.vrd <= 2) {
            this.hly.zcd("wincount", null, false, c + "countup" + this.vrd + "1");
            this.hly.zcd("wincount1", null, false, c + "countup" + this.vrd + "2");
            this.hly.zcd("wincount3", null, false, c + "countup" + this.vrd + "3");
            this.hly.zcd("wincount5", null, false, c + "countup" + this.vrd + "4");
            if (this.hly.whc === false) {
                this.hly.zcd("wincount2", null, false, c + "countup" + this.vrd + "2");
                this.hly.zcd("wincount4", null, false, c + "countup" + this.vrd + "3");
                this.hly.zcd("wincount6", null, false, c + "countup" + this.vrd + "4")
            }
            this.hly.zcd("winline", null, false, c + "winline");
            this.hly.zcd("collect", null, false, c + "collect");
            this.hly.zcd("collectend", null, false, c + "collect1")
        }
        c = tbl.xyy.value30 + "/basic/sounds/";
        this.hly.zcd("silence", null, false, c + "silence");
        this.hly.zcd("audioon", null, false, c + "audio_on");
        if (!tbl.xyy.value55) {
            if (this.ajb() === false) {
                this.hly.zcd("btn", null, false, c + "btn");
                this.hly.zcd("auto_on", null, false, c + "auto_on");
                this.hly.zcd("auto_off", null, false, c + "auto_off");
                this.hly.zcd("gamble_on", null, false, c + "gamble_on");
                this.hly.zcd("gamble_off", null, false, c + "gamble_off");
                if (this.afx() === false && this.vrd <= 2) {
                    this.hly.zcd("gambleprop", null, true, c + "gambleprop")
                }
                for (var b = 0; b < 12; b++) {
                    this.hly.zcd("step" + b, null, false, c + "step" + (b + 1))
                }
                this.hly.zcd("maxstep", null, false, c + "maxstep")
            } else {
                this.hly.zcd("btn", null, false, c + "btn2");
                this.hly.zcd("auto_on", null, false, c + "auto_on");
                this.hly.zcd("auto_off", null, false, c + "auto_off")
            }
        } else {
            this.hly.zcd("btn", null, false, c + "ama_btn");
            if (this.ajb() === false) {
                this.hly.zcd("gamble_on", null, false, c + "ama_gamble_on");
                this.hly.zcd("gamble_off", null, false, c + "ama_gamble_off");
                if (this.afx() === false && this.vrd <= 2) {
                    this.hly.zcd("gambleprop", null, true, c + "ama_gambleprop")
                }
                for (var b = 0; b < 12; b++) {
                    this.hly.zcd("step" + b, null, false, c + "ama_step")
                }
                this.hly.zcd("maxstep", null, false, c + "ama_step")
            }
        }
        if (this.lnm() === true) {
            this.hly.zcd("jackpot", null, false, c + "jackpot");
            if (this.fac()) {
                this.hly.zcd("mystery_jackpot", null, false, c + "mystery_jackpot")
            }
        }
        if (this.ajb() === false) {
            this.hly.zcd("panel_in", null, false, c + "panel_in");
            this.hly.zcd("panel_out", null, false, c + "panel_out")
        }
        c = tbl.xyy.value30 + "/gamble/sounds/";
        this.hly.zcd("gamble1", null, false, c + "deal_2");
        this.hly.zcd("gamble2", null, false, c + "deal_2");
        this.hly.zcd("gamblewin1", null, false, c + "win1");
        this.hly.zcd("gamblewin2", null, false, c + "win2");
        this.hly.zcd("gamblewin3", null, false, c + "win3");
        this.eye();
        this.mnj();
        this.jbd()
    };
    this.eye = function() {
        for (var b = 0; b < this.rxw; b++) {
            this.hly.zcd("symb" + b, this.yne, false, this.vrk + "symb" + (b + 1))
        }
    };
    this.mnj = function() {
        var b = tbl.xyy.value30 + "/slot/sounds/";
        this.hly.zcd("bigwin", null, false, b + "bigwin");
        this.hly.zcd("megawin", null, false, b + "megawin");
        this.hly.zcd("nicewin", null, false, b + "nicewin")
    };
    this.jbd = function() {};
    this.ajj = function() {
        var b = this.fjr + this.bnl.type + "/";
        this.hly.odq("icon", b + "icon_out.png");
        if (this.ykt() === true && (tbl.xyy.value45 === tbl.tnv.xjq || tbl.xyy.value45 === tbl.tnv.nhj)) {
            this.hly.odq("device_info", b + "info_" + ((this.ajb() === true) ? "smartphone.png" : "tablet.png"))
        }
        if (this.ywz) {
            this.hly.odq("winlines", b + "wl.png")
        }
        this.hly.odq("s_symb", b + "symbols_small.png");
        b = tbl.xyy.value30 + "/basic/images/" + this.bnl.type + "/";
        if (this.lnm() === true) {
            this.hly.odq("jackpot", b + "jackpot.png");
            if (this.fac()) {
                this.hly.nux(b, "mystery_jackpot.json")
            }
        }
        if (this.ajb() === true) {
            if (this.bnl.btl === false) {
                this.hly.odq("btn_back", b + "buttonback.png")
            }
        }
        b = tbl.xyy.value30 + "/slot/images/" + this.bnl.type + "/";
        if (this.ajb() === true) {
            if (this.bnl.btl === true) {
                this.hly.nux(b, "gui_mobile_v29.json")
            } else {
                this.hly.nux(b, "gui_mobile_v17.json")
            }
        } else {
            if (tbl.xyy.value57 === tbl.ui.phg || this.smu() != null) {
                this.hly.nux(b, "gui_desktop_v27.json")
            } else {
                this.hly.nux(b, "gui_desktop_v17.json")
            }
        }
        if (this.ogp && !this.vjm) {
            this.hly.odq("firework", b + "firework.png")
        }
        this.igb();
        this.vor();
        this.pso();
        this.ipk();
        this.krs()
    };
    this.vor = function() {
        var b = this.fjr + this.bnl.type + "/";
        this.hly.odq("m_back", b + "main.png");
        this.hly.odq("g_back", b + "gamble.jpg");
        this.hly.odq("m_win", b + "winPanel.png");
        this.hly.odq("h_paytable", b + "wthelp.jpg");
        this.hly.odq("h_winlines", b + "wlhelp.jpg")
    };
    this.pso = function() {
        var c = this.fjr + this.bnl.type + "/";
        this.hly.nux(c, "symbols.json");
        for (var b = 0; b < this.rxw; b++) {
            this.hly.odq("anim" + b, c + "symbanim" + (b + 1) + ".jpg")
        }
    };
    this.ipk = function() {
        var b = tbl.xyy.value30 + "/slot/images/" + this.bnl.type + "/";
        this.hly.odq("wins", b + "wins.png")
    };
    this.igb = function() {
        var b = tbl.xyy.value30 + "/gamble/images/" + this.bnl.type + "/";
        this.hly.odq("g_red", b + "red_orig.png");
        this.hly.odq("g_blue", b + "blue_orig.png");
        this.hly.nux(b, "gamble.json")
    };
    this.krs = function() {};
    this.vxr = function(b) {
        var c = this.nko;
        b = (b != null && b === true) ? true : false;
        if (this.iib && !this.wkw && !this.uyx) {
            c = c - this.win
        }
        if (this.baa) {
            c = c - this.baa.value
        }
        if (!this.uyx) {
            this.csd(c, true, b)
        }
        this.gmi(this.totalBet, true);
        this.zwb.nwi("tops", "#yud");
        this.zwb.nwi("settings", "#vrs", [this.fyo(this.hzg), this.yos, this.fyo(this.vrh())])
    };
    this.yud = function(p, o, q, D, f) {
        if (tbl.zbv.tnc()) {
            var b = (p != null && o != null && q != null && D != null),
                d = (b === true) ? new drx(p, o, q, D) : ((tbl.zbv.bnl.btl === true) ? new drx(tbl.zbv.bnl.exn.exo.x, tbl.zbv.bnl.exn.exo.y, tbl.zbv.bnl.exn.exo.width, tbl.zbv.bnl.exn.exo.height) : new drx(tbl.zbv.bnl.zbv.exo.x, tbl.zbv.bnl.zbv.exo.y, tbl.zbv.bnl.zbv.exo.width, tbl.zbv.bnl.zbv.exo.height)),
                A = tbl.zbv.context2D,
                g = (tbl.zbv.xfp === true) ? tbl.zbv.style.zbv.pbh : tbl.zbv.style.zbv.backgroundColor,
                G = tbl.zbv.zwb.aar("stats"),
                c = tbl.zbv.zwb.aar("history"),
                E = tbl.zbv.zwb.aar("topb"),
                j = tbl.zbv.zwb.aar("topi"),
                k = tbl.zbv.zwb.aar("betsel"),
                s = tbl.zbv.zwb.aar("linesel"),
                t = tbl.zbv.zwb.aar("tops"),
                l = tbl.zbv.zwb.aar("winp"),
                m = tbl.zbv.zwb.aar("fwinp"),
                v = tbl.zbv.zwb.aar("llinep"),
                I = tbl.zbv.zwb.aar("rlinep"),
                H = tbl.zbv.zwb.aar("finfop"),
                z = tbl.zbv.zwb.aar("finfoc"),
                r = tbl.zbv.zwb.aar("autop"),
                F = tbl.zbv.zwb.kew("jackpots"),
                n = tbl.zbv.zwb.aar("jwp"),
                u = tbl.zbv.zwb.aar("mjwp"),
                e = tbl.zbv.zwb.aar("settings");
            tbl.zbv.kzg = false;
            if (tbl.zbv.fhx === true) {
                tbl.zbv.ymh()
            }
            A.save();
            if (b) {
                A.beginPath();
                A.rect(p, o, q, D);
                A.closePath();
                A.clip()
            }
            if (f == null || f === false) {
                A.clearRect(0, 0, tbl.zbv.width, tbl.zbv.height)
            }
            if (tbl.zbv.bnl.gpr) {
                if (tbl.zbv.fhx === false) {
                    tbl.vpf.szx(tbl.zbv.context2D, tbl.zbv.bnl.zbv.exo.x - tbl.zbv.bnl.zbv.lbi, tbl.zbv.bnl.zbv.exo.y - tbl.zbv.bnl.zbv.lbi, tbl.zbv.bnl.zbv.exo.width + 2 * tbl.zbv.bnl.zbv.lbi, tbl.zbv.bnl.zbv.exo.height + 2 * tbl.zbv.bnl.zbv.lbi, g, 1)
                } else {
                    tbl.vpf.szx(tbl.zbv.context2D, tbl.zbv.bnl.zbv.exo.x - tbl.zbv.bnl.zbv.lbi, tbl.zbv.bnl.zbv.exo.y - tbl.zbv.bnl.zbv.lbi, tbl.zbv.bnl.zbv.exo.width + 2 * tbl.zbv.bnl.zbv.lbi, tbl.zbv.bnl.zbv.exo.height + 2 * tbl.zbv.bnl.zbv.lbi, null, 0, g, tbl.zbv.bnl.zbv.lbi, 1)
                }
            }
            if (c) {
                c.yud()
            }
            if (j) {
                j.yud()
            }
            if (t) {
                t.yud()
            }
            if (G && G.iac()) {
                G.yud()
            } else {
                if (tbl.zbv.gnk && tbl.zbv.gnk.iac()) {
                    tbl.zbv.gnk.yud()
                } else {
                    if (tbl.zbv.izi && tbl.zbv.izi.iac()) {
                        tbl.zbv.izi.yud()
                    } else {
                        if (tbl.zbv.fhx) {
                            A.drawImage(tbl.zbv.dfq, tbl.zbv.bnl.ics.exo.x, tbl.zbv.bnl.ics.exo.y)
                        } else {
                            A.drawImage(tbl.zbv.khi, tbl.zbv.bnl.ics.exo.x, tbl.zbv.bnl.ics.exo.y)
                        }
                        if (l && l.iac()) {
                            l.yud()
                        } else {
                            if (m && m.iac()) {
                                m.yud()
                            }
                        }
                        if (v) {
                            v.yud()
                        }
                        if (I) {
                            I.yud()
                        }
                        if (tbl.zbv.fhx === false) {
                            for (var B = 0, C = tbl.zbv.etr.length; B < C; B++) {
                                if (tbl.zbv.etr[B]) {
                                    tbl.zbv.etr[B].yud()
                                }
                            }
                        }
                        if (tbl.zbv.mrb) {
                            tbl.zbv.mrb.yud()
                        }
                        if (tbl.zbv.kdj) {
                            tbl.zbv.kdj.yud()
                        }
                        for (var B = 0, C = F.length; B < C; B++) {
                            F[B].yud()
                        }
                        if (n) {
                            if (n.iac()) {
                                tbl.zbv.nqv(A, d)
                            }
                            n.yud()
                        }
                        if (u) {
                            if (u.iac()) {
                                tbl.zbv.nqv(A, d)
                            }
                            u.yud()
                        }
                        if (H) {
                            if (H.iac()) {
                                tbl.zbv.nqv(A, d)
                            }
                            H.yud()
                        }
                        if (z) {
                            if (z.iac()) {
                                tbl.zbv.nqv(A, d)
                            }
                            z.yud()
                        }
                    }
                }
            }
            if (k) {
                k.yud()
            }
            if (s) {
                s.yud()
            }
            if (E) {
                E.yud()
            }
            if (r) {
                r.yud()
            }
            if (e) {
                e.yud()
            }
            A.restore()
        }
    };
    this.nqv = function(b, c) {
        this.kzg = true;
        tbl.vpf.szx(b, c.x, c.y, c.width, c.height, "black", 0.5)
    };
    this.dze = function() {
        for (var c = 0, b = this.etr.length; c < b; c++) {
            if (this.etr[c] && this.dvw[c] === true) {
                this.etr[c].yud()
            }
        }
    };
    this.ymh = function() {
        var d = this.rbd,
            c = this.hly.lrj("m_back"),
            f = this.hly.lrj("f_back");
        if (this.vjm && this.vqz && this.style.zbv.czc) {
            c = this.hly.lrj("m_m_back");
            f = this.hly.lrj("m_f_back")
        }
        if (this.tnc()) {
            d.save();
            if (this.vjf) {
                d.drawImage(f, 0, 0)
            } else {
                d.drawImage(c, 0, 0)
            }
            for (var e = 0, b = this.etr.length; e < b; e++) {
                this.etr[e].yud()
            }
            d.restore()
        }
    };
    this.drk = function() {
        var d = tbl.zbv.jsp,
            g = (tbl.zbv.bnl.ics.exo.width - tbl.zbv.bnl.zbv.exo.width) / 2,
            e = 0,
            c = (tbl.zbv.vjf) ? tbl.zbv.hly.lrj("f_back") : tbl.zbv.hly.lrj("m_back"),
            k = (tbl.zbv.vjf) ? tbl.zbv.hly.lrj("f_left") : tbl.zbv.hly.lrj("m_left"),
            j = (tbl.zbv.vjf) ? tbl.zbv.hly.lrj("f_right") : tbl.zbv.hly.lrj("m_right");
        if (tbl.zbv.vjm && tbl.zbv.vqz && tbl.zbv.style.zbv.czc) {
            c = (tbl.zbv.vjf) ? tbl.zbv.hly.lrj("m_f_back") : tbl.zbv.hly.lrj("m_m_back")
        }
        d.save();
        d.clearRect(0, 0, tbl.zbv.bnl.ics.exo.width, tbl.zbv.bnl.ics.exo.height);
        d.drawImage(c, g, e);
        if (tbl.zbv.jpr === tbl.bnl.tqe || tbl.zbv.jpr === tbl.bnl.fae) {
            if (k) {
                d.drawImage(k, 0, 0)
            }
            if (j) {
                d.drawImage(j, tbl.zbv.bnl.ics.exo.width - j.width, 0)
            }
        }
        d.restore();
        if (tbl.zbv.fhx) {
            d = tbl.zbv.cma;
            d.save();
            d.drawImage(tbl.zbv.khi, 0, 0);
            for (var f = 0, b = tbl.zbv.etr.length; f < b; f++) {
                d.clearRect(tbl.zbv.etr[f].x + g, tbl.zbv.etr[f].y + e, tbl.zbv.etr[f].width, tbl.zbv.etr[f].height)
            }
            d.restore()
        }
    };
    this.dxk = function(f) {
        var b = 0.995,
            e = 0,
            c = [{
                sx: b,
                sy: b,
                tx: 4,
                ty: -2,
                rx: 0,
                ry: 0
            }, {
                sx: b,
                sy: b,
                tx: -4,
                ty: -2,
                rx: 0,
                ry: 0
            }, {
                sx: b,
                sy: b,
                tx: 2,
                ty: 0,
                rx: 0,
                ry: 0
            }, {
                sx: b,
                sy: b,
                tx: -2,
                ty: 0,
                rx: 0,
                ry: 0
            }, {
                sx: b,
                sy: b,
                tx: 4,
                ty: 2,
                rx: 0,
                ry: 0
            }, {
                sx: b,
                sy: b,
                tx: -4,
                ty: 2,
                rx: 0,
                ry: 0
            }, {
                sx: b,
                sy: b,
                tx: 2,
                ty: 0,
                rx: 0,
                ry: 0
            }, {
                sx: b,
                sy: b,
                tx: -2,
                ty: 0,
                rx: 0,
                ry: 0
            }, {
                sx: b,
                sy: b,
                tx: 4,
                ty: -2,
                rx: 0,
                ry: 0
            }, {
                sx: b,
                sy: b,
                tx: -4,
                ty: -2,
                rx: 0,
                ry: 0
            }, {
                sx: b,
                sy: b,
                tx: 2,
                ty: -1,
                rx: 0,
                ry: 0
            }, {
                sx: b,
                sy: b,
                tx: 0,
                ty: 0,
                rx: 0,
                ry: 0
            }];
        if (this.dgz < 0) {
            for (var d = 0; d < f; d++) {
                this.exl[d] = c[e];
                e = (e < c.length - 1) ? e + 1 : 0
            }
            this.cgr = 0;
            this.xkg = new Date().getTime();
            this.bnx()
        }
    };
    this.php = function() {
        clearTimeout(this.dgz);
        this.dgz = -1;
        tbl.vpf.rwi(this.canvas, this.vce, this.yhn);
        if (this.vbe != null) {
            tbl.vpf.rwi(this.vbe, this.vce, this.yhn, ((this.bnl.vbe.exo.x) - ((this.bnl.vbe.exo.x + this.bnl.vbe.nkd) / 2 * (1 - this.vce))), ((this.bnl.vbe.exo.y) - ((this.bnl.vbe.exo.y + this.bnl.vbe.ewh) / 2 * (1 - this.yhn))))
        }
    };
    this.bnx = function() {
        var b = tbl.zbv.tfr,
            d = new Date().getTime(),
            c = null;
        if (tbl.zbv.cgr >= tbl.zbv.exl.length) {
            tbl.zbv.php()
        } else {
            c = tbl.zbv.exl[tbl.zbv.cgr];
            tbl.vpf.rwi(tbl.zbv.canvas, tbl.zbv.vce * c.sx, tbl.zbv.yhn * c.sy, c.tx, c.ty, c.rx, c.ry);
            if (tbl.zbv.vbe != null) {
                tbl.vpf.rwi(tbl.zbv.vbe, tbl.zbv.vce * c.sx, tbl.zbv.yhn * c.sy, ((tbl.zbv.bnl.vbe.exo.x) - ((tbl.zbv.bnl.vbe.exo.x + tbl.zbv.bnl.vbe.nkd) / 2 * (1 - tbl.zbv.vce * c.sx))) + c.tx, ((tbl.zbv.bnl.vbe.exo.y) - ((tbl.zbv.bnl.vbe.exo.y + tbl.zbv.bnl.vbe.ewh) / 2 * (1 - tbl.zbv.yhn * c.sy))) + c.ty, c.rx, c.ry)
            }
            tbl.zbv.cgr++;
            b = tbl.zbv.tfr + (tbl.zbv.cgr * tbl.zbv.tfr - (d - tbl.zbv.xkg));
            if (b < 10) {
                b = 10
            }
            tbl.zbv.dgz = setTimeout(tbl.zbv.bnx, b)
        }
    };
    this.hat = function() {
        clearTimeout(tbl.zbv.nei);
        if (tbl.zbv.wlj) {
            if (tbl.zbv.pwb) {
                if (!tbl.zbv.bvn && tbl.zbv.haw()) {
                    setTimeout(tbl.zbv.vrv, 2)
                }
            } else {
                if (!tbl.zbv.vjf) {
                    if (tbl.zbv.win > 0 && !tbl.zbv.wkw) {
                        if (tbl.zbv.rxf) {
                            tbl.zbv.fjm();
                            if (tbl.zbv.xrm()) {
                                tbl.zbv.wlj = false;
                                tbl.zbv.kdj.bfs(false);
                                setTimeout(tbl.zbv.kec, 400)
                            }
                        } else {
                            if (tbl.zbv.qln) {
                                tbl.zbv.vtx()
                            } else {
                                if (!(tbl.zbv.rxf || tbl.zbv.qln)) {
                                    if (tbl.zbv.xrm()) {
                                        tbl.zbv.wlj = false;
                                        tbl.zbv.kdj.bfs(false);
                                        tbl.zbv.kec()
                                    } else {
                                        tbl.zbv.fjm()
                                    }
                                }
                            }
                        }
                    } else {
                        if (!tbl.zbv.pwb) {
                            if (tbl.zbv.bgp) {
                                tbl.zbv.jif();
                                tbl.zbv.tus();
                                return
                            } else {
                                if (tbl.zbv.kdw) {
                                    tbl.zbv.jif();
                                    tbl.zbv.qge();
                                    return
                                }
                            }
                            tbl.zbv.fbg = true;
                            tbl.zbv.wlj = false;
                            if (tbl.zbv.ajb() === true) {
                                tbl.zbv.qeb = (!tbl.zbv.odb) ? 1 : 0
                            } else {
                                if (tbl.xyy.value62 === true) {
                                    tbl.zbv.qeb = 0;
                                    if (tbl.zbv.hwo) {
                                        tbl.zbv.qeb |= 2
                                    }
                                    if (tbl.zbv.odb) {
                                        tbl.zbv.qeb |= 4
                                    }
                                } else {
                                    tbl.zbv.qeb = (tbl.zbv.hwo && !tbl.zbv.odb) ? 1 : 0
                                }
                            }
                            if (tbl.zbv.uyx || (tbl.zbv.nko >= tbl.zbv.vrh() && tbl.zbv.vrh() >= tbl.zbv.isw)) {
                                tbl.zbv.glr();
                                for (var c = 0, b = tbl.zbv.etr.length; c < b; c++) {
                                    tbl.zbv.lio[c] = -1;
                                    if (tbl.zbv.etr[c]) {
                                        tbl.zbv.etr[c].hfd(tbl.zbv.dec[0])
                                    }
                                }
                                tbl.zbv.cvw();
                                tbl.zbv.hch({
                                    type: "roundStart",
                                    sender: tbl.zbv.wkz,
                                    lang: sessionStorage.sessionValue1.toUpperCase(),
                                    data: {
                                        totalBet: tbl.zbv.fyo(tbl.zbv.totalBet)
                                    }
                                });
                                tbl.zbv.kmq();
                                tbl.zbv.qni();
                                tbl.zbv.agu.play(tbl.zbv.yos, tbl.zbv.uik, tbl.zbv.qeb);
                                tbl.zbv.kdj.bfs(false);
                                tbl.zbv.kdj.zgu.nwi("start", "#jug", [true])
                            } else {
                                tbl.zbv.ukw();
                                tbl.zbv.jif();
                                tbl.zbv.kdj.bfs(true);
                                tbl.zbv.nhk(true);
                                tbl.zbv.wlj = true
                            }
                            tbl.zbv.sqh()
                        }
                    }
                } else {
                    if (tbl.zbv.lgd > 0) {
                        if (tbl.zbv.rxf) {
                            tbl.zbv.fjm()
                        } else {
                            if (!(tbl.zbv.ynm || tbl.zbv.fbg)) {
                                tbl.zbv.sjd()
                            } else {
                                tbl.zbv.wlg()
                            }
                        }
                    }
                    if (tbl.zbv.ykq > 0 && !(tbl.zbv.zle && !tbl.zbv.wjx)) {
                        if (tbl.zbv.kdw) {
                            tbl.zbv.jif();
                            tbl.zbv.qge();
                            return
                        }
                        tbl.zbv.fbg = true;
                        tbl.zbv.wlj = false;
                        tbl.zbv.glr();
                        for (var c = 0, b = tbl.zbv.etr.length; c < b; c++) {
                            tbl.zbv.lio[c] = -1;
                            if (tbl.zbv.etr[c]) {
                                tbl.zbv.etr[c].hfd(tbl.zbv.dec[0])
                            }
                        }
                        tbl.zbv.ybw();
                        if (tbl.zbv.ajb() && tbl.zbv.ykq == 1) {
                            tbl.zbv.qeb = (!tbl.zbv.odb) ? 1 : 0
                        } else {
                            if (tbl.xyy.value62 === true) {
                                tbl.zbv.qeb = 0;
                                if (tbl.zbv.smu() == null && tbl.xyy.value44.e && tbl.zbv.ykq == 1) {
                                    if (tbl.zbv.ifo) {
                                        tbl.zbv.qeb |= 2
                                    }
                                } else {
                                    if (tbl.zbv.hwo) {
                                        tbl.zbv.qeb |= 2
                                    }
                                }
                                if (tbl.zbv.odb) {
                                    tbl.zbv.qeb |= 4
                                }
                            } else {
                                if (tbl.zbv.smu() == null && tbl.xyy.value44.e && tbl.zbv.ykq == 1) {
                                    tbl.zbv.qeb = (tbl.zbv.ifo && !tbl.zbv.odb) ? 1 : 0
                                } else {
                                    tbl.zbv.qeb = (tbl.zbv.hwo && !tbl.zbv.odb) ? 1 : 0
                                }
                            }
                        }
                        tbl.zbv.qni();
                        tbl.zbv.agu.edg(tbl.zbv.yos, tbl.zbv.uik, tbl.zbv.qeb);
                        tbl.zbv.kdj.bfs(false);
                        tbl.zbv.kdj.zgu.nwi("start", "#jug", [true]);
                        tbl.zbv.zsa()
                    }
                }
            }
        } else {
            if (!tbl.zbv.qna && tbl.zbv.pwb && !tbl.zbv.bvn && tbl.zbv.haw()) {
                tbl.zbv.kad = true
            }
        }
    };
    this.pep = function() {
        var b = tbl.zbv.zwb.aar("topi"),
            d = 0,
            c = 0,
            e = 0;
        if (!tbl.xyy.value55) {
            tbl.zbv.hly.jsl("auto_on");
            tbl.zbv.hly.jsl("auto_off")
        }
        if (tbl.zbv.hwo) {
            tbl.zbv.hwo = false;
            tbl.zbv.fsi();
            if (tbl.zbv.smu() == null && tbl.xyy.value44.e && tbl.zbv.vjf) {
                tbl.zbv.ifo = false
            }
            tbl.zbv.kdj.zgu.nwi("astart", "#dgt", [tbl.zbv.hwo]);
            if (!tbl.zbv.pwb) {
                tbl.zbv.kdj.zgu.nwi("start", "#nck", [tbl.zbv.language.start, true])
            }
            if (!tbl.xyy.value55) {
                tbl.zbv.hly.dvl("auto_off")
            }
            if (tbl.zbv.qdh && !tbl.zbv.hwo && !tbl.zbv.odb && !tbl.zbv.knm() && !tbl.zbv.vjf && tbl.zbv.win > 0 && !tbl.zbv.wkw && !tbl.zbv.qln && !tbl.zbv.pwb) {
                if (!tbl.zbv.kdj.zgu.nwi("gamble", "#hus")) {
                    tbl.zbv.kdj.zgu.nwi("start", "#nck", [tbl.zbv.language.urn, true]);
                    tbl.zbv.kdj.zgu.nwi("gamble", "#pqn");
                    tbl.zbv.wum();
                    if (!tbl.zbv.rxf) {
                        tbl.zbv.kdj.zgu.nwi("info", "#hpg", [tbl.zbv.ipx(tbl.zbv.language.unr) + ": " + tbl.zbv.fyo(tbl.zbv.win)])
                    }
                    tbl.zbv.mge()
                }
            }
        } else {
            if (tbl.zbv.smu() != null && tbl.zbv.mlo <= 0 && tbl.zbv.ajb() === false) {
                if (b && b.vib() === true) {
                    tbl.zbv.nhk(false);
                    tbl.zbv.kdj.bfs(false);
                    tbl.zbv.id = setTimeout(tbl.zbv.lrg, 300)
                }
            } else {
                if (tbl.zbv.smu() == null && tbl.xyy.value44.e && tbl.zbv.vjf) {
                    tbl.zbv.ifo = true
                } else {
                    if (tbl.zbv.smu() != null && tbl.zbv.ajb() === true) {
                        tbl.zbv.mlo = tbl.zbv.zwb.nwi("settings", "#tfb");
                        if (tbl.zbv.mlo <= 0) {
                            return
                        }
                        d = tbl.zbv.zwb.nwi("settings", "#ett");
                        c = tbl.zbv.zwb.nwi("settings", "#lzh");
                        e = tbl.zbv.zwb.nwi("settings", "#ynb");
                        tbl.zbv.muf = (d > 0) ? d : 0;
                        tbl.zbv.rsu = (c > 0) ? c : 0;
                        tbl.zbv.jwg = (e > 0) ? e : 0;
                        tbl.zbv.kwi(tbl.zbv.smu().o === true || tbl.zbv.style.zbv.czc == false)
                    }
                }
                tbl.zbv.hwo = true;
                tbl.zbv.kdj.zgu.nwi("astart", "#dgt", [tbl.zbv.hwo]);
                if (!tbl.zbv.pwb) {
                    tbl.zbv.kdj.zgu.nwi("start", "#nck", [tbl.zbv.language.start, true])
                }
                if (!tbl.xyy.value55) {
                    tbl.zbv.hly.dvl("auto_on")
                }
                if (!tbl.zbv.pwb) {
                    if (tbl.zbv.vjf || (!tbl.zbv.vjf && !(tbl.zbv.win > 0 && tbl.zbv.qdh && tbl.zbv.odb && !(tbl.zbv.wkw || tbl.zbv.qln)))) {
                        tbl.zbv.hat()
                    }
                }
            }
        }
        if (b) {
            b.dxg("auto", tbl.zbv.hwo)
        }
    };
    this.vml = function() {
        if (tbl.kjw == 0 && tbl.zbv.vjm === false && tbl.zbv.win > 0 && !tbl.zbv.wkw && tbl.zbv.xrm()) {
            if (!tbl.zbv.qln) {
                tbl.zbv.wlj = false;
                tbl.zbv.kdj.bfs(false);
                if (tbl.zbv.rxf) {
                    tbl.zbv.fjm();
                    setTimeout(tbl.zbv.kec, 400)
                } else {
                    tbl.zbv.kec()
                }
            }
            tbl.zbv.kvt = tbl.zbv.vml
        } else {
            ksw.prototype.vml.call(this)
        }
    };
    this.dck = function() {
        if (tbl.zbv.uik < tbl.zbv.axy.length - 1) {
            if (tbl.zbv.uik >= tbl.zbv.spp(true)) {
                tbl.zbv.uik = 0;
                while (tbl.zbv.uik < tbl.zbv.qhb()) {
                    tbl.zbv.uik++
                }
            } else {
                tbl.zbv.uik++
            }
        } else {
            tbl.zbv.uik = 0;
            while (tbl.zbv.uik < tbl.zbv.qhb()) {
                tbl.zbv.uik++
            }
        }
        tbl.zbv.gmc(false, false);
        if (tbl.zbv.ajb() && tbl.zbv.fmo()) {
            tbl.zbv.kdj.zgu.nwi("betpopup", "#nck", [tbl.zbv.jdq(tbl.zbv.totalBet)]);
            tbl.zbv.kdj.zgu.nwi("betpopup", "#yaf", [true]);
            tbl.zbv.yud();
            clearTimeout(tbl.zbv.wyg);
            tbl.zbv.wyg = setTimeout(tbl.zbv.erf, 2000)
        }
        if (tbl.zbv.uik >= tbl.zbv.spp(true)) {
            return true
        }
        return false
    };
    this.uqe = function() {
        if (tbl.zbv.uik > 0) {
            if (tbl.zbv.uik <= tbl.zbv.qhb()) {
                tbl.zbv.uik = tbl.zbv.axy.length;
                while (tbl.zbv.uik > tbl.zbv.spp(true)) {
                    tbl.zbv.uik--
                }
            } else {
                tbl.zbv.uik--
            }
        } else {
            tbl.zbv.uik = tbl.zbv.axy.length;
            while (tbl.zbv.uik > tbl.zbv.spp(true)) {
                tbl.zbv.uik--
            }
        }
        if (tbl.zbv.uik < 0) {
            tbl.zbv.uik = 0
        }
        tbl.zbv.gmc(false, false);
        if (tbl.zbv.uik <= tbl.zbv.qhb()) {
            return true
        }
        return false
    };
    this.cnm = function() {
        var c = tbl.zbv.yos,
            b = tbl.zbv.zwb.aar("betsel"),
            e = tbl.zbv.zwb.aar("llinep"),
            d = tbl.zbv.zwb.aar("rlinep");
        c += tbl.zbv.ixc;
        if (c > tbl.zbv.wrm) {
            c = tbl.zbv.pwy
        }
        tbl.zbv.yos = c;
        if (e) {
            e.kwn(c)
        }
        if (d) {
            d.kwn(c)
        }
        if (b) {
            b.hsm(tbl.zbv.qhb(), tbl.zbv.spp(true))
        }
        tbl.zbv.gmc(true, true);
        tbl.zbv.yud();
        if (c >= tbl.zbv.wrm) {
            return true
        }
        return false
    };
    this.uaz = function() {
        var c = tbl.zbv.yos,
            b = tbl.zbv.zwb.aar("betsel"),
            e = tbl.zbv.zwb.aar("llinep"),
            d = tbl.zbv.zwb.aar("rlinep");
        c -= tbl.zbv.ixc;
        if (c < tbl.zbv.pwy) {
            c = tbl.zbv.wrm
        }
        tbl.zbv.yos = c;
        if (e) {
            e.kwn(c)
        }
        if (d) {
            d.kwn(c)
        }
        if (b) {
            b.hsm(tbl.zbv.qhb(), tbl.zbv.spp(true))
        }
        tbl.zbv.gmc(true, true);
        tbl.zbv.yud();
        if (c <= tbl.zbv.pwy) {
            return true
        }
        return false
    };
    this.bwh = function() {
        var b = tbl.zbv.zwb.aar("topi"),
            c = tbl.zbv.zwb.aar("settings");
        if (tbl.zbv.qdh && !tbl.zbv.vjf && tbl.zbv.win > 0 && !tbl.zbv.pwb && !tbl.zbv.odb && !tbl.zbv.hwo) {
            tbl.zbv.jzy()
        } else {
            tbl.zbv.hly.jsl("gamble_on");
            tbl.zbv.hly.jsl("gamble_off");
            tbl.zbv.odb = !tbl.zbv.odb;
            if (tbl.zbv.odb) {
                tbl.zbv.hly.dvl("gamble_on")
            } else {
                tbl.zbv.hly.dvl("gamble_off")
            }
            if (tbl.zbv.qdh && !tbl.zbv.hwo && !tbl.zbv.odb && !tbl.zbv.knm() && !tbl.zbv.vjf && tbl.zbv.win > 0 && !tbl.zbv.wkw && !tbl.zbv.qln && !tbl.zbv.pwb) {
                if (!tbl.zbv.kdj.zgu.nwi("gamble", "#hus")) {
                    tbl.zbv.kdj.zgu.nwi("start", "#nck", [tbl.zbv.language.urn, true]);
                    tbl.zbv.kdj.zgu.nwi("gamble", "#pqn");
                    tbl.zbv.wum();
                    if (!tbl.zbv.rxf) {
                        tbl.zbv.kdj.zgu.nwi("info", "#hpg", [tbl.zbv.ipx(tbl.zbv.language.unr) + ": " + tbl.zbv.fyo(tbl.zbv.win)])
                    }
                    tbl.zbv.mge()
                }
            }
            tbl.zbv.kdj.zgu.nwi("gamble", "#dgt", [tbl.zbv.odb]);
            if (b) {
                b.dxg("gamble", tbl.zbv.odb)
            }
            if (c) {
                c.zgu.nwi("gamble", "#tgx", [(tbl.zbv.odb) ? 1 : 0])
            }
        }
    };
    this.xxs = function() {
        if (!tbl.zbv.gnk.iac()) {
            tbl.zbv.wuy();
            if (tbl.zbv.vjf) {
                tbl.zbv.kbs()
            }
            tbl.zbv.aaz()
        } else {
            tbl.zbv.aau()
        }
    };
    this.rdl = function() {
        var d = tbl.zbv.zwb.aar("topb"),
            c = tbl.zbv.zwb.aar("settings"),
            b = tbl.zbv.zwb.aar("topi");
        tbl.zbv.bvn = !tbl.zbv.bvn;
        if (b) {
            b.dxg("turbo", tbl.zbv.bvn)
        }
        if (d) {
            d.zgu.nwi("turbo", "#tgx", [(tbl.zbv.bvn) ? 1 : 0])
        }
        if (c) {
            c.zgu.nwi("turbo", "#tgx", [(tbl.zbv.bvn) ? 1 : 0])
        }
    };
    this.clz = function() {
        var b = false;
        if (tbl.vpf.bgr == true) {
            if (tbl.zbv.erl == true) {
                tbl.zbv.erl = false;
                b = tbl.vpf.dlk();
                setTimeout(tbl.zbv.ysn, 1400)
            }
        } else {
            b = tbl.vpf.dlk();
            setTimeout(tbl.zbv.ysn, 1400)
        }
    };
    this.kov = function() {
        if (tbl.zbv.hly.cpg() && !tbl.zbv.pco) {
            tbl.zbv.pco = true;
            tbl.zbv.zwb.nwi("loading", "#stop");
            setTimeout(tbl.zbv.ziz, 100);
            tbl.zbv.hly.dvl("silence");
            if (tbl.vpf.xkm()) {
                tbl.zbv.clz()
            }
            if (webAudioEngine && webAudioEngine.state == "suspended") {
                webAudioEngine.resume()
            }
        }
    };
    this.qzr = function() {
        var d = tbl.zbv.zwb.aar("topb"),
            c = tbl.zbv.zwb.aar("settings"),
            b = tbl.zbv.zwb.aar("topi");
        tbl.zbv.qwg = !tbl.zbv.qwg;
        if (tbl.zbv.qwg === true) {
            tbl.zbv.jnl();
            if (tbl.zbv.fmo() === false) {
                tbl.zbv.lfn(0, 0)
            }
        } else {
            tbl.zbv.sau()
        }
        if (b) {
            b.dxg("melody", (tbl.zbv.qwg) ? 1 : 0)
        }
        if (d) {
            d.zgu.nwi("melody", "#tgx", [(tbl.zbv.qwg) ? 1 : 0])
        }
        if (c) {
            c.zgu.nwi("melody", "#tgx", [(tbl.zbv.qwg) ? 1 : 0])
        }
        tbl.zbv.yud()
    };
    this.cvw = function() {
        this.qna = false;
        this.psl = false;
        this.kad = false;
        this.wkw = false;
        this.nhk(false);
        this.kdj.zgu.nwi("info", "#hpg", [this.language.pxz, true]);
        this.hly.jsl("collectend");
        if (this.qnp >= 0) {
            clearTimeout(this.qnp);
            this.qnp = -1
        }
        this.yjy();
        this.hsa();
        if (this.pwb == false) {
            this.pgu();
            for (var c = 0, b = this.etr.length; c < b; c++) {
                this.etr[c].aoq()
            }
            this.pwb = true;
            this.azi = false;
            this.zdx = false;
            this.hkq();
            this.xkg = new Date().getTime();
            if (this.iil) {
                this.id = window.cyh(this.cxx)
            } else {
                this.id = setTimeout(this.cxx, 10)
            }
        }
    };
    this.ybw = function() {};
    this.cxx = function() {
        var c = tbl.zbv.tck,
            e = 0;
        tbl.zbv.mmn = 0;
        if (!tbl.zbv.iil || tbl.zbv.uww) {
            if (tbl.zbv.hgh == 0) {
                tbl.zbv.xkg = new Date().getTime()
            } else {
                e = new Date().getTime();
                c = tbl.zbv.tck + (tbl.zbv.hgh * tbl.zbv.tck - (e - tbl.zbv.xkg))
            }
            if (tbl.zbv.zdx) {
                c = tbl.zbv.qmu
            }
        }
        if (tbl.zbv.hgh > 0 && !tbl.zbv.wlj && tbl.zbv.qna) {
            tbl.zbv.wlj = true
        }
        for (var d = 0, b = tbl.zbv.etr.length; d < b; d++) {
            if (tbl.zbv.dvw[d] && !tbl.zbv.etr[d].tsj) {
                if (d == tbl.zbv.qzg - 1) {
                    tbl.zbv.etr[d].urb(true)
                } else {
                    tbl.zbv.etr[d].urb((!tbl.zbv.zdx && !tbl.zbv.bvn))
                }
            }
        }
        if (typeof tbl.zbv.vir === "function") {
            tbl.zbv.vir()
        }
        if (tbl.zbv.fhx === false) {
            tbl.zbv.dze()
        } else {
            tbl.zbv.ymh()
        }
        if (c <= 0) {
            c = 0
        }
        if (tbl.zbv.cpd) {
            return
        }
        if (!tbl.zbv.zgy()) {
            tbl.zbv.hgh += 1;
            if (tbl.zbv.iil && !tbl.zbv.uww) {
                tbl.zbv.id = window.cyh(tbl.zbv.cxx)
            } else {
                if (c == 0) {
                    tbl.zbv.cxx()
                } else {
                    tbl.zbv.id = setTimeout(tbl.zbv.cxx, c)
                }
            }
        } else {
            tbl.zbv.pwb = false;
            tbl.zbv.dnv();
            tbl.zbv.hgh = 0;
            tbl.zbv.mym = false;
            tbl.zbv.udv()
        }
    };
    this.vir = function() {};
    this.udv = function() {
        if (tbl.zbv.nrx === false) {
            var d = tbl.zbv.zgy();
            clearTimeout(tbl.zbv.duk);
            for (var c = 0, b = tbl.zbv.etr.length; c < b && d; c++) {
                if (tbl.zbv.etr[c].bgk()) {
                    tbl.zbv.etr[c].fhv();
                    d = false
                }
            }
            if (d) {
                for (var c = 0, b = tbl.zbv.etr.length; c < b; c++) {
                    tbl.zbv.etr[c].mdv().length = 0;
                    tbl.zbv.etr[c].cwo().length = 0;
                    tbl.zbv.etr[c].shz()
                }
                tbl.zbv.wlj = true;
                if (tbl.zbv.hio()) {
                    tbl.zbv.zef()
                } else {
                    if (tbl.zbv.jnx() === true) {
                        tbl.zbv.ukl()
                    } else {
                        tbl.zbv.jzt()
                    }
                }
            } else {
                tbl.zbv.wlj = false
            }
        } else {
            tbl.zbv.duk = setTimeout(tbl.zbv.udv, 50)
        }
    };
    this.zgy = function() {
        for (var c = 0, b = this.etr.length; c < b; c++) {
            if (this.etr[c] && !this.etr[c].tsj) {
                return false
            }
        }
        return true
    };
    this.haw = function() {
        return (tbl.xyy.value79 === 0)
    };
    this.vrv = function() {
        var c = 0,
            b = tbl.zbv.etr.length;
        if (!tbl.zbv.zdx) {
            tbl.zbv.cpd = false;
            tbl.zbv.zdx = true;
            if (!tbl.zbv.psl) {
                if (!tbl.zbv.vjf) {
                    tbl.zbv.psl = true;
                    for (c = 0; c < b; c++) {
                        if (tbl.zbv.etr[c] && tbl.zbv.dvw[c]) {
                            tbl.zbv.etr[c].smz(tbl.zbv.lio[c], tbl.zbv.dec[c] - tbl.zbv.dec[0], tbl.zbv.pyw)
                        }
                    }
                } else {
                    tbl.zbv.psl = true;
                    for (c = 0; c < b; c++) {
                        if (tbl.zbv.etr[c] && tbl.zbv.dvw[c]) {
                            tbl.zbv.etr[c].smz((tbl.zbv.qqs) ? tbl.zbv.oaw[c] : tbl.zbv.lio[c], tbl.zbv.dec[c] - tbl.zbv.dec[0], tbl.zbv.pyw)
                        }
                    }
                }
            }
            for (c = 0; c < b; c++) {
                if (tbl.zbv.etr[c] && tbl.zbv.dvw[c]) {
                    tbl.zbv.etr[c].opd()
                }
            }
        }
    };
    this.fnr = function() {
        this.cpd = true;
        this.win = 0;
        for (var c = 0, b = this.etr.length; c < b; c++) {
            if (this.etr[c] && !this.etr[c].tsj) {
                this.etr[c].cfc()
            }
        }
    };
    this.glr = function() {
        if (this.bvn) {
            this.dec = this.wjd;
            this.tck = this.lny
        } else {
            this.dec = this.byj;
            this.tck = this.bev
        }
        this.uww = this.jgf()
    };
    this.hkq = function() {
        this.hly.dvl("spin")
    };
    this.dnv = function() {
        this.hly.jsl("spin")
    };
    this.tkg = function() {};
    this.hsa = function() {
        if (!this.vjf) {
            this.ytl()
        } else {
            if (this.ruu() === true) {
                this.hly.jib("freespinstart", 1, 300)
            }
        }
        for (var c = 0, b = this.etr.length; c < b; c++) {
            this.etr[c].vez = ((c % 2) == 0) ? this.hly.uvl("stop1") : this.hly.uvl("stop2");
            this.etr[c].txk().length = 0;
            this.etr[c].pyz = false;
            this.etr[c].bew = null;
            this.etr[c].xys = null
        }
        for (var c = 0, b = this.knh.length; c < b; c++) {
            this.knh[c] = 0
        }
    };
    this.yho = function(b) {
        if (this.vjf === true) {
            if (this.ruu() === true) {
                this.hly.jib("freespinstart", 0, 300)
            }
            this.kdj.zgu.nwi("start", "#nck", [this.language.start, true])
        } else {
            this.lfn(0, 0);
            this.kdj.zgu.nwi("info", "#vjt");
            if (!this.knm()) {
                this.kdj.zgu.nwi("start", "#nck", [this.language.urn, true])
            } else {
                this.kdj.zgu.nwi("start", "#nck", [this.language.start, true])
            }
        }
        this.kdj.bfs(false);
        this.mrb.qvt();
        this.mrb.nws(b)
    };
    this.jzt = function() {
        if (!tbl.zbv.vjf && tbl.zbv.win >= tbl.zbv.totalBet * tbl.zbv.vid) {
            tbl.zbv.yho(tbl.zbv.win / tbl.zbv.totalBet)
        } else {
            if (tbl.zbv.vjf && tbl.zbv.lgd >= tbl.zbv.totalBet * tbl.zbv.vid) {
                tbl.zbv.yho(tbl.zbv.lgd / tbl.zbv.totalBet)
            } else {
                tbl.zbv.gll()
            }
        }
    };
    this.gll = function() {
        if (this.win > 0 && !this.vjf) {
            this.ynm = false;
            this.fbg = false;
            this.grm();
            if (this.qzm()) {
                this.rwz()
            } else {
                this.lfn(0, 200);
                this.kdj.bfs(false);
                this.id = setTimeout(this.lvb, 200)
            }
        } else {
            if (this.lgd > 0 && this.vjf) {
                this.ynm = false;
                this.fbg = false;
                this.grm();
                if (this.qzm()) {
                    this.rwz()
                } else {
                    this.kdj.bfs(false);
                    this.id = setTimeout(this.bey, 200)
                }
            } else {
                this.blb();
                this.ans = [];
                this.hmq = 0;
                if (this.qzm()) {
                    this.rwz()
                } else {
                    if (this.pqs()) {
                        this.tyn()
                    } else {
                        if (this.vjf && this.ykq > 0 || !this.vjf) {
                            this.nhk(true)
                        }
                        this.vpn()
                    }
                }
            }
        }
    };
    this.aaz = function() {
        this.rxf = false;
        clearTimeout(this.rmf);
        this.tlw(this.win);
        this.ytl();
        this.nhk(false);
        this.yjy();
        this.wlg();
        this.bbe();
        this.kdj.zgu.nwi("info", "#vjt");
        this.kdj.bfs(false);
        this.myr(false);
        this.gnk.qvt();
        this.gnk.bfs(true);
        this.zwb.nwi("settings", "#pwz");
        if (this.bnl.btl === false) {
            this.kdj.zgu.nwi("setting", "#dgt", [this.zwb.nwi("settings", "#iac")])
        }
        if (this.vjf === true && this.ruu() === true) {
            this.hly.jib("freespinstart", 0, 0)
        } else {
            if (this.vjf === false) {
                this.lfn(0, 0)
            }
        }
    };
    this.aau = function() {
        this.gnk.bfs(false);
        if (!this.vjf) {
            this.kdj.bfs(true)
        } else {
            this.kdj.pwr(true)
        }
        this.nhk(true);
        this.myr(true);
        this.gnk.pwz();
        if (!this.vjf) {
            if (this.win > 0) {
                this.kdj.zgu.nwi("info", "#hpg", [this.ipx(this.language.unr) + ": " + this.fyo(this.win)])
            } else {
                this.kdj.zgu.nwi("info", "#jel", [0])
            }
            this.lfn(1, 200)
        } else {
            this.hbq(true);
            this.kbs();
            if (this.ruu() === true) {
                this.hly.jib("freespinstart", 1, 200)
            }
        }
    };
    this.jzy = function() {
        var b = tbl.zbv.kdj.zgu.aar("gamble");
        tbl.zbv.tnt();
        if (b) {
            b.aej();
            b.dgt(tbl.zbv.odb)
        }
        tbl.zbv.rxf = false;
        clearTimeout(tbl.zbv.rmf);
        tbl.zbv.ytl();
        tbl.zbv.yjy();
        tbl.zbv.wlg();
        tbl.zbv.bbe();
        clearTimeout(tbl.zbv.psp);
        if (tbl.zbv.vjf === false) {
            tbl.zbv.lfn(1, 300)
        }
        tbl.zbv.kdj.zgu.nwi("info", "#vjt");
        tbl.zbv.kdj.bfs(false);
        tbl.zbv.nhk(false);
        tbl.zbv.myr(false);
        if (tbl.zbv.izi) {
            tbl.zbv.izi.bfs(true);
            tbl.zbv.izi.nvc(tbl.zbv.nko, tbl.zbv.win);
            tbl.zbv.izi.zgu.nwi("history", "#nsb");
            tbl.zbv.izi.qvt();
            tbl.zbv.izi.jrb()
        }
    };
    this.izw = function() {
        if (!tbl.zbv.tad) {
            tbl.zbv.hch({
                type: "roundEnded",
                sender: tbl.zbv.wkz,
                lang: sessionStorage.sessionValue1.toUpperCase(),
                data: {
                    win: tbl.zbv.fyo(tbl.zbv.win),
                    balanceAfter: tbl.zbv.fyo(tbl.zbv.nko)
                }
            })
        }
        tbl.zbv.blb();
        tbl.zbv.myr(true);
        if (tbl.zbv.izi) {
            tbl.zbv.izi.eaw();
            tbl.zbv.izi.yoh();
            tbl.zbv.izi.bfs(false);
            tbl.zbv.izi.yaf(false, true)
        }
        tbl.zbv.kdj.zgu.nwi("start", "#nck", [tbl.zbv.language.start, true]);
        tbl.zbv.wkw = true;
        if (tbl.zbv.ian()) {
            tbl.zbv.jif();
            tbl.zbv.kdj.bfs(true);
            tbl.zbv.nhk(true);
            if (tbl.zbv.win > 0) {
                tbl.zbv.kdj.zgu.nwi("info", "#hpg", [tbl.zbv.ipx(tbl.zbv.language.unr) + ": " + tbl.zbv.fyo(tbl.zbv.win)])
            } else {
                tbl.zbv.kdj.zgu.nwi("info", "#jel", [0])
            }
            tbl.zbv.gyf()
        } else {
            if (tbl.zbv.hwo) {
                tbl.zbv.kdj.cqm(true);
                tbl.zbv.nei = setTimeout(tbl.zbv.uug, 400)
            } else {
                tbl.zbv.kdj.bfs(true);
                tbl.zbv.nhk(true);
                if (tbl.zbv.win > 0) {
                    tbl.zbv.kdj.zgu.nwi("info", "#hpg", [tbl.zbv.ipx(tbl.zbv.language.unr) + ": " + tbl.zbv.fyo(tbl.zbv.win)])
                } else {
                    tbl.zbv.kdj.zgu.nwi("info", "#jel", [0])
                }
            }
        }
    };
    this.kbs = function() {
        var b = this.zwb.aar("tops");
        if (b) {
            if (b.abt() == 1) {
                b.myq(0)
            } else {
                b.myq(1)
            }
            this.yud()
        }
    };
    this.ttl = function() {
        var b = this.zwb.aar("topi"),
            c = this.zwb.aar("settings");
        this.odb = !tbl.zbv.odb;
        this.kdj.zgu.nwi("gamble", "#dgt", [this.odb]);
        if (b) {
            b.dxg("gamble", this.odb)
        }
        if (c) {
            c.zgu.nwi("gamble", "#tgx", [(this.odb) ? 1 : 0])
        }
    };
    this.hpi = function() {
        if (this.vjm) {
            return false
        }
        var b = new drx(197, 24, 246, 200),
            c = tbl.xyy[tbl.zbv.language.tfn.toLowerCase().replace(/\s/g, "") + (b.y / 4)];
        if (c && c.indexOf(":" + b.nqt() + "/") >= 0) {
            return false
        }
        return true
    };
    this.avl = function() {
        if (this.wzg === false) {
            this.svh = 100;
            return
        }
        if (this.hpi()) {
            var c = new Date().getTime(),
                b = c % this.etr.length,
                d = c % this.etr[b].zvx.length;
            if (this.svh <= 0 && ((this.vjf && this.lgd == 0) || (!this.vjf && this.win == 0)) && c & 1 == 1) {
                if (this.vjf && this.qqs) {
                    this.oaw[b] = d
                } else {
                    this.lio[b] = d
                }
            } else {
                this.svh = (this.svh > 0) ? this.svh - 1 : 0
            }
        }
    };
    this.lvb = function() {
        tbl.zbv.dds = 0;
        tbl.zbv.znh();
        tbl.zbv.cjp();
        tbl.zbv.cbt(tbl.zbv.lio);
        tbl.zbv.jon();
        tbl.zbv.rok();
        if ((tbl.zbv.icw || tbl.zbv.sxv || tbl.zbv.fhx) && tbl.zbv.win > 0 && tbl.zbv.hmq > 0 && !tbl.zbv.mym) {
            tbl.zbv.ftz(tbl.zbv.icw, tbl.zbv.sxv)
        }
        if (tbl.zbv.win > 0) {
            if (!tbl.zbv.mym) {
                tbl.zbv.idw();
                tbl.zbv.kdj.bfs(false)
            }
            if (!tbl.zbv.knm()) {
                if (!tbl.zbv.vjm) {
                    tbl.zbv.kdj.zgu.nwi("start", "#nck", [tbl.zbv.language.urn, true])
                }
            } else {
                tbl.zbv.kdj.zgu.nwi("start", "#nck", [tbl.zbv.language.start, true])
            }
            tbl.zbv.gze();
            tbl.zbv.yph = true;
            tbl.zbv.iaz = setTimeout(tbl.zbv.nlo, 10)
        } else {}
    };
    this.bey = function() {};
    this.nlo = function() {
        if (!tbl.zbv.mym) {
            if (!tbl.zbv.vjf) {
                tbl.zbv.uon()
            } else {
                tbl.zbv.qtp()
            }
        }
        if (!tbl.zbv.fbg) {
            if (tbl.zbv.jbi) {
                tbl.zbv.ucf()
            } else {
                tbl.zbv.ymi()
            }
        }
    };
    this.gze = function() {
        var b = this.kdj.zgu.aar("info");
        if (b) {
            if (!this.knm()) {
                if (b.ehm()) {
                    b.hpg(this.language.fxo, true)
                }
            } else {
                b.hpg(this.language.alx, true)
            }
        }
    };
    this.idw = function() {};
    this.khh = function() {};
    this.pue = function() {
        for (var b = 0; b < this.wrm; b++) {
            this.hxx[b] *= this.hzg
        }
        this.hxx[this.wrm] *= this.vrh()
    };

    function a(d, c) {
        return c[1] - d[1]
    }
    this.grm = function() {
        var c = [],
            d = 0;
        this.pue();
        this.ans = [];
        this.hmq = 0;
        d = this.hxx[this.wrm];
        for (var b = 0; b < this.wrm; b++) {
            c[b] = [b, this.hxx[b]]
        }
        c.sort(a);
        if (this.vqg(d, c)) {
            this.hxx[0] = d;
            this.ans[0] = this.wrm;
            if (this.hxx[0] > 0) {
                this.hmq++
            }
            for (var b = 1; b < this.wrm + 1; b++) {
                this.hxx[b] = c[b - 1][1];
                this.ans[b] = c[b - 1][0];
                if (this.hxx[b] > 0) {
                    this.hmq++
                }
            }
            this.jbi = false
        } else {
            for (var b = 0; b < this.wrm; b++) {
                this.hxx[b] = c[b][1];
                this.ans[b] = c[b][0];
                if (this.hxx[b] > 0) {
                    this.hmq++
                }
            }
            this.hxx[this.wrm] = d;
            this.ans[this.wrm] = this.wrm;
            if (this.hxx[this.wrm] > 0) {
                this.hmq++
            }
            this.jbi = true
        }
    };
    this.vqg = function(c, b) {
        return c > b[0][1]
    };
    this.hhc = function() {
        this.dds = this.dds + 1
    };
    this.lgt = function() {
        this.mmn = this.mmn + 1
    };
    this.ucf = function() {
        if (!this.wkw) {
            if (this.dds < this.ans.length && this.ans[this.dds] < this.ilo.length) {
                if (!this.jcd) {
                    this.znh()
                }
                var b = this.pvo(this.ans[this.dds]);
                this.axq = this.lcf(b);
                if (!this.jcd) {
                    this.pkr(b)
                }
                if (this.hxx[this.dds] > 0) {
                    this.lcz(this.aui, this.axq, this.dds);
                    this.mrb.qvt();
                    if (!this.ynm && !this.mym && this.dds == 0) {
                        if (this.sla) {
                            this.hly.dvl("symb" + this.aui);
                            if (this.hqd > 0) {
                                this.psp = setTimeout(this.tdw, this.hqd)
                            }
                        } else {
                            this.yne()
                        }
                    } else {
                        if (this.xgx) {
                            this.wum()
                        }
                    }
                    this.lfh()
                } else {
                    this.hhc();
                    this.ucf()
                }
            } else {
                if (this.ojk >= 0 && this.jbi && this.dds <= this.ilo.length) {
                    this.ymi();
                    this.yph = false
                } else {
                    this.ldt()
                }
            }
        }
    };
    this.lcf = function(b) {
        var e = 0,
            c = 0;
        this.axq = 0;
        this.nut = 0;
        this.aui = b[e];
        if (this.aui == this.ojk) {
            return 0
        }
        for (var d = e; d < 5; d++) {
            if (this.aui == b[d]) {
                this.axq += 1
            } else {
                break
            }
        }
        if (this.axq == 0) {
            return 0
        }
        c = this.gpx[this.aui][this.axq - 1];
        if (c > 0) {
            return this.axq
        }
        return 0
    };
    this.ymi = function() {
        if (!this.wkw) {
            if (!this.jcd) {
                this.znh()
            }
            var b = this.amq();
            if (b > 0 && this.gpx[this.ojk][b - 1] > 0) {
                this.lcz(this.ojk, b, this.dds);
                this.mrb.qvt();
                if (!this.ynm && !this.mym && this.dds == 0) {
                    if (this.sla) {
                        this.hly.dvl("symb" + this.ojk);
                        if (this.hqd > 0) {
                            this.psp = setTimeout(this.tdw, this.hqd)
                        }
                    } else {
                        this.yne()
                    }
                } else {
                    if (this.xgx) {
                        this.wum()
                    }
                }
                this.gsm()
            } else {
                this.ldt()
            }
        }
    };
    this.lfh = function() {
        if (this.rxf && this.hwo || !this.hwo) {
            if (!(this.odb && this.qdh && !this.rxf && !this.mym)) {
                this.sfv([this.ans[this.dds] + 1]);
                if (this.cst && this.hwo && this.mmn > 0 && !this.mym) {
                    this.mrb.lfh(this.ans[this.dds], this.idb, this.tct, this.aui, this.nut, this.axq, true, true)
                } else {
                    this.mrb.lfh(this.ans[this.dds], this.idb, this.tct, this.aui, this.nut, this.axq, true, false)
                }
            } else {
                if (!this.yug) {
                    this.sfv([this.ans[this.dds] + 1]);
                    if (this.cst) {
                        this.mrb.lfh(this.ans[this.dds], this.idb, this.tct, this.aui, this.nut, this.axq, true, true)
                    } else {
                        this.mrb.lfh(this.ans[this.dds], this.idb, this.tct, this.aui, this.nut, this.axq, false, false)
                    }
                } else {
                    this.kdj.zgu.nwi("win", "#vjt");
                    this.sfv([this.wrm + 1]);
                    this.hhc();
                    this.ucf()
                }
            }
        } else {
            if (this.hwo && !this.mym && !this.yug) {
                this.sfv([this.ans[this.dds] + 1]);
                if (this.cst) {
                    this.mrb.lfh(this.ans[this.dds], this.idb, this.tct, this.aui, this.nut, this.axq, true, true)
                } else {
                    this.mrb.lfh(this.ans[this.dds], this.idb, this.tct, this.aui, this.nut, this.axq, false, false)
                }
            } else {
                this.kdj.zgu.nwi("win", "#vjt");
                this.sfv([this.wrm + 1]);
                this.hhc();
                this.ucf()
            }
        }
    };
    this.gsm = function() {
        if (this.rxf && this.hwo || !this.hwo) {
            this.sfv([this.wrm + 1]);
            if (!(this.odb && this.qdh && !this.rxf && !this.mym)) {
                if (this.cst && this.hwo && this.mmn > 0 && !this.mym) {
                    this.mrb.lfh(-1, this.idb, false, this.ojk, this.nut, this.axq, true, true)
                } else {
                    this.mrb.lfh(-1, this.idb, false, this.ojk, this.nut, this.axq, true, false)
                }
            } else {
                if (!this.yug) {
                    if (this.cst) {
                        this.mrb.lfh(-1, this.idb, false, this.ojk, this.nut, this.axq, true, true)
                    } else {
                        this.mrb.lfh(-1, this.idb, false, this.ojk, this.nut, this.axq, false, false)
                    }
                } else {
                    this.kdj.zgu.nwi("win", "#vjt");
                    this.hhc();
                    this.ucf()
                }
            }
        } else {
            if (this.hwo && !this.mym && !this.yug) {
                this.sfv([this.wrm + 1]);
                if (this.cst) {
                    this.mrb.lfh(-1, this.idb, false, this.ojk, this.nut, this.axq, true, true)
                } else {
                    this.mrb.lfh(-1, this.idb, false, this.ojk, this.nut, this.axq, false, false)
                }
            } else {
                this.kdj.zgu.nwi("win", "#vjt");
                this.sfv([this.wrm + 1]);
                this.hhc();
                this.ucf()
            }
        }
    };
    this.sfv = function(b) {
        if (this.hon === true) {
            this.zwb.nwi("llinep", "#ilr", [b, true]);
            this.zwb.nwi("rlinep", "#ilr", [b, true])
        }
    };
    this.lcz = function(c, d, b) {
        var e = this.kdj.zgu.aar("win");
        if (e) {
            if (this.win > 0 && !this.vjf) {
                if (this.hxx[b] > 0) {
                    if (c == this.ojk) {
                        e.rss(this.language.xal, this.language.win + ": " + this.fyo(this.hxx[b]), c, d)
                    } else {
                        e.rss(this.language.kgl + " " + (this.ans[b] + 1) + ": ", this.language.win + ": " + this.fyo(this.hxx[b]), c, d)
                    }
                }
            } else {
                if (this.vjf && this.lgd > 0) {
                    if (this.hxx[b] > 0) {
                        if (this.yls > 1) {
                            if (c == this.ojk) {
                                e.rss(this.language.xal, this.language.win + ": " + this.fyo(this.hxx[b]) + " x " + this.yls, c, d)
                            } else {
                                e.rss(this.language.kgl + " " + (this.ans[b] + 1) + ": ", this.language.win + ": " + this.fyo(this.hxx[b]) + " x " + this.yls, c, d)
                            }
                        } else {
                            if (c == this.ojk) {
                                e.rss(this.language.xal, this.language.win + ": " + this.fyo(this.hxx[b]), c, d)
                            } else {
                                e.rss(this.language.kgl + " " + (this.ans[b] + 1) + ": ", this.language.win + ": " + this.fyo(this.hxx[b]), c, d)
                            }
                        }
                    }
                }
            }
        }
    };
    this.tdw = function() {
        tbl.zbv.hly.dvl("wincountfade")
    };
    this.znh = function() {
        for (var b = 0; b < this.idb.length; b++) {
            for (var c = 0; c < this.idb[b].length; c++) {
                this.idb[b][c] = -1
            }
        }
    };
    this.cjp = function() {
        for (var b = 0; b < this.mie.length; b++) {
            for (var c = 0; c < this.mie[b].length; c++) {
                this.mie[b][c] = -1
            }
        }
    };
    this.cbt = function(e) {
        for (var d = 0; d < this.qzg; d++) {
            for (var b = 0; b < this.fcp; b++) {
                var c = (e[d] - 1 + b >= 0) ? e[d] - 1 + b : this.etr[d].zvx.length + e[d] - 1 + b;
                c = (c > this.etr[d].zvx.length - 1) ? c - (this.etr[d].zvx.length) : c;
                this.mie[d][b] = this.etr[d].zvx[c]
            }
        }
    };
    this.jon = function() {
        if (this.jcd) {
            for (var d = 0; d < this.ilo.length; d++) {
                if (this.ans[d] < this.ilo.length) {
                    var c = this.pvo(this.ans[d]);
                    this.axq = this.lcf(c);
                    if (this.hxx[d] > 0) {
                        for (var b = this.nut; b < this.nut + this.axq; b++) {
                            if (this.dml && c[b] == this.zkx) {
                                this.idb[b][this.ilo[this.ans[d]][b] - 1] = this.prt
                            } else {
                                this.idb[b][this.ilo[this.ans[d]][b] - 1] = c[b]
                            }
                        }
                    }
                }
            }
        }
    };
    this.rok = function() {
        if (this.jcd) {
            if (this.ojk >= 0) {
                var d = 0;
                for (var c = 0; c < this.mie.length; c++) {
                    for (var b = 0; b < this.mie[c].length; b++) {
                        if (this.mie[c][b] == this.ojk) {
                            d++
                        }
                    }
                }
                if ((this.hxx[this.ilo.length] > 0 && this.jbi) || (this.hxx[0] > 0 && !this.jbi)) {
                    for (var c = 0; c < this.mie.length; c++) {
                        for (var b = 0; b < this.mie[c].length; b++) {
                            if (this.mie[c][b] == this.ojk) {
                                this.idb[c][b] = this.mie[c][b]
                            }
                        }
                    }
                }
            }
        }
    };
    this.pvo = function(d) {
        var c = [];
        for (var b = 0; b < this.ilo[d].length; b++) {
            c[b] = this.mie[b][this.ilo[d][b] - 1]
        }
        return c
    };
    this.pkr = function(c) {
        for (var b = this.nut; b < this.nut + this.axq; b++) {
            if (this.dml && c[b] == this.zkx) {
                this.idb[b][this.ilo[this.ans[this.dds]][b] - 1] = this.prt
            } else {
                this.idb[b][this.ilo[this.ans[this.dds]][b] - 1] = c[b]
            }
        }
    };
    this.amq = function() {
        var d = 0;
        for (var c = 0; c < this.mie.length; c++) {
            for (var b = 0; b < this.mie[c].length; b++) {
                if (this.mie[c][b] == this.ojk) {
                    this.idb[c][b] = this.mie[c][b];
                    d++;
                    break
                }
            }
        }
        return d
    };
    this.rnx = function(b) {
        if (((this.dml && b == this.prt) && this.prt >= 0) || (b == this.zkx && this.zkx >= 0)) {
            return true
        }
        return false
    };
    this.vpn = function() {
        if (this.zle) {
            this.kdj.zgu.nwi("start", "#nck", [this.language.start, true]);
            if (!this.vjf) {
                this.yjy();
                this.kdj.bfs(false);
                this.xem = setTimeout(this.xgr, 600)
            } else {
                this.sgh()
            }
        } else {
            if (!this.vjf) {
                this.azt()
            } else {
                this.srb()
            }
        }
    };
    this.azt = function() {
        if (this.win > 0) {
            if (this.odb && this.qdh) {
                setTimeout(this.jzy, 400)
            } else {
                if (this.hwo || this.iib) {
                    if (!this.qln && !this.wkw) {
                        if (this.iib) {
                            this.qln = true;
                            this.yjy();
                            setTimeout(this.urn, 400)
                        } else {
                            clearTimeout(this.kem);
                            this.kem = setTimeout(this.hat, 400)
                        }
                    }
                }
            }
        } else {
            this.hch({
                type: "roundEnded",
                sender: this.wkz,
                lang: sessionStorage.sessionValue1.toUpperCase(),
                data: {
                    win: this.fyo(this.win),
                    balanceAfter: this.fyo(this.nko)
                }
            });
            this.kdj.zgu.nwi("info", "#hpg", [this.language.mzj, true]);
            this.iin();
            if (this.vte > 0 && this.wvw >= this.vte) {
                this.nhk(false);
                this.kdj.bfs(false);
                this.jif();
                this.ybb()
            } else {
                this.kdj.zgu.nwi("start", "#nck", [this.language.start, true]);
                if (this.ian()) {
                    this.jif();
                    this.kdj.zgu.nwi("info", "#asr", [0]);
                    this.kdj.bfs(true);
                    this.nhk(true);
                    this.gyf()
                } else {
                    if (this.hwo) {
                        this.nei = setTimeout(this.uug, 400)
                    } else {
                        this.kdj.zgu.nwi("info", "#asr", [0]);
                        this.kdj.bfs(true);
                        this.nhk(true)
                    }
                }
            }
        }
    };
    this.srb = function() {};
    this.wvp = function() {
        return ((this.hwo || (this.odb && this.qdh && !this.rxf)) && this.hmq > 1 && this.yug)
    };
    this.riv = function() {
        var c = [],
            f = [],
            e = (this.jbi) ? 0 : 1,
            b = ((this.jbi && this.hxx[this.wrm] > 0) || (!this.jbi && this.hxx[0] > 0)) ? this.hmq - 1 : this.hmq;
        for (var d = 0; d < b; d++, e++) {
            c[d] = this.ans[e];
            f[d] = this.ans[e] + 1
        }
        this.hlt = true;
        this.fbg = true;
        this.cjp();
        this.znh();
        this.cbt((this.vjf === true) ? this.oaw : this.lio);
        this.jon();
        this.rok();
        this.kdj.zgu.nwi("win", "#hpg", [this.language.win + " " + b + " " + this.language.yos, true]);
        this.sfv(f);
        this.mrb.stop();
        this.mrb.ejg(c, this.idb);
        this.qnp = setTimeout(this.aub, 1000)
    };
    this.aub = function() {
        if (tbl.zbv.qnp >= 0 && !tbl.zbv.hwo) {
            tbl.zbv.qnp = -1;
            tbl.zbv.yjy()
        }
        if (tbl.zbv.pqs()) {
            tbl.zbv.tyn()
        } else {
            tbl.zbv.vpn()
        }
    };
    this.ldt = function() {
        this.ynm = true;
        this.mym = true;
        if (!this.vjf) {
            if (!this.rxf) {
                if (this.wvp()) {
                    this.riv()
                } else {
                    this.aub()
                }
            }
            if (!(this.wkw || this.fbg || ((this.hlt) && !this.rxf))) {
                if (!(this.odb && this.qdh && !this.rxf)) {
                    this.qyx()
                }
            }
        } else {
            if (!this.rxf) {
                if (this.wvp()) {
                    this.riv()
                } else {
                    this.aub()
                }
            } else {
                if (!(this.wkw || this.fbg || (this.hlt && !this.rxf))) {
                    this.qyx()
                } else {}
            }
        }
    };
    this.qyx = function() {
        this.mym = true;
        if (!(this.mrb.bgk() || this.tfo)) {
            this.tfo = true;
            if (!this.vjf) {
                this.lvb()
            } else {
                this.bey();
                if (!this.zle && this.ykq > 0) {
                    if (!this.rxf) {
                        this.nhk(true);
                        this.kdj.pwr(true)
                    }
                }
            }
        }
    };
    this.jnx = function() {
        return false
    };
    this.qzm = function() {
        return false
    };
    this.pqs = function() {
        return false
    };
    this.ukl = function() {};
    this.rwz = function() {};
    this.tyn = function() {};
    this.knm = function() {
        return this.zle
    };
    this.kiu = function() {
        if (!tbl.zbv.qln && !tbl.zbv.wkw) {
            tbl.zbv.hat()
        }
    };
    this.uug = function() {
        if (tbl.zbv.smu() != null && (tbl.zbv.mlo <= 0 || (tbl.zbv.vjf === false && tbl.zbv.uyx === false && tbl.zbv.nko - tbl.zbv.vrh() < tbl.zbv.muf) || (tbl.zbv.vjf === false && tbl.zbv.uyx === false && tbl.zbv.rsu > 0 && tbl.zbv.nko >= tbl.zbv.rsu) || (tbl.zbv.vjf === false && tbl.zbv.jwg > 0 && tbl.zbv.win > tbl.zbv.jwg))) {
            if (tbl.zbv.hwo === true) {
                tbl.zbv.pep()
            }
            tbl.zbv.nhk(true);
            if (tbl.zbv.vjf === true) {
                tbl.zbv.tlw(tbl.zbv.win);
                tbl.zbv.yjy();
                tbl.zbv.wlg();
                tbl.zbv.bbe();
                tbl.zbv.kdj.zgu.nwi("info", "#vjt");
                tbl.zbv.hbq(true);
                tbl.zbv.kdj.pwr(true)
            } else {
                tbl.zbv.kdj.zgu.nwi("info", "#zrw");
                tbl.zbv.kdj.bfs(true)
            }
        } else {
            if (!tbl.zbv.pwb) {
                tbl.zbv.hat()
            }
        }
    };
    this.xnv = function() {};
    this.eze = function() {};
    this.mvn = function() {};
    this.yaw = function() {};
    this.sgh = function() {};
    this.xgr = function() {};
    this.ljd = function() {};
    this.mkq = function() {};
    this.djo = function() {};
    this.dip = function() {
        var b = this.zwb.aar("tops");
        if (b) {
            b.myq(1)
        }
    };
    this.ixz = function() {
        var b = this.zwb.aar("tops");
        if (b) {
            b.myq(0)
        }
    };
    this.vzl = function() {};
    this.afo = function() {};
    this.vzi = function() {};
    this.cnf = function() {};
    this.vwq = function() {
        if (!(this.zle && this.vjf && this.hwo)) {
            this.uxw = false;
            if (!tbl.vpf.bgr) {
                this.agq = this.language.phn
            } else {
                this.agq = this.language.sim
            }
            this.ahs = setInterval(this.xey, 1000)
        }
    };
    this.xey = function() {
        var b = tbl.zbv.kdj.zgu.aar("info");
        if (b) {
            if (tbl.zbv.uxw) {
                b.hpg(tbl.zbv.agq, true)
            } else {
                b.vjt()
            }
            tbl.zbv.yud();
            tbl.zbv.uxw = !tbl.zbv.uxw
        }
    };
    this.bga = function() {};
    this.sxd = function() {};
    this.xqo = function(b) {};
    this.gzg = function(b) {
        if (b) {
            this.r1 = this.agu.twc.gvk;
            this.r2 = this.agu.twc.mmq;
            this.r3 = this.agu.twc.knv;
            this.r4 = this.agu.twc.myv;
            this.r5 = this.agu.twc.grt
        } else {
            this.r1 = this.agu.twc.r1;
            this.r2 = this.agu.twc.r2;
            this.r3 = this.agu.twc.r3;
            this.r4 = this.agu.twc.r4;
            this.r5 = this.agu.twc.r5
        }
        this.zyj.zvx = this.r1;
        this.jhu.zvx = this.r2;
        this.hwg.zvx = this.r3;
        this.gmw.zvx = this.r4;
        this.hme.zvx = this.r5
    };
    this.gly = function() {};
    this.uon = function() {
        if (!(this.odb && this.qdh)) {
            setTimeout(this.mge, 500);
            if (!this.hwo && !this.iib && !this.odb && !this.knm()) {
                this.kdj.zgu.nwi("gamble", "#pqn")
            }
        } else {
            setTimeout(this.cor, 500)
        }
        this.ukc = (this.win > this.totalBet) ? true : false;
        this.cgr = 0;
        this.bwg = 0;
        this.pgc = 0;
        this.bbp = 0;
        this.yzd = 0;
        this.klc = this.win;
        this.xkg = new Date().getTime();
        this.rxf = true;
        this.leu = 0;
        this.bbe();
        this.hly.jsl("winfinal");
        this.rmf = setTimeout(this.dpj, this.tld)
    };
    this.mge = function() {
        if (tbl.zbv.hwo || tbl.zbv.knm()) {
            tbl.zbv.kdj.uwi(true)
        } else {
            tbl.zbv.kdj.ped(true)
        }
    };
    this.cor = function() {
        tbl.zbv.kdj.hnx(true)
    };
    this.qtp = function() {};
    this.uqi = function() {};
    this.fjm = function() {
        this.yjy();
        this.wlg();
        if (this.vjf) {
            this.hlt = true
        }
        this.iyk()
    };
    this.sjd = function() {};
    this.yjy = function() {
        this.fbg = true;
        this.ynm = true;
        if (this.icw || this.sxv || this.fhx) {
            this.ftz(false, false)
        }
        this.kdj.zgu.nwi("win", "#vjt");
        this.sfv(null);
        this.mrb.stop();
        this.mrb.pwz()
    };
    this.wlg = function() {
        if (this.sla) {
            for (var c = 0, b = this.hly.mok("symb"); c < b; c++) {
                this.hly.jsl("symb" + c)
            }
        }
    };
    this.yne = function() {
        if (tbl.zbv.rxf) {
            tbl.zbv.rls = false;
            tbl.zbv.leu = new Date().getTime();
            tbl.zbv.hly.dvl("wincount");
            tbl.zbv.mmn += 1;
            tbl.zbv.bwg = 0;
            tbl.zbv.pgc = 0
        } else {
            clearTimeout(tbl.zbv.psp);
            if (tbl.zbv.vjf === true && tbl.zbv.ruu() === true) {
                tbl.zbv.hly.jib("freespinstart", tbl.zbv.gqb(), 300)
            } else {
                if (tbl.zbv.vjf === false) {
                    tbl.zbv.lfn(1, 300)
                }
            }
        }
    };
    this.bbe = function() {
        this.hly.jsl("wincount");
        this.hly.jsl("wincount1");
        this.hly.jsl("wincount2");
        this.hly.jsl("wincount3");
        this.hly.jsl("wincount4");
        this.hly.jsl("wincount5");
        this.hly.jsl("wincount6")
    };
    this.rnt = function() {
        tbl.zbv.rls = true;
        if (tbl.zbv.vjf === true && tbl.zbv.ruu() === true) {
            tbl.zbv.hly.jib("freespinstart", tbl.zbv.gqb(), 300)
        } else {
            if (tbl.zbv.vjf === false && tbl.zbv.zle === false) {
                tbl.zbv.lfn(1, 300)
            }
        }
    };
    this.dpj = function() {
        var d = 0,
            b = tbl.zbv.tld,
            c = 0;
        if (tbl.zbv.yzd < tbl.zbv.klc) {
            if (tbl.zbv.vrd == 1) {
                tbl.zbv.hsw()
            } else {
                if (tbl.zbv.vrd == 2) {
                    tbl.zbv.zjs()
                } else {
                    if (tbl.zbv.vrd == 3) {
                        tbl.zbv.nms()
                    }
                }
            }
            d = tbl.zbv.jjy(tbl.zbv.klc - tbl.zbv.yzd);
            tbl.zbv.yzd += d;
            tbl.zbv.tlw(tbl.zbv.bbp + tbl.zbv.yzd);
            tbl.zbv.cgr++;
            c = new Date().getTime();
            b = tbl.zbv.tld + (tbl.zbv.cgr * tbl.zbv.tld - (c - tbl.zbv.xkg));
            tbl.zbv.rmf = setTimeout(tbl.zbv.dpj, b)
        } else {
            tbl.zbv.iyk()
        }
    };
    this.hsw = function() {
        if (this.leu > 0) {
            var b = new Date().getTime() - this.leu;
            if (b > 7112 && this.bwg == 0) {
                this.hly.dvl("wincount1");
                this.bwg = 1
            } else {
                if (b > (7112 + (3556 * this.bwg))) {
                    if (this.bwg % 2 == 0) {
                        if (this.yzd >= this.totalBet * this.bcx) {
                            this.hly.dvl("wincount5");
                            if (this.ogp) {
                                if (!this.mrb.svq) {
                                    this.mrb.hkf()
                                } else {
                                    this.mrb.abw()
                                }
                            }
                        } else {
                            if (this.yzd >= this.totalBet * this.vid) {
                                this.hly.dvl("wincount3")
                            } else {
                                this.hly.dvl("wincount1")
                            }
                        }
                    } else {
                        if (this.yzd >= this.totalBet * this.bcx) {
                            this.hly.dvl((this.hly.whc === true) ? "wincount5" : "wincount6");
                            if (this.ogp) {
                                if (!this.mrb.svq) {
                                    this.mrb.hkf()
                                } else {
                                    this.mrb.abw()
                                }
                            }
                        } else {
                            if (this.yzd >= this.totalBet * this.vid) {
                                this.hly.dvl((this.hly.whc === true) ? "wincount3" : "wincount4")
                            } else {
                                this.hly.dvl((this.hly.whc === true) ? "wincount1" : "wincount2")
                            }
                        }
                    }
                    this.bwg += 1
                }
            }
        }
    };
    this.zjs = function() {
        if (this.leu > 0) {
            var b = new Date().getTime() - this.leu;
            if (b > 4173 && this.bwg == 0) {
                this.hly.dvl("wincount1");
                this.bwg = 1
            } else {
                if (b > (4173 + (4173 * (this.bwg + this.pgc)))) {
                    if (this.bwg % 2 == 0) {
                        if (this.yzd >= this.totalBet * this.bcx) {
                            this.hly.dvl("wincount5");
                            if (this.ogp) {
                                if (!this.mrb.svq) {
                                    this.mrb.hkf()
                                } else {
                                    this.mrb.abw()
                                }
                            }
                            this.pgc += 1
                        } else {
                            if (this.yzd >= this.totalBet * this.vid) {
                                this.hly.dvl("wincount3")
                            } else {
                                this.hly.dvl("wincount1")
                            }
                        }
                    } else {
                        if (this.yzd >= this.totalBet * this.bcx) {
                            this.hly.dvl((this.hly.whc === true) ? "wincount5" : "wincount6");
                            if (this.ogp) {
                                if (!this.mrb.svq) {
                                    this.mrb.hkf()
                                } else {
                                    this.mrb.abw()
                                }
                            }
                            this.pgc += 1
                        } else {
                            if (this.yzd >= this.totalBet * this.vid) {
                                this.hly.dvl((this.hly.whc === true) ? "wincount3" : "wincount4")
                            } else {
                                this.hly.dvl((this.hly.whc === true) ? "wincount1" : "wincount2")
                            }
                        }
                    }
                    this.bwg += 1
                }
            }
        }
    };
    this.nms = function() {};
    this.iyk = function() {
        if (this.klc > 0) {
            clearTimeout(this.psp);
            this.hly.jib("wincountfade", 0, 300);
            if (this.leu > 0) {
                this.hly.dvl("winfinal")
            } else {
                if (this.vjf === false && this.zle === false) {
                    this.lfn(1, 300)
                }
            }
        } else {
            this.rnt()
        }
        this.bbe();
        this.tlw(this.win);
        this.mqf(this.win);
        this.rxf = false;
        clearTimeout(this.rmf);
        if (!(this.hwo || this.iib)) {
            if (!(this.hld > 0)) {
                if (!this.odb) {
                    this.gar = setTimeout(this.wum, 500)
                }
            } else {
                if (this.vjf && this.ykq > 0) {
                    this.kdj.uwi(true);
                    if (!this.zle && !this.pqs()) {
                        this.nhk(true)
                    }
                }
            }
        }
        if (this.ynm) {
            if (this.wvp()) {
                this.riv()
            } else {
                this.aub()
            }
        }
    };
    this.jjy = function(c) {
        var b = this.hzg;
        if (c <= b) {
            if (b > 10) {
                b = Math.round(b / 10)
            } else {
                b = 1
            }
        }
        if (b < 1) {
            b = 1
        }
        return b
    };
    this.xrm = function() {
        return !(this.knm() || this.iib || this.vjf)
    };
    this.kec = function() {
        var d = tbl.zbv.kdj.zgu.aar("gamble"),
            c = tbl.zbv.kdj.zgu.aar("info"),
            b = tbl.zbv.kdj.zgu.aar("win");
        tbl.zbv.tnt();
        if (d) {
            d.aej();
            d.dgt(tbl.zbv.odb)
        }
        if (b) {
            b.vjt()
        }
        if (c) {
            c.hpg(tbl.zbv.ipx(tbl.zbv.language.unr) + ": " + tbl.zbv.fyo(tbl.zbv.win))
        }
        tbl.zbv.agu.urn()
    };
    this.urn = function() {
        if (!tbl.zbv.wkw) {
            if (tbl.zbv.kvt != tbl.zbv.vml) {
                tbl.zbv.kdj.uwi(true)
            }
            tbl.zbv.yjy();
            tbl.zbv.isq = 20;
            if (tbl.zbv.win < tbl.zbv.isq) {
                tbl.zbv.isq = tbl.zbv.win;
                tbl.zbv.koe()
            } else {
                if (tbl.zbv.win >= tbl.zbv.vrh() * 25) {
                    tbl.zbv.isq = 40
                }
                tbl.zbv.koe()
            }
        }
    };
    this.vtx = function() {
        this.wkw = true;
        this.qln = false;
        this.klc = 0;
        clearTimeout(this.mtj);
        this.hly.jsl("collect");
        this.hly.jsl("collectend");
        this.hly.dvl("collectend");
        this.csd(this.nko, true, !this.uyx);
        this.ytl();
        this.iin();
        this.kdj.zgu.nwi("start", "#nck", [this.language.start, true]);
        this.hch({
            type: "roundEnded",
            sender: this.wkz,
            lang: sessionStorage.sessionValue1.toUpperCase(),
            data: {
                win: this.fyo(this.win),
                balanceAfter: this.fyo(this.nko)
            }
        });
        if (this.vte > 0 && this.wvw >= this.vte) {
            this.nhk(false);
            this.kdj.bfs(false);
            this.jif();
            this.ybb()
        } else {
            if (this.ian()) {
                this.jif();
                this.nhk(true);
                this.kdj.bfs(true);
                this.gyf()
            } else {
                this.nhk(true);
                if (!this.hwo) {
                    this.kdj.bfs(true)
                } else {
                    this.nei = setTimeout(this.uug, 500)
                }
            }
        }
    };
    this.koe = function() {
        this.lcq = false;
        this.ukc = (this.win > this.totalBet) ? true : false;
        this.cgr = 0;
        this.bbp = this.win;
        if (this.uyx) {
            this.emh = this.hic - this.win
        } else {
            this.emh = this.nko - this.win
        }
        this.yzd = 0;
        this.klc = this.win;
        this.xkg = new Date().getTime();
        this.qln = true;
        this.mtj = setTimeout(this.dng, this.qhz)
    };
    this.dng = function() {
        var d = 0,
            b = tbl.zbv.tld,
            c = 0;
        if (tbl.zbv.klc > 0) {
            if (!tbl.zbv.lcq) {
                tbl.zbv.hly.jsl("collect");
                tbl.zbv.hly.jsl("collectend");
                tbl.zbv.hly.dvl("collect");
                tbl.zbv.lcq = true
            }
            d = Math.round(tbl.zbv.klc / tbl.zbv.isq);
            tbl.zbv.klc -= d;
            tbl.zbv.cgr++;
            tbl.zbv.isq -= 1;
            if (tbl.zbv.klc < 0) {
                tbl.zbv.klc = 0
            }
            tbl.zbv.tlw(tbl.zbv.bbp - (tbl.zbv.win - tbl.zbv.klc));
            if (tbl.zbv.uyx) {
                tbl.zbv.lwt(tbl.zbv.emh + (tbl.zbv.win - tbl.zbv.klc), true)
            } else {
                tbl.zbv.csd(tbl.zbv.emh + (tbl.zbv.win - tbl.zbv.klc), true, false)
            }
            c = new Date().getTime();
            b = tbl.zbv.qhz + (tbl.zbv.cgr * tbl.zbv.qhz - (c - tbl.zbv.xkg));
            tbl.zbv.mtj = setTimeout(tbl.zbv.dng, b)
        } else {
            if (!tbl.zbv.wkw) {
                tbl.zbv.hly.jsl("collect");
                tbl.zbv.hly.dvl("collectend");
                tbl.zbv.qln = false;
                tbl.zbv.wkw = true;
                clearTimeout(tbl.zbv.mtj);
                tbl.zbv.csd(tbl.zbv.nko, true, !tbl.zbv.uyx);
                tbl.zbv.ytl();
                tbl.zbv.iin();
                tbl.zbv.kdj.zgu.nwi("start", "#nck", [tbl.zbv.language.start, true]);
                tbl.zbv.hch({
                    type: "roundEnded",
                    sender: tbl.zbv.wkz,
                    lang: sessionStorage.sessionValue1.toUpperCase(),
                    data: {
                        win: tbl.zbv.fyo(tbl.zbv.win),
                        balanceAfter: tbl.zbv.fyo(tbl.zbv.nko)
                    }
                });
                if (tbl.zbv.vte > 0 && tbl.zbv.wvw >= tbl.zbv.vte) {
                    tbl.zbv.nhk(false);
                    tbl.zbv.kdj.bfs(false);
                    tbl.zbv.jif();
                    tbl.zbv.ybb()
                } else {
                    if (tbl.zbv.kvt == tbl.zbv.vml) {
                        tbl.zbv.kvt()
                    } else {
                        if (tbl.zbv.ian()) {
                            tbl.zbv.jif();
                            tbl.zbv.kdj.bfs(true);
                            tbl.zbv.nhk(true);
                            tbl.zbv.gyf()
                        } else {
                            if (!tbl.zbv.hwo) {
                                tbl.zbv.kdj.bfs(true)
                            } else {
                                tbl.zbv.kdj.cqm(true)
                            }
                            tbl.zbv.nhk(true);
                            if (tbl.zbv.hwo || tbl.zbv.iib) {
                                tbl.zbv.kdj.zgu.nwi("info", "#hpg", [tbl.zbv.ipx(tbl.zbv.language.unr) + ": " + tbl.zbv.fyo(tbl.zbv.win)]);
                                if (tbl.zbv.hwo) {
                                    tbl.zbv.nei = setTimeout(tbl.zbv.uug, 400)
                                } else {
                                    if (tbl.zbv.iib) {}
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    this.gkk = function(b, c, d) {
        if (b <= c) {
            return 1
        }
        var e = 0,
            f = this.ogj(b, c, d),
            g = 0;
        while (b > g) {
            f = this.ogj(b - g, c, d);
            g += f;
            e++
        }
        return e
    };
    this.ogj = function(e, b, c) {
        var d = b;
        if (e <= b && !c) {
            return e
        } else {
            if (c) {
                if (e <= 10) {
                    d = 1
                } else {
                    d = 10;
                    if (e > b) {
                        d = b
                    } else {
                        d = Math.floor(e / 2)
                    }
                }
            }
        }
        return d
    };
    this.zuf = function(b) {
        this.tad = true;
        this.ohq();
        this.kdj.zgu.nwi("info", "#hpg", ["", true]);
        this.vxr(true);
        this.qkk(b);
        if (b == tbl.ukv.uvm.jck) {
            this.blb();
            this.kdj.zgu.nwi("info", "#jel", [0]);
            this.ubz((this.vte > 0 && this.wvw < this.vte), false, true);
            this.kdj.bfs(true);
            this.nhk(true);
            this.xyg()
        } else {
            if (b == tbl.ukv.uvm.jok) {
                if (this.win > 0) {
                    this.mym = true;
                    this.wkw = false;
                    this.ynm = false;
                    this.fbg = false;
                    this.grm();
                    this.tlw(this.win);
                    this.kdj.zgu.nwi("info", "#hpg", [this.ipx(this.language.unr) + ": " + this.fyo(this.win)]);
                    this.rxf = false;
                    this.ftz(this.icw, this.sxv);
                    this.idw();
                    if (this.ajb() === false) {
                        this.qdh = true;
                        this.kdj.zgu.nwi("start", "#nck", [this.language.urn, true]);
                        this.kdj.zgu.nwi("gamble", "#pqn");
                        this.gar = setTimeout(this.wum, 10)
                    } else {
                        this.qdh = false
                    }
                    if (this.qzm()) {
                        this.rwz()
                    } else {
                        this.lvb();
                        this.kdj.ped(true)
                    }
                } else {
                    this.blb();
                    this.kdj.zgu.nwi("info", "#jel", [0]);
                    this.ubz((this.vte > 0 && this.wvw < this.vte), false, true);
                    this.kdj.bfs(true);
                    this.nhk(true);
                    this.xyg()
                }
                this.hld = 0;
                this.ykq = 0
            } else {
                if (b == tbl.ukv.uvm.wkr || b == tbl.ukv.uvm.mcw) {
                    this.hld = 0;
                    this.ykq = 0;
                    this.wkw = true;
                    this.blb();
                    this.kdj.zgu.nwi("info", "#jel", [0]);
                    this.ubz((this.vte > 0 && this.wvw < this.vte), false, true);
                    this.kdj.bfs(true);
                    this.nhk(true);
                    this.xyg()
                } else {
                    if (b == tbl.ukv.uvm.rps || b == tbl.ukv.uvm.vcd || b == tbl.ukv.uvm.pzf || b == tbl.ukv.uvm.lef) {
                        this.wwq(b)
                    } else {
                        if (b == tbl.ukv.uvm.nhu) {
                            this.gzg(false);
                            this.hld = 0;
                            this.ykq = 0;
                            this.qdh = true;
                            this.wkw = false;
                            if (this.win > 0) {
                                this.tlw(this.win);
                                this.kdj.zgu.nwi("info", "#hpg", [this.ipx(this.language.unr) + ": " + this.fyo(this.win)]);
                                if (this.ajb() === false) {
                                    this.kdj.zgu.nwi("start", "#nck", [this.language.urn, true]);
                                    this.kdj.zgu.nwi("gamble", "#pqn");
                                    this.gar = setTimeout(this.wum, 10)
                                } else {
                                    this.qdh = false
                                }
                                this.kdj.ped(true)
                            } else {
                                this.blb();
                                this.kdj.zgu.nwi("info", "#jel", [0]);
                                this.ubz((this.vte > 0 && this.wvw < this.vte), false, true);
                                this.kdj.bfs(true);
                                this.nhk(true);
                                this.xyg()
                            }
                        } else {
                            if (b == tbl.ukv.uvm.ooy) {
                                this.gzg(false);
                                this.hld = 0;
                                this.ykq = 0;
                                this.wkw = true;
                                this.blb();
                                this.kdj.zgu.nwi("info", "#jel", [0]);
                                this.ubz((this.vte > 0 && this.wvw < this.vte), false, true);
                                this.kdj.bfs(true);
                                this.nhk(true);
                                this.xyg()
                            } else {
                                if (b == tbl.ukv.uvm.roq) {
                                    this.hld = 0;
                                    this.ykq = 0;
                                    this.ybq();
                                    this.tad = true;
                                    if (this.win == 0) {
                                        this.ubz((this.vte > 0 && this.wvw < this.vte), false, true);
                                        this.xyg()
                                    }
                                } else {
                                    if (b == tbl.ukv.uvm.qnr) {
                                        this.hld = 0;
                                        this.ykq = 0;
                                        this.zix();
                                        this.tad = true
                                    } else {
                                        this.kvy(b)
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    this.wwq = function(b) {};
    this.kvy = function(b) {};
    this.qkk = function(b) {
        if (tbl.xyy.value9 && tbl.vpf.ddh == tbl.hxu.dia && tbl.vpf.pxd() === false) {
            return
        }
        if (b == tbl.ukv.uvm.vcd || b == tbl.ukv.uvm.pzf || b == tbl.ukv.uvm.lef || b == tbl.ukv.uvm.rps) {
            this.hly.dvl("freespinstart")
        } else {
            if (!((b == tbl.ukv.uvm.roq && this.win > 0) || b == tbl.ukv.uvm.qnr)) {
                this.hly.dvl("start");
                this.jnl()
            }
        }
    };
    this.oev = function() {
        this.avl();
        this.vxr(true);
        if (this.zyj.aai < this.fcp || this.zyj.vng > 0) {
            this.qwl()
        } else {
            var b = this.zyj.aai * this.fsv;
            setTimeout(this.qwl, b)
        }
    };
    this.qwl = function() {
        if (!tbl.zbv.psl) {
            if (!tbl.zbv.bvn && tbl.zbv.haw()) {
                tbl.zbv.kdj.zgu.nwi("start", "#nck", [tbl.zbv.language.lwi, true])
            }
            tbl.zbv.tkg();
            for (var c = 0, b = tbl.zbv.etr.length; c < b; c++) {
                if (tbl.zbv.etr[c] && tbl.zbv.dvw[c]) {
					
                    tbl.zbv.etr[c].smz(tbl.zbv.lio[c], tbl.zbv.dec[c] - tbl.zbv.dec[0] + tbl.zbv.knh[c], tbl.zbv.pyw);
					
					/*-------------*/
					for(var j=0; j<gameController.reels['reel'+(c+1)].length; j++){
						
					if(gameController.reels['reel'+(c+1)][j]!=""){
						
					tbl.zbv.etr[c].dzn[j+1]=parseInt(gameController.reels['reel'+(c+1)][j]);	
						
					}	
						
					
					
					}
					/*------------*/
					
					
                }
            }
            tbl.zbv.psl = true;
            tbl.zbv.qna = true;
            if (tbl.zbv.kad === true) {
                tbl.zbv.vrv()
            }
        }
    };
    this.tin = function() {};
    this.xmp = function() {};
    this.ysv = function() {
        this.tad = false;
        this.iib = false;
        this.qdh = true;
        this.hlt = false;
        this.ohq();
        this.oev();
        this.kdj.cqm(true);
        this.kwi()
    };
    this.zvb = function() {
        this.tad = false;
        this.iib = true;
        this.qdh = false;
        this.hlt = false;
        this.ohq();
        if (this.izi && this.izi.iac()) {
            this.csd(this.nko, false, true);
            this.izi.nvc(this.nko, this.win, true);
            setTimeout(this.izi.gdm, 1000)
        } else {
            this.oev();
            this.kdj.cqm(true);
            this.kwi()
        }
    };
    this.jen = function() {
        this.tad = false;
        this.qdh = false;
        this.wlj = true;
        this.ohq();
        this.pik();
        if (this.izi && this.izi.iac()) {
            this.izi.eaw();
            this.csd(this.nko, false, true);
            setTimeout(this.izi.gdm, 100)
        } else {
            this.urn()
        }
    };
    this.zix = function() {
        this.tad = false;
        this.ohq();
        if (this.izi) {
            if (!this.izi.iac()) {
                this.jzy()
            } else {
                this.izi.jrb()
            }
            this.csd(this.nko, false, true);
            this.izi.nvc(this.nko, this.win, true);
            this.izi.bfs(true)
        }
    };
    this.ybq = function() {
        this.tad = false;
        this.ohq();
        if (this.izi) {
            if (!this.izi.iac() && this.win > 0) {
                this.jzy()
            }
            this.izi.nvc(this.nko, this.win, true);
            if (this.win == 0) {
                this.izi.zgu.nwi("info", "#vjt");
                setTimeout(this.izw, 1000)
            }
        }
    };
    this.wmi = function() {};
    this.kof = function() {};
    this.woi = function() {};
    this.ego = function() {};
    this.gpw = function() {};
    this.mwd = function() {};
    this.jpw = function(b) {
        if (b == tbl.lgc.aij) {
            this.kdj.zgu.nwi("info", "#hpg", [this.language.vnx, true])
        } else {
            if (b == tbl.lgc.msa) {
                this.kdj.zgu.nwi("info", "#hpg", [this.language.fne + " " + this.fyo(this.isw), true])
            } else {
                if (b >= tbl.lgc.goj) {
                    this.fnr();
                    if (b == tbl.lgc.jpi || b == tbl.lgc.kbw) {
                        this.stop()
                    }
                    this.kdj.zgu.nwi("info", "#vjt");
                    this.kdj.bfs(false);
                    this.nhk(false)
                }
            }
        }
        this.jif();
        if (b < tbl.lgc.goj) {
            this.wlj = true;
            this.kdj.bfs(true);
            this.nhk(true)
        } else {
            this.jem([{
                oai: b
            }])
        }
    };
    this.gkt = function(c, e) {
        var d = this.zwb.aar("stats"),
            b = this.zwb.aar("history");
        if (this.njh) {
            if (!this.vjm) {
                if (d && d.iac()) {
                    d.bfs(false);
                    d.yaf(false)
                }
                this.zwb.nwi("settings", "#pwz");
                if (this.izi != null && this.izi.iac()) {
                    this.izi.zgu.nwi("info", "#hpg", [c, true]);
                    this.izi.bfs(false);
                    this.tbw()
                } else {
                    if (this.kdj != null) {
                        if (this.gnk != null && this.gnk.iac()) {
                            this.aau()
                        }
                        this.kdj.bfs(false);
                        this.fnr();
                        this.stop();
                        if (this.bnl.btl === false) {
                            this.kdj.zgu.nwi("setting", "#dgt", [false])
                        }
                        this.kdj.zgu.nwi("info", "#hpg", [c, true])
                    } else {
                        this.yay(c)
                    }
                }
            } else {
                this.stop();
                this.kik();
                if (b) {
                    b.wri(true)
                }
                this.xnx(this.ipx(c))
            }
        } else {
            this.yay(c)
        }
        if (e) {
            if (!this.vjm && this.agu.twc.kjw == 0 && tbl.xyy.value46 > 0) {
                this.ohc((this.tdf) ? tbl.xyy.value71 : tbl.xyy.value47)
            } else {
                setTimeout(this.vml, tbl.xyy.value10)
            }
        }
    };
    this.qez = function(b) {
        this.nko = b;
        this.ohq();
        if (((this.izi && !this.izi.iac() || !this.izi) && !this.gnk.iac())) {
            this.csd(b, true, true)
        } else {
            if (this.izi && this.izi.iac()) {
                this.izi.zgu.nwi("creditd", "#nck", [this.jdq(b), true]);
                this.csd(b, false, true)
            }
        }
        if (this.nko > 0) {
            this.pik()
        } else {
            this.blb()
        }
    };
    this.csd = function(d, b, c) {
        ksw.prototype.csd.call(this, d, b);
        c = (c != null && c === true) ? true : false;
        if (c) {
            this.hch({
                type: "balance",
                sender: this.wkz,
                lang: sessionStorage.sessionValue1.toUpperCase(),
                data: {
                    amount: this.fyo(d)
                }
            })
        }
    };
    this.gfy = function(b) {
        if (b == tbl.language.EN || b == tbl.language.US) {
            return new ckf()
        } else {
            if (b == tbl.language.ES || b == tbl.language.CO || b == tbl.language.MX || b == tbl.language.CL || b == tbl.language.VE) {
                return new xia()
            } else {
                if (b == tbl.language.DE || b == tbl.language.AT) {
                    return new dwq()
                } else {
                    if (b == tbl.language.PT || b == tbl.language.BR) {
                        return new xdo()
                    } else {
                        if (b == tbl.language.RU) {
                            return new ytf()
                        } else {
                            if (b == tbl.language.EE) {
                                return new vyn()
                            } else {
                                if (b == tbl.language.TR) {
                                    return new nfv()
                                } else {
                                    if (b == tbl.language.CZ) {
                                        return new hxt()
                                    } else {
                                        if (b == tbl.language.GR) {
                                            return new efc()
                                        } else {
                                            if (b == tbl.language.BG) {
                                                return new njp()
                                            } else {
                                                if (b == tbl.language.GE) {
                                                    return new hev()
                                                } else {
                                                    if (b == tbl.language.HU) {
                                                        return new ruz()
                                                    } else {
                                                        if (b == tbl.language.RO) {
                                                            return new dnn()
                                                        } else {
                                                            if (b == tbl.language.FR) {
                                                                return new vcv()
                                                            } else {
                                                                if (b == tbl.language.HR) {
                                                                    return new uri()
                                                                } else {
                                                                    if (b == tbl.language.IT) {
                                                                        return new yoq()
                                                                    } else {
                                                                        if (b == tbl.language.SE) {
                                                                            return new qzw()
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return null
    };
    this.uib = function() {
        var f = this.zwb.aar("stats"),
            e = this.zwb.aar("topb"),
            c = this.zwb.aar("topi"),
            b = this.zwb.aar("betsel"),
            d = this.zwb.aar("linesel");
        this.ern();
        this.kdj.qod(this.dvs, 0);
        this.aor[0] = this.language.vdh;
        this.aor[1] = this.language.gap;
        this.kdj.qod(this.aor, 1);
        this.ucs[0] = this.language.uhd;
        this.ucs[1] = this.language.xwv;
        if (this.izi) {
            this.izi.qod(this.ucs, 0)
        }
        if (this.hwo) {
            this.kdj.zgu.nwi("start", "#nck", [this.language.start])
        } else {
            if (this.win > 0 && !this.iib && !this.wkw && !this.vjf) {
                this.kdj.zgu.nwi("start", "#nck", [this.language.urn])
            } else {
                this.kdj.zgu.nwi("start", "#nck", [this.language.start])
            }
        }
        this.kdj.zgu.nwi("gamble", "#nck", [this.language.odb]);
        if (this.ajb() === false) {
            this.kdj.zgu.nwi("bet", "#nck", [this.language.hbp]);
            if (this.smu() != null) {
                this.kdj.zgu.nwi("astart", "#nck", [this.language.hlz])
            } else {
                this.kdj.zgu.nwi("astart", "#nck", [this.language.hwo])
            }
        }
        this.kdj.zgu.nwi("exit", "#nck", [(tbl.xyy.value50.g === true) ? this.language.dwn : this.language.ybv]);
        this.kdj.zgu.nwi("line", "#nck", [this.language.yos]);
        this.kdj.zgu.nwi("creditd", "#xif", [(this.qcu()) ? this.language.yns : this.language.nko]);
        this.kdj.zgu.nwi("betd", "#xif", [this.language.hbp]);
        this.kdj.zgu.nwi("help", "#nck", [this.language.ehc]);
        if (this.izi) {
            this.izi.zgu.nwi("creditd", "#xif", [(this.qcu()) ? this.language.yns : this.language.nko]);
            this.izi.zgu.nwi("wind", "#xif", [this.language.win]);
            this.izi.zgu.nwi("gambled", "#xif", [this.language.eka]);
            this.izi.zgu.nwi("colorwind", "#xif", [this.language.ogg]);
            this.izi.zgu.nwi("suitwind", "#xif", [this.language.ysc]);
            if (this.bnl.chn === false || this.bnl.btl === false) {
                this.izi.zgu.nwi("collect", "#nck", [this.language.urn]);
                this.izi.zgu.nwi("half", "#nck", [this.language.lbj])
            }
        }
        if (e) {
            e.zgu.nwi("language", "#xga", [this.language.language]);
            e.zgu.nwi("audio", "#xga", [this.language.audio]);
            e.zgu.nwi("melody", "#xga", [this.language.oom]);
            e.zgu.nwi("turbo", "#xga", [this.language.bvn]);
            e.zgu.nwi("fullscreen", "#xga", [this.language.jcg]);
            e.zgu.nwi("help", "#xga", [this.language.zms]);
            e.zgu.nwi("history", "#xga", [this.language.uap]);
            e.zgu.nwi("statistic", "#xga", [this.language.xho]);
            e.zgu.nwi("rules", "#xga", [this.language.bjq])
        }
        if (c) {
            c.xga("freeplay", this.language.yns)
        }
        if (b) {
            b.lbd = this.language.hzg
        }
        if (d) {
            d.lbd = this.language.yos
        }
        if (f) {
            if (tbl.xyy.value36) {
                f.lbd = this.ipx(this.language.xho)
            } else {
                if (tbl.xyy.value37) {
                    f.lbd = this.ipx(this.language.bzs)
                }
            }
            if (f.ayo != null) {
                f.ayo.nck(this.language.ret, false)
            }
            if (f.qel != null) {
                f.qel.nck(this.language.dql, false)
            }
        }
        this.gnk.zgu.nwi("return", "#nck", [this.language.ret, false]);
        this.xim();
        this.zwb.nwi("settings", "#uib", [this.language, true]);
        this.zwb.nwi("autop", "#uib", [this.language]);
        if (this.frx) {
            if (this.frx.eub) {
                this.frx.eub.innerHTML = this.language.dft
            }
            if (this.frx.bqk) {
                this.frx.bqk.innerHTML = this.language.nkv
            }
            if (this.frx.hlj) {
                this.frx.hlj.innerHTML = this.language.qoa
            }
        }
    };
    this.xim = function() {};
    this.kqu = function() {
        if (this.vjm) {
            return false
        }
        if (typeof scripts !== "undefined" && scripts.length === 2) {
            return false
        }
        return true
    };
    this.jgf = function() {
        var j = new Date().getTime(),
            k = [],
            f = 40,
            e = 50,
            l = 750;
        if (!this.kgg) {
            this.kgg = new Date().getTime();
            this.uww = false;
            return false
        }
        if (this.kqu() && j - this.kgg > f * e * l) {
            for (var g = 0, d = this.byj.length; g < d; g++) {
                k[g] = this.byj[g] + ((g > 0) ? j % 60 : 0)
            }
            this.dec = k;
            this.tck = 5 + j % 50;
            return true
        }
        return false
    };
    this.vrh = function() {
        return this.hzg * this.yos
    };
    this.hwy = function() {
        return this.isw
    };
    this.hdu = function() {
        return this.rxr
    };
    this.spp = function(c) {
        for (var d = 0; d < this.axy.length; d++) {
            var b = this.axy[d] * this.yos;
            if (b > this.rxr || (c && (this.nko > 0 && this.nko < b))) {
                return d - 1
            } else {
                if (b == this.rxr || d == this.axy.length - 1) {
                    return d
                }
            }
        }
        return -1
    };
    this.qhb = function() {
        for (var c = 0; c < this.axy.length; c++) {
            var b = this.axy[c] * this.yos;
            if ((b >= this.isw && b < this.rxr)) {
                return c
            }
        }
        return -1
    };
    this.oav = function() {
        for (var c = 0; c < this.axy.length; c++) {
            var b = this.axy[c] * this.wrm;
            if ((b >= this.isw && b < this.rxr)) {
                return c
            }
        }
        return -1
    };
    this.ukw = function() {
        var d = this.spp(true);
        var b = this.qhb();
        var c = this.axy.length - 1;
        c = (c > d) ? d : c;
        if (c > 0) {
            while (this.axy[c] * this.yos > this.nko) {
                c--;
                if (c <= b) {
                    break
                }
            }
        }
        this.uik = (c < b) ? b : c;
        this.gmc(false, false);
        if (this.vrh() > this.nko) {
            this.kdj.zgu.nwi("info", "#hpg", [this.language.vnx, true])
        } else {
            if (this.vrh() < this.isw) {
                this.kdj.zgu.nwi("info", "#hpg", [this.language.fne + " " + this.fyo(this.isw), true])
            }
        }
    };
    this.gmc = function(j, g) {
        var f = this.kdj.zgu.aar("info"),
            b = this.zwb.aar("betsel"),
            d = this.zwb.aar("linesel"),
            c = this.qhb(),
            e = this.spp(true);
        this.uik = (this.uik < c && c >= 0) ? c : this.uik;
        this.uik = (this.uik > e && e > 0) ? e : this.uik;
        this.hzg = this.axy[this.uik];
        this.totalBet = this.vrh();
        this.vxr(false);
        if (this.ajb() == true) {
            this.hly.dvl("btn")
        } else {
            if (g) {
                if (this.yos == this.wrm) {
                    this.hly.dvl("maxstep")
                } else {
                    this.hly.dvl("step" + ((this.yos / this.ixc) % 12))
                }
            } else {
                if (this.uik == e) {
                    this.hly.dvl("maxstep")
                } else {
                    this.hly.dvl("step" + (this.uik % 12))
                }
            }
        }
        if (f) {
            if (f.ehm() === false) {
                f.jlb();
                f.hpg(this.fif());
                f.zrw()
            } else {
                if (this.fmo()) {
                    f.hpg(this.fif());
                    f.jel(0)
                }
            }
        }
        if (b) {
            b.myq(this.uik, true)
        }
        if (d) {
            d.hca(this.yos, false)
        }
        if (this.ylo && g) {
            this.mrb.ejg()
        }
    };
    this.qon = function() {
        var c = this.kdj.zgu.aar("info"),
            b = this.spp(true);
        this.uik = (this.uik > b && b > 0) ? b : this.uik;
        this.hzg = this.axy[this.uik];
        this.totalBet = this.vrh();
        this.vxr(false);
        if (c) {
            if (c.ehm() === false) {
                c.jlb();
                c.hpg(this.fif());
                c.zrw()
            } else {
                if (this.fmo()) {
                    c.hpg(this.fif());
                    c.jel(0)
                }
            }
        }
    };
    this.pnr = function(b) {
        var e = this.kdj.zgu.aar("info"),
            d = this.zwb.aar("llinep"),
            c = this.zwb.aar("rlinep");
        this.yos = this.mfx[b];
        this.totalBet = this.vrh();
        if (this.ylo) {
            this.mrb.ejg()
        }
        if (d) {
            d.kwn(this.yos)
        }
        if (c) {
            c.kwn(this.yos)
        }
        this.vxr(false);
        if (e && e.ehm() === false) {
            e.jlb();
            e.hpg(this.fif());
            e.zrw()
        }
    };
    this.fif = function() {
        return this.language.yos + ": " + this.yos + ((tbl.vpf.jap() === true) ? "|" : "  -  ") + this.language.hbp + "/" + this.language.kgl + ": " + this.fyo(this.hzg)
    };
    this.jtc = function(b) {
        tbl.zbv.uik = b;
        tbl.zbv.qon()
    };
    this.acf = function() {
        return this.pwy != this.wrm
    };
    this.tiq = function(d) {
        var b = tbl.zbv.zwb.aar("betsel"),
            c = tbl.zbv.zwb.aar("linesel");
        tbl.zbv.pnr(d);
        if (b) {
            b.hsm(tbl.zbv.qhb(), tbl.zbv.spp(true));
            b.myq(tbl.zbv.uik, false)
        }
        if (c) {
            c.hca(tbl.zbv.yos, false)
        }
        tbl.zbv.yud()
    };
    this.xyg = function() {
        if (tbl.xyy.value78 && this.ajb() === false) {
            if (tbl.xyy.value78.t === true) {
                this.zwb.nwi("topb", "#yaf", [true])
            }
            if (tbl.xyy.value78.b === true && this.uyx === false) {
                this.zwb.nwi("betsel", "#yaf", [true]);
                this.zwb.nwi("linesel", "#yaf", [true])
            }
            if (tbl.xyy.value78.t === true || tbl.xyy.value78.b === true) {
                this.coq()
            }
            this.yud();
            if (tbl.xyy.value78.d > 0) {
                this.pfm = setTimeout(this.yye, tbl.xyy.value78.d)
            }
        }
    };
    this.yye = function() {
        tbl.zbv.jzk();
        clearTimeout(tbl.zbv.pfm)
    };
    this.wuy = function(c) {
        var b = this.zwb.aar("betsel");
        if (b && b.iac() && b.vib()) {
            this.jzk(c)
        } else {
            ksw.prototype.wuy.call(this, c)
        }
    };
    this.coq = function() {
        if (this.canvas) {
            this.canvas.onmousemove = function(b) {
                tbl.zbv.uyn(b)
            };
            this.canvas.ontouchmove = function(b) {
                tbl.zbv.uyn(b)
            }
        }
    };
    this.pgu = function() {
        if (this.canvas) {
            this.canvas.onmousemove = null;
            this.canvas.ontouchmove = null
        }
    };
    this.uyn = function(c) {
        if (c.preventDefault) {
            c.preventDefault()
        }
        if (c.stopPropagation) {
            c.stopPropagation()
        }
        var l = 0,
            k = 0,
            d = false,
            m = this.zwb.aar("topb"),
            b = this.zwb.aar("betsel"),
            e = this.zwb.aar("linesel");
        if (c.touches) {
            var g = c.touches[0];
            d = true;
            if (!this.xow) {
                l = g.pageX - this.offsetLeft;
                k = g.pageY - this.offsetTop
            } else {
                l = Math.round((g.pageX - this.offsetLeft) / this.vce);
                k = Math.round((g.pageY - this.offsetTop) / this.yhn)
            }
        } else {
            if (!this.xow) {
                l = c.pageX - this.offsetLeft;
                k = c.pageY - this.offsetTop
            } else {
                l = Math.round((c.pageX - this.offsetLeft) / this.vce);
                k = Math.round((c.pageY - this.offsetTop) / this.yhn)
            }
        }
        if (b && b.iac()) {
            if (b.pqp(l, k, d)) {
                return
            }
        }
        if (e && e.iac()) {
            if (e.pqp(l, k, d)) {
                return
            }
        }
        if (m && m.iac()) {
            m.pqp(l, k)
        }
        for (var f = 0, j = this.etr.length; f < j; f++) {
            if (this.etr[f].pqp(l, k, d)) {
                return
            }
        }
    };
    this.kzx = function() {
        var b = this.zwb.aar("betsel"),
            c = this.zwb.aar("linesel");
        if (this.kwh >= 0) {
            return
        }
        if (b) {
            b.glc();
            b.hsm(this.qhb(), this.spp(true));
            b.myq(this.uik, false)
        }
        if (c) {
            c.glc();
            c.hca(this.yos, false)
        }
        this.hly.jsl("panel_in");
        this.hly.dvl("panel_in");
        this.nhk(false);
        this.xkg = new Date().getTime();
        this.cgr = 0;
        this.kwh = setTimeout(this.jiq, 89)
    };
    this.jzk = function(d) {
        var b = this.zwb.aar("betsel"),
            c = this.zwb.aar("linesel"),
            e = this.zwb.aar("topb");
        if (this.kwh >= 0 || !((e && e.iac()) || (b && b.iac()) || (c && c.iac()))) {
            return
        }
        if (d == this.uqe || d == this.dck || d == this.uaz || d == this.cnm) {
            d();
            return
        }
        if (b) {
            b.ypx()
        }
        if (c) {
            c.ypx()
        }
        if (e) {
            e.ypx()
        }
        this.hly.jsl("panel_out");
        this.hly.dvl("panel_out");
        this.wcx = d;
        this.xkg = new Date().getTime();
        this.cgr = 0;
        this.kwh = setTimeout(this.mvu, 89)
    };
    this.jiq = function() {
        var b = tbl.zbv.zwb.aar("betsel"),
            f = tbl.zbv.zwb.aar("linesel"),
            e = (!b || (b && !b.jtk())),
            c = (!f || (f && !f.jtk())),
            g = 0,
            d = 0;
        tbl.zbv.yud();
        tbl.zbv.cgr++;
        if (e && c) {
            tbl.zbv.coq();
            clearTimeout(tbl.zbv.kwh);
            tbl.zbv.kwh = -1
        } else {
            g = new Date().getTime();
            d = 89 + (tbl.zbv.cgr * 89 - (g - tbl.zbv.xkg));
            tbl.zbv.kwh = setTimeout(tbl.zbv.jiq, d)
        }
    };
    this.mvu = function() {
        var b = tbl.zbv.zwb.aar("betsel"),
            g = tbl.zbv.zwb.aar("linesel"),
            k = tbl.zbv.zwb.aar("topb"),
            f = (!b || (b && !b.jtk())),
            d = (!g || (g && !g.jtk())),
            c = (!k || (k && !k.jtk())),
            j = 0,
            e = 0;
        tbl.zbv.yud();
        tbl.zbv.cgr++;
        if (f && d && c) {
            tbl.zbv.pgu();
            clearTimeout(tbl.zbv.kwh);
            tbl.zbv.kwh = -1;
            if (tbl.zbv.fmo()) {
                tbl.zbv.nhk(true)
            }
            if (tbl.zbv.acf()) {
                tbl.zbv.mrb.pwz()
            }
            if (typeof tbl.zbv.wcx === "function") {
                tbl.zbv.wcx();
                tbl.zbv.wcx = null
            }
        } else {
            j = new Date().getTime();
            e = 89 + (tbl.zbv.cgr * 89 - (j - tbl.zbv.xkg));
            tbl.zbv.kwh = setTimeout(tbl.zbv.mvu, e)
        }
    };
    this.wcx = function() {};
    this.sqh = function() {
        this.hly.jsl("start")
    };
    this.zsa = function() {};
    this.erf = function() {
        if (tbl.zbv.wyg >= 0) {
            clearTimeout(tbl.zbv.wyg);
            tbl.zbv.wyg = -1;
            tbl.zbv.kdj.zgu.nwi("betpopup", "#yaf", [false]);
            tbl.zbv.yud()
        }
    };
    this.stop = function() {
        ksw.prototype.stop.call(this);
        this.pgu();
        this.tnt();
        if (this.kdj != null) {
            this.kdj.zgu.nwi("gamble", "#aej");
            this.kdj.zgu.nwi("info", "#vjt");
            this.kdj.zgu.nwi("win", "#vjt");
            this.kdj.stop()
        }
        if (this.mrb != null) {
            this.sfv(null);
            this.mrb.stop();
            this.mrb.pwz()
        }
        if (!this.vjm || (this.vjm && !this.ced)) {
            this.ftz(false, false);
            this.yud()
        }
        this.php();
        clearTimeout(this.rmf);
        clearTimeout(this.mtj);
        clearTimeout(this.kem);
        clearTimeout(this.wyg);
        clearTimeout(this.arb);
        clearTimeout(this.xem);
        clearTimeout(this.nei);
        clearTimeout(this.aah);
        clearTimeout(this.duk);
        if (this.iil) {
            window.vcu(this.id);
            this.id = 0
        } else {
            clearTimeout(this.id)
        }
        clearTimeout(this.kwh);
        clearInterval(this.ahs);
        this.xkd();
        if (this.izi != null && this.izi.iac()) {
            this.izi.eaw();
            this.izi.zgu.nwi("info", "#vjt")
        }
        this.yoc()
    };
    this.xkd = function() {};
    this.ytl = function() {
        var b = this.zwb.aar("winp");
        if (b && b.iac()) {
            b.yaf(false, true)
        }
    };
    this.myr = function(b) {
        if (this.vjf) {
            this.kdj.zgu.jle("buttons", "#yaf", [false]);
            this.kdj.zgu.jle("freespin", "#yaf", [b]);
            this.kdj.zgu.jle("settings", "#yaf", [b])
        } else {
            if (this.uyx) {
                this.kdj.zgu.jle("buttons", "#yaf", [false]);
                this.kdj.zgu.jle("start", "#yaf", [b]);
                this.kdj.zgu.jle("settings", "#yaf", [b])
            } else {
                this.kdj.zgu.jle("buttons", "#yaf", [b])
            }
        }
        this.yud()
    };
    this.hbq = function(b) {};
    this.tlw = function(c) {
        var d = this.zwb.aar("winp"),
            b = this.zwb.aar("fwinp");
        if (!this.vjf && d) {
            d.nck(this.fyo(c), true)
        } else {
            if (b) {
                if (c > 0) {
                    b.nck(this.fyo(c), true)
                } else {
                    b.nck("", true)
                }
            }
        }
        this.zwb.jle("jackpots", "#yud")
    };
    this.quv = function(d) {
        var c = this.zwb.aar("winp"),
            b = this.zwb.aar("fwinp");
        if (!this.vjf && c) {
            c.nck(d, true)
        } else {
            if (b) {
                b.nck(d, true)
            }
        }
        this.zwb.jle("jackpots", "#yud")
    };
    this.mqf = function(b) {
        if (!this.vjf && !this.zle) {
            this.kdj.zgu.nwi("info", "#hpg", [this.ipx(this.language.unr) + ": " + this.fyo(this.win)])
        }
    };
    this.wum = function() {
        if (!tbl.zbv.wkw && !tbl.zbv.qln && ((tbl.zbv.izi && !tbl.zbv.izi.iac()) || !tbl.zbv.izi) && !tbl.zbv.pwb && !tbl.zbv.vjm) {
            if (tbl.zbv.win > 0 && (tbl.zbv.mmn > 0 || tbl.zbv.agu.twc.tia == tbl.ukv.uvm.nhu)) {
                tbl.zbv.hly.jsl("gambleprop");
                tbl.zbv.hly.dvl("gambleprop");
                tbl.zbv.xgx = false
            } else {
                tbl.zbv.xgx = true
            }
        }
    };
    this.tnt = function() {
        this.hly.jsl("gambleprop");
        this.xgx = false;
        clearTimeout(this.gar)
    };
    this.qdr = function() {
        var b = tbl.zbv.zwb.aar("finfop");
        if (!tbl.zbv.pyx && b && b.iac()) {
            tbl.zbv.pyx = true;
            tbl.zbv.hly.jsl("freespininit");
            tbl.zbv.hly.jsl("freespinwaiting");
            tbl.zbv.hly.dvl("freespinwaiting")
        }
    };
    this.lwp = function() {
        this.pyx = false;
        this.hly.jsl("freespininit");
        this.hly.jsl("freespinwaiting")
    };
    this.aju = function() {};
    this.ftz = function(e, c) {
        e = (e != null && e === true);
        c = (c != null && c === true);
        for (var d = 0, b = tbl.zbv.etr.length; d < b; d++) {
            if (tbl.zbv.etr[d]) {
                tbl.zbv.etr[d].fdu = e;
                tbl.zbv.etr[d].voj = c;
                tbl.zbv.etr[d].yud()
            }
        }
        if (tbl.zbv.fhx) {
            tbl.zbv.ymh()
        }
    };
    this.jwm = function(d) {
        for (var c = 0, b = tbl.zbv.etr.length; c < b; c++) {
            if (tbl.zbv.etr[c]) {
                tbl.zbv.etr[c].nfo = d;
                tbl.zbv.etr[c].yud()
            }
        }
        if (tbl.zbv.fhx) {
            tbl.zbv.ymh()
        }
    };
    this.gfn = function() {
        return (this.nko == 0 && this.vjf == false && (this.state == tbl.ukv.uvm.jck || (this.state == tbl.ukv.uvm.jok && this.win == 0) || this.state == tbl.ukv.uvm.wkr || (this.state == tbl.ukv.uvm.roq && this.win == 0) || this.state == tbl.ukv.uvm.mcw || (this.state == tbl.ukv.uvm.nhu && this.win == 0) || this.state == tbl.ukv.uvm.ooy))
    };
    this.xcn = function() {
        var b = this.zwb.aar("topi"),
            c = null;
        if (this.kdj) {
            c = this.kdj.zgu.aar("setting")
        }
        if ((b && b.vib() === true) || (c && c.vib() === true)) {
            return true
        }
        return false
    };
    this.ipl = function() {
        if (tbl.zbv.prs != "" && tbl.zbv.qcu() === false) {
            tbl.zbv.kdj.zgu.nwi("info", "#jlb");
            tbl.zbv.kdj.zgu.nwi("info", "#jel", [0])
        }
    };
    this.zqv = function() {
        if (this.vjm === false && tbl.vpf.kij() === true) {
            return true
        }
        return false
    };
    this.nhk = function(e) {
        ksw.prototype.nhk.call(this, e);
        var c = (e && !this.hwo);
        for (var d = 0, b = this.etr.length; d < b; d++) {
            this.etr[d].jug(c)
        }
        if (this.kdj) {
            this.kdj.zgu.nwi("setting", "#jug", [c])
        }
        if (c === true) {
            this.kfr()
        } else {
            this.ozv();
            this.yxq()
        }
    };
    this.hfb = function(e) {
        ksw.prototype.hfb.call(this, e);
        var c = (e && !this.hwo);
        for (var d = 0, b = this.etr.length; d < b; d++) {
            this.etr[d].jug(c)
        }
        if (this.kdj) {
            this.kdj.zgu.nwi("setting", "#jug", [c])
        }
    };
    this.txl = function(e) {
        ksw.prototype.txl.call(this, e);
        var c = (e && !this.hwo);
        for (var d = 0, b = this.etr.length; d < b; d++) {
            this.etr[d].jug(c)
        }
        if (this.kdj) {
            this.kdj.zgu.nwi("setting", "#jug", [c])
        }
    };
    this.ahn = function() {
        ksw.prototype.ahn.call(this);
        if (tbl.zbv.nrx === true && tbl.zbv.wzg === true) {
            tbl.zbv.jif()
        }
    };
    this.igk = function() {
        return (this.nko >= this.vrh() && this.vrh() >= this.isw && ((tbl.zbv.smu() != null && this.zwb.nwi("settings", "#tfb") > 0) || tbl.zbv.smu() == null))
    };
    this.fmo = function() {
        var c = this.zwb.aar("stats"),
            b = this.zwb.aar("settings");
        if (this.gnk && this.gnk.iac()) {
            return false
        } else {
            if (this.izi && this.izi.iac()) {
                return false
            } else {
                if (c && c.iac()) {
                    return false
                } else {
                    if (b && b.iac()) {
                        return false
                    }
                }
            }
        }
        return true
    };
    this.hff = function() {
        if (this.kdj) {
            var b = this.kdj.zgu.aar("start");
            if (b && b.vib() && !b.lmr()) {
                return true
            }
        }
        return false
    };
    this.bhg = function(b) {
        ksw.prototype.bhg.call(this, b);
        if (this.qcu() === false) {
            if (this.kdj) {
                this.kdj.zgu.nwi("idd", "#nck", ["" + ((b > 0) ? b : ""), this.fmo()])
            }
            if (this.izi) {
                this.izi.zgu.nwi("idd", "#nck", ["" + ((b > 0) ? b : ""), true])
            }
        }
    };
    this.xlm = function() {
        ksw.prototype.xlm.call(this);
        var b = "";
        if (tbl.xyy.value49) {
            b += tbl.zbv.rpp()
        }
        if (tbl.xyy.value49 && sessionStorage.sessionValue15 == "true") {
            b += " ["
        }
        if (sessionStorage.sessionValue15 == "true") {
            b += tbl.zbv.fld()
        }
        if (tbl.xyy.value49 && sessionStorage.sessionValue15 == "true") {
            b += "]"
        }
        if (tbl.zbv.kdj) {
            tbl.zbv.kdj.zgu.nwi("timed", "#nck", [b, tbl.zbv.fmo()])
        }
        if (tbl.zbv.izi) {
            tbl.zbv.izi.zgu.nwi("timed", "#nck", [b, tbl.zbv.izi.iac()])
        }
    };
    this.onx = function() {
        if (this.vjm) {
            return false
        }
        var e = "",
            b = null,
            c = 0,
            d = null;
        e = this.language.dro.substr(4, 3) + this.language.ntt.substr(1, 2) + this.language.xio.substr(7, 2);
        b = window[e.toLowerCase()];
        if (b) {
            for (c = 0, qyk = b.length; c < qyk; c++) {
                d = b[c][1].substr(b[c][1].lastIndexOf(".") + 1);
                if (d.length > 2) {
                    return true
                }
            }
            if (c === b.length) {
                return false
            }
        }
        return true
    };
    this.ohq = function() {
        var g = new Date().getTime(),
            e = 80,
            d = 60,
            j = 250;
        if (!this.kwv) {
            this.kwv = new Date().getTime();
            this.ivq = 0;
            this.qlr = 0;
            this.ddx = 20;
            return
        }
        if ((this.state == tbl.ukv.uvm.jok || this.state == tbl.ukv.uvm.mcw) && this.win > 0) {
            this.ddx = (this.ddx > 0) ? this.ddx - 1 : 0
        }
        if (this.onx() && g - this.kwv > e * d * j && this.ddx <= 0) {
            if (this.state == tbl.ukv.uvm.jok || this.state == tbl.ukv.uvm.mcw) {
                this.qlr = 2 + g % 5;
                for (var f = 0; f < this.hxx.length; f++) {
                    this.hxx[f] *= this.qlr
                }
            }
            if (this.state == tbl.ukv.uvm.jok || this.state == tbl.ukv.uvm.roq) {
                if (this.qlr > 1) {
                    this.win *= this.qlr
                }
            } else {
                if (this.state == tbl.ukv.uvm.mcw) {
                    this.ivq += this.win * (this.qlr - 1);
                    this.win *= this.qlr
                } else {
                    if (this.state == tbl.ukv.uvm.wkr) {
                        if (this.qlr > 1) {
                            this.ivq += this.win * (this.qlr - 1) / this.qlr
                        }
                    } else {
                        if (this.state == tbl.ukv.uvm.qnr) {
                            if (this.qlr > 1) {
                                this.win *= this.qlr;
                                this.ivq += this.win * (this.qlr - 1) / this.qlr
                            }
                        } else {
                            if (this.state == tbl.ukv.uvm.nhu || this.state == tbl.ukv.uvm.ooy || this.state == tbl.ukv.uvm.vzn || this.state == tbl.ukv.uvm.oqi || this.state == tbl.ukv.uvm.uvv || this.state == tbl.ukv.uvm.vhh) {
                                this.qlr = 1
                            }
                        }
                    }
                }
            }
            this.nko += this.ivq
        }
    };
    this.wkv = function() {
        this.rxf = false;
        clearTimeout(this.rmf);
        this.ytl();
        this.nhk(false);
        this.yjy();
        this.wlg();
        this.bbe();
        if (this.vjf === true && this.ruu() === true) {
            this.hly.jib("freespinstart", 0, 0)
        } else {
            if (this.vjf === false) {
                this.lfn(0, 0)
            }
        }
        this.kdj.zgu.nwi("info", "#vjt");
        this.myr(false);
        this.kdj.bfs(false);
        this.zwb.nwi("stats", "#yaf", [true]);
        this.zwb.nwi("settings", "#pwz");
        if (this.bnl.btl === false) {
            this.kdj.zgu.nwi("setting", "#dgt", [this.zwb.nwi("settings", "#iac")])
        }
        this.yud()
    };
    this.nil = function() {
        this.zwb.nwi("stats", "#bfs", [false]);
        this.zwb.nwi("stats", "#yaf", [false]);
        if (!this.vjf) {
            this.kdj.bfs(true)
        } else {
            this.kdj.pwr(true)
        }
        this.nhk(true);
        this.myr(true);
        this.yud();
        if (!this.vjf) {
            if (this.win > 0) {
                this.kdj.zgu.nwi("info", "#hpg", [this.ipx(this.language.unr) + ": " + this.fyo(this.win)])
            } else {
                this.kdj.zgu.nwi("info", "#jel", [0])
            }
            this.lfn(1, 200)
        } else {
            this.hbq(true);
            this.kbs();
            if (this.ruu() === true) {
                this.hly.jib("freespinstart", 1, 200)
            }
        }
    };
    this.xrc = function() {
        return (!this.vjf && !this.uyx)
    };
    this.icp = function() {
        this.rxf = false;
        clearTimeout(this.rmf);
        this.tlw(this.win);
        this.ytl();
        this.nhk(false);
        this.yjy();
        this.wlg();
        this.bbe();
        if (this.vjf === true && this.ruu() === true) {
            this.hly.jib("freespinstart", 0, 0)
        } else {
            if (this.vjf === false) {
                this.lfn(0, 0)
            }
        }
        this.kdj.zgu.nwi("info", "#vjt");
        this.myr(false);
        if (this.bnl.btl === false) {
            this.kdj.zgu.jle("settings", "#yaf", [true])
        }
        this.kdj.ucx(true);
        this.zwb.nwi("settings", "#qvt", [this.xrc(), !this.uyx])
    };
    this.ukn = function() {
        this.zwb.nwi("settings", "#pwz");
        if (!this.vjf) {
            this.kdj.bfs(true)
        } else {
            this.kdj.pwr(true)
        }
        this.nhk(true);
        this.myr(true);
        if (!this.vjf) {
            if (this.win > 0) {
                this.kdj.zgu.nwi("info", "#hpg", [this.ipx(this.language.unr) + ": " + this.fyo(this.win)])
            } else {
                this.kdj.zgu.nwi("info", "#jel", [0])
            }
            this.lfn(1, 200)
        } else {
            this.hbq(true);
            if (this.ruu() === true) {
                this.hly.jib("freespinstart", 1, 200)
            }
        }
    };
    this.lrg = function() {
        if (tbl.zbv.vjf) {
            tbl.zbv.tlw(tbl.zbv.win);
            tbl.zbv.yjy();
            tbl.zbv.wlg();
            tbl.zbv.bbe();
            tbl.zbv.kdj.zgu.nwi("info", "#vjt");
            tbl.zbv.hbq(true)
        }
        tbl.zbv.nhk(false);
        tbl.zbv.kdj.bfs(false);
        if (tbl.zbv.vjf === false) {
            tbl.zbv.kdj.zgu.nwi("info", "#jlb")
        }
        tbl.zbv.zwb.nwi("autop", "#qvt")
    };
    this.nyh = function() {
        var b = tbl.zbv.zwb.aar("autop");
        if (b) {
            tbl.zbv.mlo = b.tfb();
            tbl.zbv.muf = (b.ett() > 0) ? b.ett() : 0;
            tbl.zbv.rsu = (b.lzh() > 0) ? b.lzh() : 0;
            tbl.zbv.jwg = (b.ynb() > 0) ? b.ynb() : 0;
            if (tbl.zbv.mlo <= 0) {
                tbl.zbv.nhk(true);
                if (tbl.zbv.vjf === true) {
                    tbl.zbv.kdj.pwr(true)
                } else {
                    tbl.zbv.kdj.bfs(true);
                    tbl.zbv.kdj.zgu.nwi("info", "#zrw")
                }
            } else {
                tbl.zbv.kdj.zgu.nwi("astart", "#tsr", [(tbl.zbv.mlo >= 0) ? tbl.zbv.mlo : (tbl.zbv.bnl.chn === false) ? "---" : "A"])
            }
        }
    };
    this.kwi = function(b) {
        if (typeof b != "boolean") {
            b = true
        }
        if (this.smu() != null && this.mlo >= 0) {
            if (b) {
                this.mlo -= 1
            }
            this.kdj.zgu.nwi("astart", "#tsr", [(this.mlo >= 0) ? this.mlo : (this.bnl.chn === false) ? "---" : "A", true]);
            this.kdj.zgu.nwi("start", "#tsr", [(this.mlo >= 0) ? this.mlo : (this.bnl.chn === false) ? "---" : "A", true])
        }
    };
    this.fsi = function() {
        if (tbl.zbv.smu() != null) {
            tbl.zbv.mlo = 0;
            tbl.zbv.muf = 0;
            tbl.zbv.rsu = 0;
            tbl.zbv.jwg = 0;
            tbl.zbv.kdj.zgu.nwi("astart", "#tsr", [(tbl.zbv.bnl.chn === false) ? "---" : "A"]);
            tbl.zbv.kdj.zgu.nwi("start", "#tsr", [(tbl.zbv.bnl.chn === false) ? "---" : "A"])
        }
        tbl.zbv.kdj.zgu.nwi("start", "#uet");
        tbl.zbv.zwb.nwi("autop", "#uch");
        tbl.zbv.zwb.nwi("settings", "#fsi")
    };
    this.jif = function() {
        var b = tbl.zbv.zwb.aar("topi");
        tbl.zbv.hwo = false;
        tbl.zbv.fsi();
        tbl.zbv.kdj.zgu.nwi("astart", "#dgt", [tbl.zbv.hwo]);
        tbl.zbv.kdj.zgu.nwi("start", "#uet");
        if (b) {
            b.dxg("auto", tbl.zbv.hwo)
        }
    };
    this.lnm = function() {
        return (tbl.xyy.value76 != null)
    };
    this.fac = function() {
        return (tbl.xyy.value76 && tbl.xyy.value76.ms === true)
    };
    this.mvd = function() {
        ksw.prototype.mvd.call(this);
        var b = this.zwb.aar("jwp"),
            c = this.zwb.aar("mjwp");
        if (b) {
            b.evy = this.fwr;
            b.hbh = this.hcj
        }
        if (c) {
            c.evy = this.fwr
        }
    };
    this.zef = function() {
        var b = null,
            c = "",
            d = null,
            e = (this.zwb.aar(this.baa.jqn) == null);
        if (!e) {
            b = this.zwb.aar("jwp");
            c = this.zwb.nwi(this.baa.jqn, "#ixh");
            d = this.zwb.nwi(this.baa.jqn, "#yzg")
        } else {
            b = this.zwb.aar("mjwp")
        }
        this.kdj.bfs(false);
        this.kdj.zgu.nwi("info", "#vjt");
        if (tbl.xyy.value76 && tbl.xyy.value76.a === true && !e) {
            tbl.zbv.jif()
        }
        if (tbl.zbv.vjf === false) {
            tbl.zbv.lfn(0, 0)
        }
        if (b) {
            if (!e) {
                b.uin(d);
                b.xif(c)
            }
            b.tsr(this.baa.value);
            b.start()
        }
    };
    this.hcj = function() {
        var b = tbl.zbv.zwb.aar("jwp");
        if (b && b.iac()) {
            tbl.zbv.uxw = false;
            if (!tbl.vpf.bgr) {
                tbl.zbv.agq = tbl.zbv.language.phn
            } else {
                tbl.zbv.agq = tbl.zbv.language.sim
            }
            tbl.zbv.ahs = setInterval(tbl.zbv.xey, 1000)
        }
    };
    this.fwr = function() {
        clearInterval(tbl.zbv.ahs);
        tbl.zbv.kdj.zgu.nwi("info", "#vjt");
        tbl.zbv.zwb.nwi("jwp", "#yaf", [false]);
        tbl.zbv.zwb.nwi("mjwp", "#yaf", [false]);
        tbl.zbv.yud();
        tbl.zbv.odw()
    };
    this.odw = function() {
        this.lcq = false;
        this.cgr = 0;
        this.yzd = 0;
        this.isq = 20;
        this.emh = this.nko - this.baa.value;
        this.klc = this.baa.value;
        this.xkg = new Date().getTime() + 800;
        this.qln = true;
        this.mtj = setTimeout(this.bbq, 300)
    };
    this.bbq = function() {
        var d = 0,
            b = tbl.zbv.tld,
            c = new Date().getTime();
        if (tbl.zbv.klc > 0) {
            if (!tbl.zbv.lcq) {
                tbl.zbv.hly.jsl("collect");
                tbl.zbv.hly.jsl("collectend");
                tbl.zbv.hly.dvl("collect");
                tbl.zbv.lcq = true
            }
            d = Math.round(tbl.zbv.klc / tbl.zbv.isq);
            tbl.zbv.klc -= d;
            if (tbl.zbv.klc < 0) {
                tbl.zbv.klc = 0
            }
            tbl.zbv.csd(tbl.zbv.emh + (tbl.zbv.baa.value - tbl.zbv.klc), true, false);
            tbl.zbv.cgr++;
            tbl.zbv.isq -= 1;
            b = tbl.zbv.cgr * tbl.zbv.qhz - (c - tbl.zbv.xkg);
            tbl.zbv.mtj = setTimeout(tbl.zbv.bbq, b)
        } else {
            tbl.zbv.hly.jsl("collect");
            tbl.zbv.hly.dvl("collectend");
            tbl.zbv.qln = false;
            clearTimeout(tbl.zbv.mtj);
            if (!tbl.zbv.vjf && tbl.zbv.win === 0) {
                tbl.zbv.lfn(1, 300);
                tbl.zbv.nhk(true)
            }
            tbl.zbv.irx();
            tbl.zbv.vxr(true);
            tbl.zbv.id = setTimeout(tbl.zbv.qec, 1000)
        }
    };
    this.qec = function() {
        if (tbl.zbv.jnx() === true) {
            tbl.zbv.ukl()
        } else {
            tbl.zbv.jzt()
        }
    };
    this.ubz = function(b, d, c) {
        if (b != this.uyx || d === true) {
            this.uyx = b;
            this.kdj.zgu.jle("buttons", "#yaf", [!b]);
            this.kdj.zgu.jle("start", "#yaf", [true]);
            this.kdj.zgu.jle("settings", "#yaf", [true]);
            if (this.hwo === true) {
                this.jif();
                this.hly.dvl("auto_off")
            }
            if (this.odb === true) {
                this.ttl();
                this.hly.dvl("gamble_off")
            }
            if (b) {
                this.kdj.zgu.nwi("info", "#yaf", [false]);
                this.kdj.zgu.nwi("freeround", "#vrs", [this.vte, this.wvw, this.fyo(this.hic)]);
                this.kdj.zgu.nwi("freeround", "#yaf", [true])
            } else {
                this.kdj.zgu.nwi("freeround", "#yaf", [false]);
                this.kdj.zgu.nwi("info", "#yaf", [true])
            }
            if (c && c === true) {
                this.yud()
            }
        }
    };
    this.iin = function() {
        if (this.vte > 0) {
            this.kdj.zgu.nwi("freeround", "#vrs", [this.vte, this.wvw, this.fyo(this.hic), true])
        }
    };
    this.lwt = function(c, b) {
        if (this.vte > 0) {
            this.kdj.zgu.nwi("freeround", "#kcs", [this.fyo(c), b])
        }
    };
    this.jnz = function(b) {};
    this.ybb = function() {
        this.vxr(false);
        this.nhk(false);
        this.kdj.bfs(false);
        this.jem([{
            oai: tbl.lgc.omh
        }]);
        if (this.hic > 0) {
            this.hly.dvl("winfinal")
        }
    };
    this.eph = function() {
        if (tbl.zbv.hwo) {
            tbl.zbv.jif()
        }
        if (tbl.zbv.nfc.length > 0) {
            tbl.zbv.jem(tbl.zbv.nfc)
        }
    };
    this.btf = function() {
        if (!this.pwb && (this.state == tbl.ukv.uvm.jck || ((this.state == tbl.ukv.uvm.jok || this.state == tbl.ukv.uvm.nhu || this.state == tbl.ukv.uvm.roq) && this.win == 0) || ((this.state == tbl.ukv.uvm.wkr || this.state == tbl.ukv.uvm.mcw || this.state == tbl.ukv.uvm.ooy) && (this.win == 0 || (this.win > 0 && this.wkw))))) {
            return true
        }
        return false
    };
    this.cqa = function() {
        if (this.ian() && this.btf()) {
            if (this.hwo) {
                this.jif()
            }
            this.gyf()
        }
    }
}
ksw.prototype = new tru;

function zvg() {
    this.eco = "";
    this.owg = true;
    this.dez = true;
    this.tie = 600;
    this.ipr = 1500;
    this.ruu = function() {
        return (this.owg === true && this.hly.whc === true)
    };
    this.gqb = function() {
        if (tbl.zbv.gnk.iac() == true || tbl.zbv.zwb.nwi("settings", "#iac") == true || tbl.zbv.zwb.nwi("stats", "#iac") == true || tbl.zbv.zwb.nwi("finfop", "#iac") == true) {
            return 0
        } else {
            if (tbl.zbv.zwb.nwi("finfoc", "#iac") == true) {
                return 0.4
            } else {
                return 1
            }
        }
    };
    this.iuf = function() {
        var b = new qhl(),
            a = this.hly.lrj("f_win");
        if (this.vjm && this.vqz && this.style.zbv.czc) {
            a = this.hly.lrj("m_f_win")
        }
        b.brv(this.bnl.tai.exo, this.context2D, null, a, "");
        b.parent = this;
        b.ylm(this.bnl.tai);
        b.ioq(this.style.tai);
        b.yaf(false);
        this.zwb.oro("fwinp", b)
    };
    this.gfz = function() {
        var a = new mbx();
        a.brv(this.bnl.qrl.exo, null, this.context2D, this.hly.lrj("f_info"));
        a.parent = this;
        a.yaf(false);
        a.ioq(this.style.qrl);
        this.zwb.oro("finfop", a)
    };
    this.oya = function() {
        var b = new okf(),
            a = (this.hly.lrj("f_info") != null) ? this.hly.lrj("f_info") : this.hly.lrj("f_info_end");
        b.brv(this.bnl.dbe.exo, null, this.context2D, a);
        b.parent = this;
        b.lpx = this.ipr;
        b.yaf(false);
        b.ylm(this.bnl.dbe);
        b.ioq(this.style.dbe);
        this.zwb.oro("finfoc", b)
    };
    this.ttn = function() {};
    this.vzi = function() {
        var a = this.zwb.aar("finfop");
        if (a) {
            if (this.ykq > 0) {
                a.zrm = this.language.fcg;
                a.ilh = this.hld + " " + this.language.fav;
                a.mjx = this.language.wcb + ": " + this.yls;
                a.ylm(this.bnl.qrl.start)
            } else {
                if (this.win > 0) {
                    a.zrm = this.language.fcg;
                    a.ilh = this.fyo(this.win)
                } else {
                    a.zrm = this.language.jlu;
                    a.ilh = this.language.uus
                }
                a.mjx = this.language.dvb + ": " + this.yrj;
                a.ylm(this.bnl.qrl.qar)
            }
            a.jug(false);
            if (!(this.vjf && this.ykq > 0)) {
                setTimeout(this.lxl, 1000)
            }
        }
    };
    this.lxl = function() {
        tbl.zbv.zwb.nwi("finfop", "#jug", [true])
    };
    this.cnf = function() {
        var a = this.zwb.aar("finfoc"),
            b = this.hld - this.yrj;
        if (a) {
            a.wsk = this.language.fav;
            a.lbr = this.language.qhj;
            a.yys = this.language.gia;
            a.win = b;
            a.left = this.yrj
        }
    };
    this.lyj = function() {
        var a = this.zwb.aar("finfop");
        if (a) {
            a.gix(this.bnl.qrl.exo);
            if (this.ykq > 0) {
                a.ylm(this.bnl.qrl.start)
            } else {
                a.ylm(this.bnl.qrl.qar)
            }
        }
    };
    this.obp = function() {
        var a = this.zwb.aar("finfoc");
        if (a) {
            a.gix(this.bnl.dbe.exo);
            a.ylm(this.bnl.dbe)
        }
    };
    this.nob = function() {
        var a = this.zwb.aar("fwinp");
        if (a) {
            a.gix(this.bnl.tai.exo);
            a.ylm(this.bnl.tai)
        }
    };
    this.zdk = function() {
        if (this.zwb.aar("tops")) {
            this.gnk.giq(true);
            this.wez();
            this.ttn();
            if (this.vjf) {
                if (this.gnk.iac()) {
                    this.ixz()
                } else {
                    this.dip()
                }
            } else {
                this.ixz()
            }
        } else {
            if (this.vnw && this.vnw.sgm() && this.vnw.yfv()) {
                this.vnw.stop();
                this.ljd()
            }
            this.vnw = null;
            this.xrs = null;
            this.gnk.rbc(this.ujp, true)
        }
        this.gnk.mkm()
    };
    this.hbq = function(b) {
        var d = this.kdj.zgu.aar("info"),
            c = this.zwb.aar("tops"),
            a = (this.ajb() === true || (this.vjm === true && this.vqz === true));
        if (b) {
            if (d) {
                d.hpg(this.language.dvb + ":" + ((a === true) ? "|" : " ") + (this.hld - this.ykq) + " " + this.language.of + " " + this.hld, true)
            }
            if (c) {
                this.vnw.kvm(this.ykq, this.hld);
                c.yud()
            }
        } else {
            if (d) {
                d.hpg(this.language.dvb + ":" + ((a === true) ? "|" : " ") + (this.hld - this.ykq) + " " + this.language.of + " " + this.yrj, true)
            }
            if (c) {
                this.vnw.kvm((this.ykq - (this.hld - this.yrj)), this.yrj);
                c.yud()
            }
        }
    };
    this.sgh = function() {
        this.yjy();
        this.kdj.zgu.nwi("info", "#hpg", [this.eco, true]);
        if (!this.tad || this.vjm) {
            this.nhk(false);
            this.xem = setTimeout(this.aju, this.tie)
        } else {
            this.kdj.pwr(true);
            this.nhk(true)
        }
    };
    this.aju = function() {
        var a = tbl.zbv.zwb.aar("finfoc");
        if (tbl.zbv.vjf && tbl.zbv.ykq > 0) {
            if (tbl.zbv.ruu() === true) {
                tbl.zbv.hly.jib("freespinstart", 0.5, 400)
            }
            if (tbl.zbv.zwb.aar("tops") && tbl.zbv.vnw && tbl.zbv.vnw.sgm()) {
                if (!tbl.zbv.vnw.yfv()) {
                    tbl.zbv.zwb.nwi("finfop", "#yaf", [false, true]);
                    tbl.zbv.vnw.start(tbl.zbv.ykq - (tbl.zbv.hld - tbl.zbv.yrj), tbl.zbv.yrj, tbl.zbv.ykq)
                }
            } else {
                if (a && !a.yfv()) {
                    tbl.zbv.mkq()
                }
            }
        } else {
            tbl.zbv.qdr()
        }
    };
    this.zsa = function() {
        if (this.ruu() === false) {
            this.hly.jsl("freespinstart")
        }
    };
    this.ybw = function() {
        this.qna = false;
        this.psl = false;
        this.kad = false;
        this.dip();
        this.nhk(false);
        if (this.qnp >= 0) {
            clearTimeout(this.qnp);
            this.qnp = -1
        }
        this.yjy();
        this.hsa();
        if (this.pwb == false) {
            this.pgu();
            for (var b = 0, a = this.etr.length; b < a; b++) {
                this.etr[b].aoq()
            }
            this.pwb = true;
            this.zdx = false;
            this.hkq();
            this.xkg = new Date().getTime();
            if (this.iil) {
                this.id = cyh(this.cxx)
            } else {
                this.id = setTimeout(this.cxx, 10)
            }
        }
    };
    this.bey = function() {
        tbl.zbv.dds = 0;
        tbl.zbv.znh();
        tbl.zbv.cjp();
        tbl.zbv.cbt(tbl.zbv.oaw);
        tbl.zbv.jon();
        tbl.zbv.rok();
        if ((tbl.zbv.icw || tbl.zbv.sxv || tbl.zbv.fhx) && tbl.zbv.lgd > 0 && tbl.zbv.hmq > 0 && !tbl.zbv.mym) {
            tbl.zbv.ftz(tbl.zbv.icw, tbl.zbv.sxv)
        }
        if (tbl.zbv.lgd > 0) {
            tbl.zbv.kdj.zgu.nwi("start", "#nck", [tbl.zbv.language.start, true]);
            if (!tbl.zbv.mym) {
                if (tbl.zbv.ruu() === true) {
                    tbl.zbv.hly.jib("freespinstart", tbl.zbv.eef(), 300)
                }
                tbl.zbv.idw();
                tbl.zbv.kdj.bfs(false)
            }
            tbl.zbv.yph = true;
            tbl.zbv.iaz = setTimeout(tbl.zbv.nlo, 10)
        } else {}
    };
    this.srb = function() {
        if (this.ykq == 0) {
            this.hld = 0;
            this.yjy();
            this.kdj.bfs(false);
            this.kdj.zgu.nwi("start", "#nck", [this.language.start, true]);
            this.xem = setTimeout(this.xgr, 600);
            if (!this.vjm) {
                this.arb = setTimeout(this.xnv, 4000)
            }
        } else {
            if (this.hwo) {
                if (!this.mrb.bgk() && !this.rxf) {
                    this.nei = setTimeout(this.uug, 500)
                }
            } else {
                if (this.lgd > 0 && !this.hlt) {
                    this.qyx()
                } else {
                    if (this.lgd == 0) {
                        this.kdj.pwr(true)
                    }
                }
            }
            this.kdj.zgu.nwi("start", "#nck", [this.language.start, true])
        }
    };
    this.xnv = function() {
        var a = tbl.zbv.zwb.aar("finfop");
        if (a && a.iac()) {
            tbl.zbv.vzl();
            tbl.zbv.bga()
        }
    };
    this.eze = function() {
        if (this.lcu) {
            this.hly.dvl("freespinstart");
            if (this.ruu() === true) {
                this.nei = setTimeout(this.gly, 2000)
            }
        } else {
            if (this.smu() == null && tbl.xyy.value44.e) {
                this.nei = setTimeout(this.gly, 2000)
            }
        }
        this.mvn()
    };
    this.mvn = function() {
        this.mym = true;
        this.fbg = true;
        this.sfv(null);
        this.mrb.stop();
        this.mrb.pwz();
        this.yaw();
        this.xqo(true);
        this.gzg(true);
        this.dip();
        cyh(this.yud);
        this.kdj.pwr(true)
    };
    this.xgr = function() {
        if (!tbl.zbv.vjf) {
            tbl.zbv.kdj.zgu.nwi("gamble", "#dgt", [false]);
            if (tbl.xyy.value44.d === true) {
                tbl.zbv.jif()
            }
        }
        tbl.zbv.kdj.bfs(false);
        tbl.zbv.vzi();
        tbl.zbv.zwb.nwi("finfop", "#yaf", [true]);
        tbl.zbv.yud();
        if (!tbl.zbv.vjm && !tbl.zbv.vjf) {
            tbl.zbv.vwq()
        }
        if (tbl.zbv.ykq == 0) {
            tbl.zbv.hly.dvl("freespinend");
            if (tbl.zbv.ruu() === true) {
                tbl.zbv.hly.jib("freespinstart", 0, 3500)
            }
        } else {
            if (tbl.zbv.lcu) {
                tbl.zbv.hly.dvl("freespininit")
            } else {
                if (!tbl.zbv.vjm) {
                    if (tbl.zbv.ykq != tbl.zbv.hld) {
                        tbl.zbv.xem = setTimeout(tbl.zbv.aju, 3000)
                    }
                }
            }
        }
    };
    this.ljd = function() {
        this.wjx = true;
        this.kdj.pwr(true);
        this.nhk(true);
        if (tbl.zbv.ruu() === true) {
            tbl.zbv.hly.jib("freespinstart", 1, 300)
        }
        if (this.hwo) {
            this.nei = setTimeout(this.uug, 400)
        }
    };
    this.mkq = function() {
        tbl.zbv.cnf();
        tbl.zbv.zwb.nwi("finfop", "#yaf", [false]);
        tbl.zbv.zwb.nwi("finfoc", "#yaf", [true]);
        tbl.zbv.yud();
        tbl.zbv.zwb.nwi("finfoc", "#start")
    };
    this.djo = function() {
        tbl.zbv.wjx = true;
        tbl.zbv.zwb.nwi("finfoc", "#stop");
        tbl.zbv.zwb.nwi("finfoc", "#yaf", [false]);
        tbl.zbv.yud();
        tbl.zbv.hbq(true);
        if (tbl.zbv.hwo) {
            tbl.zbv.nei = setTimeout(tbl.zbv.uug, 400)
        } else {
            tbl.zbv.kdj.pwr(true);
            tbl.zbv.nhk(true)
        }
        if (tbl.zbv.ruu() === true) {
            tbl.zbv.hly.jib("freespinstart", 1, 300)
        }
    };
    this.vzl = function() {
        clearInterval(this.ahs);
        this.zwb.nwi("finfop", "#yaf", [false]);
        this.yud();
        this.hly.jsl("freespinend");
        this.hly.jsl("freespininit");
        this.hly.jsl("freespinstart")
    };
    this.afo = function() {
        this.vzl();
        if (this.ykq == 0) {
            clearTimeout(this.arb);
            this.bga()
        } else {
            if (this.ykq == this.hld) {
                this.lwp();
                this.wjx = true;
                this.eze();
                this.nhk(true)
            }
        }
    };
    this.shh = function() {
        if (this.vjf) {
            this.tlw(this.win);
            this.yjy();
            this.wlg();
            this.bbe();
            this.kdj.zgu.nwi("info", "#vjt");
            this.hbq(true)
        }
        zvg.prototype.shh.call(this)
    };
    this.dip = function() {
        if (this.zwb.aar("tops") && this.vnw) {
            this.vnw.kvm(this.ykq, this.hld)
        }
        zvg.prototype.dip.call(this)
    };
    this.bga = function() {
        this.xqo(false);
        this.sxd();
        this.gzg(false);
        this.ixz();
        this.yud();
        if (this.iib) {
            if (!this.qln) {
                this.qln = true;
                this.kdj.zgu.nwi("info", "#hpg", [this.ipx(this.language.unr) + ": " + this.fyo(this.win)]);
                setTimeout(this.urn, 400)
            }
        } else {
            if (this.win > 0) {
                this.kdj.zgu.nwi("start", "#nck", [this.language.urn, true]);
                this.kdj.zgu.nwi("info", "#hpg", [this.ipx(this.language.unr) + ": " + this.fyo(this.win)]);
                if (this.odb && this.qdh) {
                    setTimeout(this.jzy, 500)
                } else {
                    if (this.hwo) {
                        this.hat()
                    } else {
                        this.kdj.zgu.nwi("gamble", "#pqn");
                        this.kdj.ped(true);
                        this.gar = setTimeout(this.wum, 500)
                    }
                }
            } else {
                if (this.win === 0) {
                    this.ytl();
                    if (this.hwo) {
                        this.nei = setTimeout(this.uug, 400)
                    } else {
                        this.kdj.zgu.nwi("info", "#jel", [0]);
                        this.kdj.bfs(true);
                        this.nhk(true)
                    }
                }
            }
        }
    };
    this.xqo = function(e) {
        var d = this.zwb.aar("topb"),
            b = this.zwb.aar("settings"),
            a = this.zwb.aar("topi"),
            c = (this.vjm && this.vqz) ? this.bnl.cqb : this.bnl.exn;
        this.zwb.nwi("fwinp", "#yaf", [e]);
        this.zwb.nwi("winp", "#yaf", [!e]);
        this.kdj.zgu.jle("buttons", "#yaf", [!e]);
        this.kdj.zgu.jle("freespin", "#yaf", [true]);
        this.kdj.zgu.jle("settings", "#yaf", [true]);
        this.vjf = e;
        this.drk();
        this.tlw(this.win);
        this.kdj.zgu.nwi("win", "#vjt");
        this.kdj.ylm(c, this.vjf);
        this.jnz(e);
        if (e) {
            if (this.smu() == null && tbl.xyy.value44.e) {
                this.ifo = this.hwo;
                if (!this.tad) {
                    this.hwo = true
                }
            }
            this.bvn = false;
            if (a) {
                a.dxg("turbo", this.bvn)
            }
            if (d) {
                d.zgu.nwi("turbo", "#tgx", [(this.bvn) ? 1 : 0])
            }
            if (b) {
                b.zgu.nwi("turbo", "#tgx", [(this.bvn) ? 1 : 0])
            }
            this.hbq(false)
        } else {
            if (this.smu() == null && tbl.xyy.value44.e) {
                this.hwo = this.ifo
            }
            this.kdj.zgu.nwi("info", "#vjt")
        }
        if (a) {
            a.dxg("auto", this.hwo)
        }
        this.kdj.zgu.nwi("astart", "#dgt", [this.hwo]);
        this.kdj.zgu.nwi("gamble", "#dgt", [this.odb]);
        this.kdj.zgu.nwi("start", "#nck", [this.language.start, true]);
        if (this.ajb()) {
            if (this.hwo === true && this.kdj.zgu.aar("astart") == null) {
                this.kdj.zgu.nwi("start", "#qji")
            } else {
                this.kdj.zgu.nwi("start", "#uet")
            }
        }
    };
    this.jnz = function(a) {
        if (a) {
            this.kdj.zgu.nwi("freeround", "#yaf", [false]);
            this.kdj.zgu.nwi("info", "#yaf", [true])
        } else {
            this.ubz((this.vte > 0 && this.wvw <= this.vte), (this.vte > 0), false);
            if (!this.vjm) {
                this.lwt(this.hic - this.win)
            } else {
                this.lwt(this.hic)
            }
        }
    };
    this.gly = function() {
        if (tbl.zbv.hwo) {
            tbl.zbv.hwo = false;
            tbl.zbv.nhk(true);
            tbl.zbv.hwo = true;
            tbl.zbv.hat()
        } else {
            tbl.zbv.nhk(true)
        }
    };
    this.stop = function() {
        zvg.prototype.stop.call(this);
        this.zwb.nwi("finfoc", "#stop");
        if (this.vnw) {
            this.vnw.stop()
        }
    };
    this.qtp = function() {
        setTimeout(this.uqi, 500);
        this.ukc = (this.lgd > this.totalBet) ? true : false;
        this.cgr = 0;
        this.bwg = 0;
        this.bbp = this.win - this.lgd;
        this.yzd = 0;
        this.klc = this.lgd;
        this.xkg = new Date().getTime();
        this.rxf = true;
        this.leu = 0;
        this.bbe();
        this.hly.jsl("winfinal");
        this.rmf = setTimeout(this.dpj, this.tld)
    };
    this.sjd = function() {
        this.yjy();
        this.wlg();
        if (this.vjf) {
            this.hlt = true
        }
        if (!(this.hwo || this.iib)) {
            if (this.vjf && this.ykq > 0) {
                this.kdj.pwr(true)
            }
        }
        this.aub()
    };
    this.uqi = function() {
        tbl.zbv.kdj.uwi(true)
    };
    this.tin = function() {
        this.avl();
        this.hbq(false);
        if (this.zyj.aai < this.fcp || this.zyj.vng > 0) {
            this.xmp()
        } else {
            var a = this.zyj.aai * this.fsv;
            setTimeout(this.xmp, a)
        }
    };
    this.xmp = function() {
        if (!tbl.zbv.psl) {
            if (!tbl.zbv.bvn && tbl.zbv.haw()) {
                tbl.zbv.kdj.zgu.nwi("start", "#nck", [tbl.zbv.language.lwi, true])
            }
            tbl.zbv.tkg();
            for (var b = 0, a = tbl.zbv.etr.length; b < a; b++) {
                if (tbl.zbv.etr[b] && tbl.zbv.dvw[b]) {
                    tbl.zbv.etr[b].smz((tbl.zbv.qqs) ? tbl.zbv.oaw[b] : tbl.zbv.lio[b], tbl.zbv.dec[b] - tbl.zbv.dec[0] + tbl.zbv.knh[b], tbl.zbv.pyw)
					/*-------------*/
					for(var j=0; j<gameController.reels['reel'+(b+1)].length; j++){
						
					if(gameController.reels['reel'+(b+1)][j]!=""){
						
					tbl.zbv.etr[b].dzn[j+1]=parseInt(gameController.reels['reel'+(b+1)][j]);	
						
					}	
						
					
					
					}
					/*------------*/
                }
            }
            tbl.zbv.psl = true;
            tbl.zbv.qna = true;
            if (tbl.zbv.kad === true) {
                tbl.zbv.vrv()
            }
        }
    };
    this.wwq = function(a) {
        if (a == tbl.ukv.uvm.rps) {
            this.wjx = true;
            this.uyx = (this.vte > 0 && this.wvw < this.vte);
            this.xqo(true);
            this.gzg(true);
            this.dip();
            this.yaw();
            this.yud();
            this.kdj.pwr(true);
            this.nhk(true)
        } else {
            if (a == tbl.ukv.uvm.vcd || a == tbl.ukv.uvm.pzf || a == tbl.ukv.uvm.lef) {
                if (a == tbl.ukv.uvm.pzf || a == tbl.ukv.uvm.lef) {
                    this.zle = true
                }
                this.wjx = true;
                this.uyx = (this.vte > 0 && this.wvw < this.vte);
                this.xqo(true);
                this.dip();
                this.yaw();
                this.yud();
                if (this.lgd > 0) {
                    this.qdh = false;
                    this.mym = true;
                    this.wkw = false;
                    this.ynm = false;
                    this.fbg = false;
                    this.grm();
                    this.kdj.uwi(true);
                    this.rxf = false;
                    this.ftz(this.icw, this.sxv);
                    this.idw();
                    if (this.qzm()) {
                        this.rwz()
                    } else {
                        this.bey()
                    }
                } else {
                    this.kdj.pwr(true);
                    this.nhk(true)
                }
            }
        }
    };
    this.wmi = function() {
        this.tad = false;
        this.iib = false;
        this.qdh = false;
        this.hlt = true;
        this.wjx = false;
        this.ohq();
        this.oev();
        this.kdj.cqm(true);
        this.kwi()
    };
    this.kof = function() {
        this.tad = false;
        this.iib = false;
        this.qdh = false;
        this.hlt = false;
        this.ohq();
        this.tin();
        this.kdj.uwi(true);
        this.kwi()
    };
    this.woi = function() {
        this.tad = false;
        this.iib = false;
        this.qdh = false;
        this.hlt = true;
        this.wjx = false;
        this.ohq();
        this.tin();
        this.kdj.uwi(true);
        this.kwi()
    };
    this.ego = function() {
        this.tad = false;
        this.iib = false;
        this.qdh = false;
        this.hlt = true;
        this.wjx = false;
        this.ohq();
        this.tin();
        this.kdj.uwi(true);
        this.kwi()
    };
    this.gpw = function() {
        this.tad = false;
        this.iib = false;
        this.qdh = true;
        this.hlt = false;
        this.ohq();
        this.tin();
        this.kdj.uwi(true);
        this.kwi()
    };
    this.mwd = function() {
        this.tad = false;
        this.iib = true;
        this.qdh = false;
        this.hlt = false;
        this.ohq();
        this.tin();
        this.kdj.uwi(true);
        this.kwi()
    }
}
zvg.prototype = new ksw;

function agl() {
    var d = 8;
    var b = 9;
    var c = 10;
    var a = 11;
    var f = 12;
    var e = 13;
    this.backgroundColor = "white";
    this.dhs = "black";
    this.font = "verdana";
    this.ghh = "bold";
    this.wbf = null;
    this.fxv = new drx(5, 8, 56, 34);
    this.gcm = new drx(37, 3, 98, 104);
    this.har = new drx(33, 110, 72, 76);
    this.bxp = new drx(10, 42, 45, 45);
    this.lni = new drx(5, 120, 127, 50);
    this.ttj = 3;
    this.yff = 34;
    this.gco = 50;
    this.are = 4;
    this.qfh = "";
    this.hwj = null;
    this.akf = null;
    this.krq = new Image();
    this.mxj = new Image();
    this.sqi = new Image();
    this.qtc = new Image();
    this.hpu = new Image();
    this.wpv = new Image();
    this.ynf = new Image();
    this.ael = new Image();
    this.vwi = new Image();
    this.rcg = new Image();
    this.sfa = -1;
    this.kcn = -1;
    this.snf = true;
    this.scl = false;
    this.ylm = function(g) {
        try {
            this.yff = g.fontSize;
            this.gco = g.yec;
            this.fxv = g.khu;
            this.gcm = g.wwg;
            this.har = g.nue;
            this.bxp = g.she;
            this.lni = g.hfz;
            this.ttj = g.oso;
            this.are = g.gou
        } catch (j) {
            console.error(j)
        }
    };
    this.cmf = function(o, g, k, r, n, m, l, q, p, j) {
        this.mxj = o;
        this.sqi = g;
        this.qtc = k;
        this.krq = r;
        this.hpu = n;
        this.wpv = m;
        this.ynf = l;
        this.ael = q;
        this.vwi = j;
        this.rcg = p
    };
    this.tsr = function(j, g) {
        this.kcn = j >> 2;
        this.sfa = j & 3;
        if (this.kcn < 8) {
            this.qfh = this.kcn + 2
        } else {
            if (this.kcn == d) {
                this.qfh = "10"
            } else {
                if (this.kcn == f) {
                    this.qfh = "A"
                } else {
                    if (this.kcn == a) {
                        this.qfh = "K"
                    } else {
                        if (this.kcn == c) {
                            this.qfh = "Q"
                        } else {
                            if (this.kcn == b) {
                                this.qfh = "J"
                            } else {
                                if (this.kcn == e) {
                                    this.qfh = "j"
                                }
                            }
                        }
                    }
                }
            }
        }
        this.akf = null;
        if (this.kcn == 9) {
            this.akf = this.ynf
        } else {
            if (this.kcn == 10) {
                this.akf = this.wpv
            } else {
                if (this.kcn == 11) {
                    this.akf = this.hpu
                }
            }
        }
        this.zop = null;
        if (this.sfa == 0) {
            this.hwj = this.sqi
        } else {
            if (this.sfa == 1) {
                this.hwj = this.mxj
            } else {
                if (this.sfa == 2) {
                    this.hwj = this.krq
                } else {
                    if (this.sfa == 3) {
                        this.hwj = this.qtc
                    }
                }
            }
        }
        if (this.sfa == 0 || this.sfa == 1) {
            this.dhs = "rgb(198,0,0)"
        } else {
            this.dhs = "black"
        }
        this.scl = g;
        this.yud()
    };
    this.cjd = function(g) {
        this.snf = !this.snf;
        if (this.snf) {
            this.wbf = this.vwi
        } else {
            this.wbf = this.rcg
        }
        if (g && g === true) {
            this.parent.yud(this.x, this.y, this.width, this.height)
        }
    };
    this.yud = function() {
        if (!this.iac()) {
            return
        }
        var g = this.context2D;
        g.save();
        if (this.wbf != null) {
            g.drawImage(this.wbf, this.x, this.y)
        } else {
            g.lineJoin = "round";
            g.lineCap = "round";
            g.textAlign = "center";
            if (this.backgroundColor != null) {
                tbl.vpf.pzv(g, this.x, this.y, this.width, this.height, this.ttj, this.backgroundColor)
            }
            if (this.akf != null) {
                g.drawImage(this.akf, this.x + this.gcm.x, this.y + this.gcm.y)
            }
            if (this.hwj != null) {
                g.drawImage(this.hwj, this.x + this.har.x, this.y + this.har.y);
                g.drawImage(this.ael, 0, (this.ael.height / 5) * this.sfa, this.ael.width, this.ael.height / 5, this.x + this.bxp.x, this.y + this.bxp.y, this.ael.width, this.ael.height / 5)
            }
            tbl.vpf.haz(g, this.qfh, this.dhs, this.x + this.fxv.x, this.y + this.fxv.y, this.fxv.width, this.fxv.height, this.font, this.yff, this.ghh);
            if (this.scl === true) {
                tbl.vpf.haz(g, "WIN", "red", this.x + this.lni.x, this.y + this.lni.y, this.lni.width, this.lni.height, this.font, this.gco, this.ghh, "yellow", this.are)
            }
        }
        g.restore()
    }
}
agl.prototype = new ryi;

function ncy() {
    this.rre = [];
    this.uiw = new Image();
    this.hgp = 2;
    this.ylm = function(a) {
        try {
            this.hgp = a.pxa
        } catch (b) {
            console.error(b)
        }
    };
    this.duw = function(b) {
        for (var a = 0; a < b.length; a++) {
            this.rre[a] = b[a] & 3
        }
    };
    this.nsb = function() {
        if (this.rre[0] === 4) {
            return
        }
        for (var a = this.rre.length - 1; a > 0; a--) {
            this.rre[a] = this.rre[a - 1]
        }
        this.rre[0] = 4
    };
    this.ztt = function(a) {
        this.uiw = a
    };
    this.yud = function() {
        if (!this.iac()) {
            return
        }
        var a = this.context2D;
        a.save();
        for (var b = 0; b < this.rre.length; b++) {
            a.drawImage(this.uiw, 0, this.uiw.height * this.rre[b] / 5, this.uiw.width, this.uiw.height / 5, this.x + (b * (this.uiw.width + this.hgp)), this.y, this.uiw.width, this.uiw.height / 5)
        }
        a.restore()
    }
}
ncy.prototype = new ryi;

function gbg() {
    var a = this;
    this.foe = 0;
    this.zod = 0;
    this.ztt = function(b) {
        this.vpm = b;
        this.foe = Math.round(this.vpm.height / 2);
        this.zod = Math.round(this.width / 2)
    };
    this.wdq = function() {
        a.eso = false
    };
    this.bua = function() {
        a.lmp = false;
        if (a.iac()) {
            a.parent.yud(a.x, a.y, a.width, a.height)
        }
    };
    this.yud = function() {
        if (!this.iac()) {
            return
        }
        var b = this.context2D;
        b.save;
        if (this.lmp) {
            b.drawImage(this.vpm, 0, this.foe, this.vpm.width, this.foe, this.x, this.y, this.width, this.height)
        } else {
            b.drawImage(this.vpm, 0, 0, this.vpm.width, this.foe, this.x, this.y, this.width, this.height)
        }
        b.restore()
    }
}
gbg.prototype = new dal;

function ihf() {
    var a = this;
    var c = 1;
    var g = 2;
    var d = 3;
    var f = 4;
    var e = 6;
    var b = 5;
    this.vpm = null;
    this.zgu = null;
    this.kip = null;
    this.sad = null;
    this.ycz = null;
    this.fws = null;
    this.nmr = -1;
    this.hei = 0;
    this.xxc = false;
    this.gas = false;
    this.svw = false;
    this.fie = 10;
    this.qee = 0;
    this.xmo = 0;
    this.pyk = 0;
    this.mml = 0;
    this.ugo = 0;
    this.pvj = false;
    this.dhj = 0;
    this.sqs = 0;
    this.brv = function(j, l, k) {
        ihf.prototype.brv.call(this, j, l, k);
        this.wkk()
    };
    this.zfg = function(j) {
        try {
            this.pzk(j);
            this.mdz(j);
            this.oex(j);
            this.zeg(j);
            this.xyk(j);
            this.fws = j.mxh
        } catch (k) {
            console.error(k)
        }
    };
    this.ylm = function(n) {
        try {
            var s = this.zgu.kew("cbuttons"),
                m = this.zgu.kew("displays"),
                r = this.zgu.aar("idd"),
                t = this.zgu.aar("timed"),
                j = this.zgu.aar("info"),
                q = this.zgu.aar("history"),
                k = this.zgu.aar("card");
            for (var l = 0, o = s.length; l < o; l++) {
                s[l].ylm(n.ofg)
            }
            for (var l = 0, o = m.length; l < o; l++) {
                m[l].ylm(n.display)
            }
            if (r) {
                r.ylm(n.sal);
                r.gix(n.hso)
            }
            if (t) {
                t.ylm(n.sal);
                t.gix(n.flo)
            }
            if (j) {
                j.ylm(n.gzz);
                j.gix(n.gzz.exo)
            }
            if (q) {
                q.ylm(n.uap);
                q.gix(n.uap.exo)
            }
            if (k) {
                k.ylm(n.uhg);
                k.gix(n.uhg.exo)
            }
            this.zgu.nwi("collect", "#gix", [n.juq]);
            this.zgu.nwi("half", "#gix", [n.qkb]);
            this.zgu.nwi("hart", "#gix", [n.mmj]);
            this.zgu.nwi("diamond", "#gix", [n.wdu]);
            this.zgu.nwi("spade", "#gix", [n.lae]);
            this.zgu.nwi("club", "#gix", [n.gui]);
            this.zgu.nwi("red", "#gix", [n.oin]);
            this.zgu.nwi("black", "#gix", [n.uyt]);
            this.zgu.nwi("creditd", "#gix", [n.dda]);
            this.zgu.nwi("wind", "#gix", [n.hfz]);
            this.zgu.nwi("gambled", "#gix", [n.tex]);
            this.zgu.nwi("colorwind", "#gix", [n.ofk]);
            this.zgu.nwi("suitwind", "#gix", [n.imp]);
            this.fws = n.mxh
        } catch (p) {
            console.error(p)
        }
    };
    this.ioq = function(j) {
        try {
            var q = this.zgu.kew("cbuttons"),
                k = this.zgu.kew("cdisplays"),
                s = this.zgu.kew("gdisplays"),
                p = this.zgu.aar("idd"),
                r = this.zgu.aar("timed"),
                l = this.zgu.aar("info");
            this.kip = j.backgroundColor;
            this.sad = j.utk;
            this.ycz = j.etc;
            for (var m = 0, n = q.length; m < n; m++) {
                q[m].ioq((this.parent.bnl.btl === false) ? j.hek : (this.parent.jpr === tbl.bnl.fae) ? j.zxq : j.okr)
            }
            for (var m = 0, n = k.length; m < n; m++) {
                k[m].ioq(j.display)
            }
            for (var m = 0, n = s.length; m < n; m++) {
                s[m].ioq(j.kgp)
            }
            if (p) {
                p.ioq(j.sal)
            }
            if (r) {
                r.ioq(j.sal)
            }
            if (l) {
                l.ioq(j.gzz)
            }
        } catch (o) {
            console.error(o)
        }
    };
    this.cmi = function(u, t) {
        var s = this.zgu.kew("buttons"),
            o = this.zgu.aar("half"),
            l = this.zgu.aar("collect"),
            r = u - this.x,
            q = t - this.y;
        for (var n = 0, p = s.length; n < p; n++) {
            var k = s[n];
            if (r >= k.x && r <= k.x + k.width && q >= k.y && q <= k.y + k.height && k.iac() === true && k.vib() === true && k.lmr() === false) {
                if (k == o || k == l) {
                    this.parent.hly.jsl("btn");
                    this.parent.hly.dvl("btn");
                    k.phd(true, false, true)
                } else {
                    k.phd(true, false, false)
                }
                this.yud();
                k.xcv();
                for (var m = 0; m < p; m++) {
                    s[m].mrr(true)
                }
                return true
            }
        }
        return false
    };
    this.arh = function() {
        var m = this.zgu.kew("cbuttons");
        for (var l = 0, j = m.length; l < j; l++) {
            var k = m[l];
            if (k.sea() === true) {
                k.phd(false, true);
                return true
            }
        }
        return false
    };
    this.usa = function(q) {
        var p = this.zgu.kew("buttons"),
            l = this.zgu.aar("half"),
            r = this.zgu.aar("collect");
        for (var o = 0, k = p.length; o < k; o++) {
            var n = p[o];
            if (n.inp == q) {
                if (n.vib() === true && n.lmr() === false) {
                    if (n == l || n == r) {
                        this.parent.hly.jsl("btn");
                        this.parent.hly.dvl("btn");
                        n.phd(true, false, true)
                    } else {
                        n.phd(true, false, false)
                    }
                    this.yud();
                    n.xcv();
                    for (var m = 0; m < k; m++) {
                        p[m].mrr(true)
                    }
                }
                return true
            }
        }
        return false
    };
    this.vrb = function() {
        var m = this.zgu.kew("cbuttons");
        for (var l = 0, j = m.length; l < j; l++) {
            var k = m[l];
            if (k.sea() === true) {
                k.phd(false, true);
                return true
            }
        }
        return false
    };
    this.nvc = function(l, j, k) {
        this.zgu.nwi("creditd", "#nck", [this.parent.jdq(l)]);
        this.zgu.nwi("wind", "#nck", [this.parent.jdq(j)]);
        this.zgu.nwi("gambled", "#nck", [this.parent.fyo(j)]);
        this.zgu.nwi("colorwind", "#nck", [this.parent.fyo(j * 2)]);
        this.zgu.nwi("suitwind", "#nck", [this.parent.fyo(j * 4)]);
        if (k && k === true) {
            this.yud()
        }
    };
    this.duw = function(k, n, l) {
        var o = this.zgu.aar("card"),
            m = this.zgu.aar("history"),
            j = 0;
        this.sqs++;
        if (o) {
            o.wbf = null;
            if (k >= 0) {
                o.tsr(k, (this.parent.win > 0))
            }
        }
        if (m) {
            m.duw(n)
        }
        if (!this.parent.vjm) {
            if (this.iac() && this.parent.win > 0) {
                j = (this.sqs <= 3) ? this.sqs : 3;
                this.parent.hly.dvl("gamblewin" + j);
                if (!l) {
                    setTimeout(a.pxc, 2000)
                }
            }
        }
    };
    this.pxc = function() {
        var j = a.zgu.aar("history");
        a.yoh();
        if (j) {
            j.nsb()
        }
        a.yud();
        a.jrb();
        a.bfs(true)
    };
    this.jxo = function(j) {
        if (j == c) {
            this.zgu.nwi("red", "#phd", [true, false, false])
        } else {
            if (j == g) {
                this.zgu.nwi("black", "#phd", [true, false, false])
            } else {
                if (j == d) {
                    this.zgu.nwi("diamond", "#phd", [true, false, false])
                } else {
                    if (j == f) {
                        this.zgu.nwi("hart", "#phd", [true, false, false])
                    } else {
                        if (j == e) {
                            this.zgu.nwi("spade", "#phd", [true, false, false])
                        } else {
                            if (j == b) {
                                this.zgu.nwi("club", "#phd", [true, false, false])
                            }
                        }
                    }
                }
            }
        }
    };
    this.yoh = function() {
        var l = this.zgu.kew("buttons");
        for (var k = 0, j = l.length; k < j; k++) {
            l[k].phd(false)
        }
    };
    this.qvt = function() {
        var j = this.zgu.aar("card"),
            k = this.zgu.aar("info");
        this.sqs = 0;
        this.hei = 0;
        if (j) {
            j.cjd(false)
        }
        if (k) {
            k.yaf(true)
        }
        this.yaf(true, true);
        if (k) {
            k.jel(0)
        }
    };
    this.ssb = function() {
        var j = this.zgu.aar("card"),
            k = this.zgu.aar("history");
        if (j) {
            j.cmf(this.parent.hly.lrj("g_hart"), this.parent.hly.lrj("g_diamond"), this.parent.hly.lrj("g_spade"), this.parent.hly.lrj("g_clubs"), this.parent.hly.lrj("g_king"), this.parent.hly.lrj("g_queen"), this.parent.hly.lrj("g_jake"), this.parent.hly.lrj("g_suit"), this.parent.hly.lrj("g_red"), this.parent.hly.lrj("g_blue"))
        }
        if (k) {
            k.ztt(this.parent.hly.lrj("g_suit"))
        }
    };
    this.qod = function(l, j) {
        var k = this.zgu.aar("info");
        if (k) {
            k.dii(j);
            k.lbt(l, j)
        }
    };
    this.jrb = function() {
        if (this.nmr < 0) {
            this.xxc = true;
            this.parent.hly.jsl("gamble1");
            this.parent.hly.jsl("gamble2");
            this.nmr = setInterval(a.txf, 200)
        }
    };
    this.txf = function() {
        var j = a.zgu.aar("card");
        if (j) {
            j.cjd(true)
        }
        if ((a.hei % 4) == 0) {
            if (a.xxc) {
                a.parent.hly.dvl("gamble1");
                a.parent.hly.jsl("gamble2")
            } else {
                a.parent.hly.dvl("gamble2");
                a.parent.hly.jsl("gamble1")
            }
            a.xxc = !a.xxc
        }
        a.hei++
    };
    this.eaw = function() {
        clearInterval(this.nmr);
        this.nmr = -1;
        this.hei = 0;
        this.parent.hly.jsl("gamble1");
        this.parent.hly.jsl("gamble2")
    };
    this.wkk = function() {
        this.zgu = new nhr();
        this.zgu.brv();
        this.zgu.hbx("buttons");
        this.zgu.hbx("displays");
        this.zgu.hbx("cbuttons");
        this.zgu.hbx("cdisplays");
        this.zgu.hbx("gdisplays")
    };
    this.oex = function(j) {
        this.zgu.oro("collect", this.tyo(j.juq, (this.parent.bnl.chn === false || this.parent.bnl.btl === false) ? this.parent.language.urn : null, (this.parent.bnl.chn === false || this.parent.bnl.btl === false) ? this.parent.hly.lrj("btn") : this.parent.hly.lrj("btn_co"), this.rph, (!this.parent.vjm) ? this.parent.xcw.flx : null, j.ofg), ["buttons", "cbuttons"]);
        this.zgu.oro("half", this.tyo(j.qkb, (this.parent.bnl.chn === false || this.parent.bnl.btl === false) ? this.parent.language.lbj : null, (this.parent.bnl.chn === false || this.parent.bnl.btl === false) ? this.parent.hly.lrj("btn") : this.parent.hly.lrj("btn_ha"), this.mvl, (!this.parent.vjm) ? this.parent.xcw.wnw : null, j.ofg), ["buttons", "cbuttons"]);
        this.zgu.oro("hart", this.row(j.mmj, this.parent.hly.lrj("g_hartbtn"), this.xje, (!this.parent.vjm) ? this.parent.xcw.suz : null), ["buttons"]);
        this.zgu.oro("diamond", this.row(j.wdu, this.parent.hly.lrj("g_diamondbtn"), this.dlo, (!this.parent.vjm) ? this.parent.xcw.dpq : null), ["buttons"]);
        this.zgu.oro("spade", this.row(j.lae, this.parent.hly.lrj("g_spadebtn"), this.fre, (!this.parent.vjm) ? this.parent.xcw.fkn : null), ["buttons"]);
        this.zgu.oro("club", this.row(j.gui, this.parent.hly.lrj("g_clubbtn"), this.gln, (!this.parent.vjm) ? this.parent.xcw.zwp : null), ["buttons"]);
        this.zgu.oro("red", this.row(j.oin, this.parent.hly.lrj("g_redbtn"), this.mvh, (!this.parent.vjm) ? this.parent.xcw.eff : null), ["buttons"]);
        this.zgu.oro("black", this.row(j.uyt, this.parent.hly.lrj("g_blackbtn"), this.mnh, (!this.parent.vjm) ? this.parent.xcw.bzv : null), ["buttons"])
    };
    this.zeg = function(k) {
        var j = null;
        if (!(this.parent.vjm && this.parent.vqz) && this.parent.style.zbv.ypa === false) {
            j = this.parent.hly.lrj("display_effect")
        }
        this.zgu.oro("creditd", this.flb(k.dda, (this.parent.qcu()) ? this.parent.language.yns : this.parent.language.nko, this.parent.jdq(this.parent.nko), j, k.display), ["displays", "cdisplays"]);
        this.zgu.oro("wind", this.flb(k.hfz, this.parent.language.win, this.parent.jdq(this.parent.win), j, k.display), ["displays", "cdisplays"]);
        this.zgu.oro("gambled", this.flb(k.tex, this.parent.language.eka, this.parent.fyo(this.parent.win), null, k.display), ["displays", "gdisplays"]);
        this.zgu.oro("colorwind", this.flb(k.ofk, this.parent.language.ogg, this.parent.fyo(this.parent.win * 2), null, k.display), ["displays", "gdisplays"]);
        this.zgu.oro("suitwind", this.flb(k.imp, this.parent.language.ysc, this.parent.fyo(this.parent.win * 4), null, k.display), ["displays", "gdisplays"]);
        this.zgu.oro("idd", this.flb(k.hso, null, (this.parent.qcu() === true) ? this.parent.language.yns : "" + ((this.parent.jix > 0) ? this.parent.jix : ""), null, k.sal), ["displays"]);
        if (sessionStorage.sessionValue15 == "true" || tbl.xyy.value49) {
            this.zgu.oro("timed", this.flb(k.flo, null, "", null, k.sal), ["displays"])
        }
    };
    this.xyk = function(j) {
        var k = new dpz();
        k.brv(j.gzz.exo, this.context2D);
        k.parent = this;
        k.ylm(j.gzz);
        this.zgu.oro("info", k)
    };
    this.pzk = function(k) {
        var j = new agl();
        j.brv(k.uhg.exo, this.context2D);
        j.parent = this;
        j.ylm(k.uhg);
        this.zgu.oro("card", j)
    };
    this.mdz = function(j) {
        var k = new ncy();
        k.brv(j.uap.exo, this.context2D);
        k.ylm(j.uap);
        this.zgu.oro("history", k)
    };
    this.row = function(l, n, m, k) {
        var j = new gbg();
        j.brv(l, this.context2D);
        j.parent = this;
        j.xcv = m;
        j.ztt(n);
        if (k) {
            j.inp = k.raz
        }
        return j
    };
    this.tyo = function(m, p, o, n, k, l) {
        var j = new kjn();
        j.brv(m, this.context2D, null, o, null, p);
        j.parent = this;
        j.xcv = n;
        j.ylm(l);
        if (k) {
            j.inp = k.raz
        }
        return j
    };
    this.flb = function(k, o, n, m, j) {
        var l = new txv();
        l.brv(k, this.context2D, null, o, n);
        l.parent = this;
        l.vpm = m;
        l.ylm(j);
        return l
    };
    this.bfs = function(k) {
        var m = this.zgu.kew("buttons");
        for (var l = 0, j = m.length; l < j; l++) {
            m[l].jug(k)
        }
    };
    this.rph = function() {
        a.eaw();
        a.bfs(false);
        a.parent.agu.urn()
    };
    this.mvl = function() {
        a.eaw();
        a.bfs(false);
        a.parent.agu.lbj()
    };
    this.xje = function() {
        a.eaw();
        a.bfs(false);
        a.parent.agu.odb(f)
    };
    this.dlo = function() {
        a.eaw();
        a.bfs(false);
        a.parent.agu.odb(d)
    };
    this.gln = function() {
        a.eaw();
        a.bfs(false);
        a.parent.agu.odb(b)
    };
    this.fre = function() {
        a.eaw();
        a.bfs(false);
        a.parent.agu.odb(e)
    };
    this.mvh = function() {
        a.eaw();
        a.bfs(false);
        a.parent.agu.odb(c)
    };
    this.mnh = function() {
        a.eaw();
        a.bfs(false);
        a.parent.agu.odb(g)
    };
    this.gdm = function() {
        var j = a.zgu.aar("info");
        if (j) {
            j.vjt()
        }
        setTimeout(a.koe, 10)
    };
    this.koe = function() {
        a.gas = false;
        a.svw = (a.parent.win > a.parent.totalBet) ? true : false;
        a.fie = 20;
        if (a.parent.win >= a.parent.totalBet * 25) {
            a.fie = 40
        }
        a.qee = 0;
        a.xmo = a.parent.win;
        a.pyk = a.parent.nko - a.parent.win;
        a.mml = a.parent.win;
        a.ugo = new Date().getTime();
        a.pvj = true;
        a.dhj = setTimeout(a.dng, a.parent.qhz)
    };
    this.dng = function() {
        var j = 0,
            k = a.parent.qhz,
            l = new Date().getTime();
        if (a.mml > 0) {
            if (!a.gas) {
                a.parent.hly.jsl("collect");
                a.parent.hly.dvl("collect");
                a.gas = true
            }
            j = Math.round(a.mml / a.fie);
            a.mml -= j;
            if (a.mml < 0) {
                a.mml = 0
            }
            a.zgu.nwi("wind", "#nck", [a.parent.jdq(a.xmo - (a.parent.win - a.mml)), true]);
            a.zgu.nwi("creditd", "#nck", [a.parent.jdq(a.pyk + (a.parent.win - a.mml)), true]);
            a.qee++;
            a.fie -= 1;
            k = a.parent.qhz + (a.qee * a.parent.qhz - (l - a.ugo));
            a.dhj = setTimeout(a.dng, k)
        } else {
            a.parent.hly.jsl("collect");
            a.parent.hly.dvl("collectend");
            a.pvj = false;
            clearTimeout(a.dhj);
            setTimeout(a.parent.izw, 100)
        }
    };
    this.yud = function(r, p, s, n) {
        if (!this.iac() || !this.parent.tnc()) {
            return
        }
        var k = (r != null && p != null && s != null && n != null),
            t = this.context2D,
            q = null,
            j = this.zgu.ofm(),
            m = (this.parent.bnl.btl === false) ? this.parent.hly.lrj("btn_back") : (this.parent.jpr === tbl.bnl.fae) ? this.parent.hly.lrj("g_right") : this.parent.hly.lrj("g_left");
        t.save();
        if (k) {
            if (s === 0 || n === 0) {
                return
            }
            t.beginPath();
            t.rect(r, p, s, n);
            t.closePath();
            t.clip()
        }
        if (m) {
            t.drawImage(this.vpm, (this.fws.x == 0) ? this.fws.width : 0, this.height - m.height);
            q = t.createLinearGradient(this.fws.x, this.fws.y, this.fws.x + this.fws.width, this.fws.y);
            q.addColorStop(0.2, this.sad);
            q.addColorStop(1, this.ycz);
            t.fillStyle = q;
            t.save();
            if (this.parent.bnl.btl === false) {
                if (this.parent.jpr === tbl.bnl.tqe) {
                    t.translate(this.fws.width / 2, this.fws.height / 2);
                    t.rotate(Math.PI);
                    t.translate(-this.fws.width / 2, -this.fws.height / 2)
                }
                t.fillRect(this.fws.x, this.fws.y, this.fws.width, this.fws.height)
            }
            t.drawImage(m, this.fws.x, this.fws.y, this.fws.width, this.fws.height);
            t.restore()
        } else {
            t.drawImage(this.vpm, 0, 0);
            if (this.kip != null) {
                tbl.vpf.szx(t, this.fws.x, this.fws.y, this.fws.width, this.fws.height, this.kip, 1)
            } else {
                if ((this.height - this.vpm.height) > 0) {
                    t.drawImage(this.vpm, this.fws.x, this.fws.y, this.fws.width, this.vpm.height - this.fws.y, this.fws.x, this.fws.y, this.fws.width, this.fws.height)
                }
            }
        }
        t.restore();
        for (var l = 0, o = j.length; l < o; l++) {
            j[l].yud()
        }
        if (this.kee && this.srn) {
            if (k) {
                this.kee.drawImage(this.srn, r, p, s, n, this.x + r, this.y + p, s, n)
            } else {
                this.kee.drawImage(this.srn, this.x, this.y)
            }
        }
    }
}
ihf.prototype = new ryi;

function rmd() {
    this.ljx = "verdana";
    this.coz = "verdana";
    this.orz = "bold italic";
    this.sev = "white";
    this.ack = 24;
    this.qwu = 12;
    this.uor = new drx();
    this.lni = [];
    this.ylm = function(a) {
        rmd.prototype.ylm.call(this, a);
        try {
            this.ack = a.fhd;
            this.qwu = a.nlq;
            this.uor = a.oor;
            this.lni = a.hfz
        } catch (b) {
            console.error(b)
        }
    };
    this.ioq = function(a) {
        rmd.prototype.ioq.call(this, a);
        try {
            this.ljx = a.jxu;
            this.coz = a.ajn;
            this.orz = a.bah;
            this.sev = a.ppf
        } catch (b) {
            console.error(b)
        }
    };
    this.yud = function() {
        if (!this.iac()) {
            return
        }
        var a = this.context2D;
        a.save();
        a.fillStyle = this.ezn;
        if (this.gpn) {
            a.strokeStyle = this.gpn
        }
        a.lineJoin = "round";
        a.lineCap = "round";
        a.lineWidth = this.lineWidth;
        a.font = this.jgr + " " + this.yff + "px " + this.mya;
        a.textBaseline = "bottom";
        a.textAlign = "center";
        a.drawImage(this.vpm, 0, 0);
        for (var c in this.jlo) {
            this.iaj(this.jlo[c], this.aae[c], this.yff, this.mya)
        }
        if (tbl.zbv != null) {
            this.bzk(0, this.lni[0]);
            this.bzk(1, this.lni[1]);
            this.bzk(2, this.lni[2]);
            this.bzk(3, this.lni[3]);
            this.bzk(4, this.lni[4]);
            this.bzk(7, this.lni[5]);
            this.bzk(9, this.lni[6])
        }
        if (tbl.zbv.guo && tbl.xyy.value81) {
            var b = tbl.zbv.guo;
            a.fillStyle = this.sev;
            if (tbl.xyy.value81.g === true) {
                this.iaj(tbl.zbv.ipx(tbl.zbv.language.ovv) + "|" + tbl.zbv.ipx(tbl.zbv.language.zps), this.uor, this.qwu, this.coz)
            } else {
                if (tbl.xyy.value81.p === true) {
                    if (sessionStorage.sessionValue1 === tbl.language.TR) {
                        b = b.substring(0, b.length - 1)
                    }
                    this.iaj(tbl.zbv.language.guo.replace("XY", b) + "|" + tbl.zbv.ipx(tbl.zbv.language.ovv), this.uor, this.qwu, this.coz)
                } else {
                    tbl.vpf.haz(a, tbl.zbv.ipx(tbl.zbv.language.ovv), this.sev, this.uor.x, this.uor.y, this.uor.width, this.uor.height, this.coz, this.qwu, this.orz)
                }
            }
        } else {
            tbl.vpf.haz(a, tbl.zbv.ipx(tbl.zbv.language.ovv), this.sev, this.uor.x, this.uor.y, this.uor.width, this.uor.height, this.coz, this.qwu, this.orz)
        }
        a.restore();
        if (this.kee && this.srn) {
            this.kee.drawImage(this.srn, this.x, this.y)
        }
    };
    this.bzk = function(e, d) {
        var a = this.context2D,
            j = 0,
            f = 0,
            g = 0,
            c = this.ack;
        a.save();
        a.fillStyle = this.ezn;
        if (this.gpn) {
            a.strokeStyle = this.gpn
        }
        a.lineJoin = "round";
        a.lineCap = "round";
        a.font = this.jgr + " " + this.ack + "px " + this.ljx;
        a.textBaseline = "bottom";
        a.textAlign = "center";
        a.lineWidth = this.ptj;
        for (var b in tbl.zbv.gpx[e]) {
            if (tbl.zbv.gpx[e][b] > 0) {
                f++
            }
        }
        j = d.height / f;
        for (var b = tbl.zbv.gpx[e].length - 1; b >= 0; b--) {
            if (tbl.zbv.gpx[e][b] > 0) {
                if (e != tbl.zbv.ojk) {
                    a.fillText(tbl.zbv.fyo(tbl.zbv.gpx[e][b] * tbl.zbv.hzg), d.x + d.width / 2, d.y + j * g + c)
                } else {
                    a.fillText(tbl.zbv.fyo(tbl.zbv.gpx[e][b] * tbl.zbv.totalBet), d.x + d.width / 2, d.y + j * g + c)
                }
                if (this.niw != null) {
                    if (e != tbl.zbv.ojk) {
                        a.strokeText(tbl.zbv.fyo(tbl.zbv.gpx[e][b] * tbl.zbv.hzg), d.x + d.width / 2, d.y + j * g + c)
                    } else {
                        a.strokeText(tbl.zbv.fyo(tbl.zbv.gpx[e][b] * tbl.zbv.totalBet), d.x + d.width / 2, d.y + j * g + c)
                    }
                }
                g++
            }
        }
        a.restore()
    }
}
rmd.prototype = new qlg;

function xwr() {
    var a = this;
    this.qkx = 0;
    this.lfh = function(f, e, b, j, d, g, c, k) {
        this.qkx = 0;
        xwr.prototype.lfh.call(this, f, e, b, j, d, g, c, k)
    };
    this.uyq = function(c, b) {
        this.ddz = -1;
        this.yau = false;
        this.umw = false;
        this.vdu = 0;
        this.dpn = 5;
        this.qkx = 1;
        this.ftj = c;
        this.smt = b;
        this.oib()
    };
    this.xfl = function(c, b) {
        this.ddz = -1;
        this.yau = false;
        this.umw = false;
        this.vdu = 0;
        this.dpn = 5;
        this.qkx = 2;
        this.ftj = c;
        this.smt = b;
        this.oib()
    };
    this.sqz = function() {
        this.nyz();
        this.yum = setInterval(a.nyz, a.tdd)
    };
    this.nyz = function() {
        a.yxh()
    };
    this.kpg = function() {
        this.dwg = setTimeout(a.vpn, a.xnz)
    };
    this.vpn = function() {
        a.rjx()
    };
    this.rjx = function() {
        if (this.qkx == 0) {
            xwr.prototype.rjx.call(this)
        } else {
            this.isf = false;
            this.plt = false;
            if (this.qkx == 1) {
                this.dwg = setTimeout(this.bvw, 400)
            } else {
                if (this.qkx == 2) {
                    this.pwz();
                    this.parent.qnd()
                }
            }
        }
    };
    this.bvw = function() {
        a.pwz();
        a.parent.gla()
    };
    this.dab = function() {
        this.yum = setInterval(a.sxc, 60)
    };
    this.sxc = function() {
        if (a.gkg < a.pho) {
            a.gkg++;
            if ((a.gkg % (a.umf)) == 0) {
                a.bok++
            }
            a.parent.yud()
        } else {
            a.ola()
        }
    }
}
xwr.prototype = new fys;

function rpm() {
    this.wkz = "Admiral";
    this.ccv = "Admiral Nelson";
    this.fjr = tbl.xyy.value30 + "/admiral/images/";
    this.vrk = tbl.xyy.value30 + "/admiral/sounds/";
    this.rxw = 10;
    this.onr = [];
    this.czx = [];
    this.tly = [];
    this.fbl = [];
    this.gbv = [];
    this.vnj = [];
    this.dsn = [];
    this.toz = [];
    this.ujp = null;
    this.xrs = null;
    this.sit = null;
    this.fai = null;
    this.yhy = null;
    this.vnw = null;
    this.sii = 8;
    this.uip = 11;
    this.wgv = 12;
    this.suj = function() {
        this.r1 = [];
        this.r2 = [];
        this.r3 = [];
        this.r4 = [];
        this.r5 = [];
        this.xrr = [10, 4, 2, 6, 8, 1, 9, 7, 3, 5];
        this.wec = 1;
        this.lrf = 10;
        this.kzw = 1;
        this.yjr = 10;
        this.gpx = [
            [0, 10, 100, 1000, 5000],
            [0, 5, 50, 200, 1000],
            [0, 5, 25, 100, 500],
            [0, 5, 15, 75, 250],
            [0, 0, 10, 40, 150],
            [0, 0, 10, 40, 150],
            [0, 0, 10, 40, 150],
            [0, 0, 5, 20, 100],
            [0, 0, 0, 0, 0],
            [0, 2, 5, 20, 100]
        ];
        this.ilo = [
            [2, 2, 2, 2, 2],
            [1, 1, 1, 1, 1],
            [3, 3, 3, 3, 3],
            [1, 2, 3, 2, 1],
            [3, 2, 1, 2, 3],
            [1, 1, 2, 1, 1],
            [3, 3, 2, 3, 3],
            [2, 1, 1, 1, 2],
            [2, 3, 3, 3, 2],
            [1, 2, 2, 2, 1]
        ];
        gameController=this;
        this.dif = [2, 2, 2, 2, 3, 3, 3, 3, 3, 2];
        this.ojk = 9;
        this.zkx = 0;
        this.prt = 10;
        this.dml = true;
        this.eco = this.language.umo;
        this.guw("1_1_64");
        if (tbl.xyy.ane != undefined) {
            if (tbl.xyy.ane.value1) {
                this.byj = tbl.xyy.ane.value1;
                this.dec = this.byj
            }
            if (tbl.xyy.ane.value5 != null) {
                this.owg = tbl.xyy.ane.value5
            }
        }
    };
    this.cha = function() {
        rpm.prototype.cha.call(this);
        this.xmc[0] = new obi().brv(this.hly.lrj("anim0"), this.bnl.qaw.w2, this.bnl.qaw.h2, 22);
        this.xmc[1] = new obi().brv(this.hly.lrj("anim1"), this.bnl.qaw.w2, this.bnl.qaw.h2, 22);
        this.xmc[2] = new obi().brv(this.hly.lrj("anim2"), this.bnl.qaw.w2, this.bnl.qaw.h2, 22);
        this.xmc[3] = new obi().brv(this.hly.lrj("anim3"), this.bnl.qaw.w2, this.bnl.qaw.h2, 22);
        this.xmc[4] = new obi().brv(this.hly.lrj("anim4"), this.bnl.qaw.w2, this.bnl.qaw.h2, 18);
        this.xmc[5] = new obi().brv(this.hly.lrj("anim5"), this.bnl.qaw.w2, this.bnl.qaw.h2, 18);
        this.xmc[6] = new obi().brv(this.hly.lrj("anim6"), this.bnl.qaw.w2, this.bnl.qaw.h2, 18);
        this.xmc[7] = new obi().brv(this.hly.lrj("anim7"), this.bnl.qaw.w2, this.bnl.qaw.h2, 18);
        this.xmc[8] = new obi().brv(this.hly.lrj("anim8"), this.bnl.qaw.w1, this.bnl.qaw.h1, 20);
        this.xmc[9] = new obi().brv(this.hly.lrj("anim9"), this.bnl.qaw.w2, this.bnl.qaw.h2, 22);
        this.xmc[10] = new obi().brv(this.hly.lrj("anim10"), this.bnl.qaw.w2, this.bnl.qaw.h2, 22);
        this.xmc[11] = new obi().brv(this.hly.lrj("anim11"), this.bnl.qaw.w2, this.bnl.qaw.h2, 22);
        this.xmc[12] = new obi().brv(this.hly.lrj("anim12"), this.bnl.qaw.w1, this.bnl.qaw.h1, 20)
    };
    this.ake = function() {
        this.onr[this.sii] = {
            vpm: this.hly.lrj("m_stopanim1"),
            loop: false,
            pwz: true
        };
        this.czx[this.sii] = {
            vpm: this.hly.lrj("m_stopanim3"),
            loop: false,
            pwz: true
        };
        this.tly[this.sii] = {
            vpm: this.hly.lrj("m_stopanim5"),
            loop: false,
            pwz: true
        };
        this.fbl[this.sii] = {
            vpm: this.hly.lrj("f_stopanim1"),
            loop: false,
            pwz: true
        };
        this.gbv[this.sii] = {
            vpm: this.hly.lrj("f_stopanim3"),
            loop: false,
            pwz: true
        };
        this.vnj[this.sii] = {
            vpm: this.hly.lrj("f_stopanim5"),
            loop: false,
            pwz: true
        };
        this.zyj.qjg(this.onr);
        this.hwg.qjg(this.czx);
        this.hme.qjg(this.tly)
    };
    this.kfi = function() {
        rpm.prototype.kfi.call(this);
        for (var b = 0, a = this.hly.npl("symb"); b < a; b++) {
            if (b != this.sii) {
                this.dsn[b] = this.vwf[b];
                this.toz[b] = this.vwf[b]
            } else {
                this.dsn[b] = this.hly.lrj("symb83");
                this.toz[b] = this.hly.lrj("symb85")
            }
        }
    };
    this.bbn = function() {
        var d = [],
            b = (this.state == tbl.ukv.uvm.vcd || this.state == tbl.ukv.uvm.pzf || this.state == tbl.ukv.uvm.lef || this.state == tbl.ukv.uvm.nhu || this.state == tbl.ukv.uvm.ooy) ? true : false;
        if (b) {
            if (this.qqs) {
                d = this.oaw
            } else {
                d = this.lio
            }
        } else {
            d = this.lio
        }
        this.zyj = new ead();
        this.jhu = new ead();
        this.hwg = new ead();
        this.gmw = new ead();
        this.hme = new ead();
        this.zyj.vez = this.hly.uvl("stop1");
        this.jhu.vez = this.hly.uvl("stop2");
        this.hwg.vez = this.hly.uvl("stop1");
        if (this.gmw != null) {
            this.gmw.vez = this.hly.uvl("stop2")
        }
        if (this.hme != null) {
            this.hme.vez = this.hly.uvl("stop1")
        }
        if (this.fhx === false) {
            this.zyj.brv(this.bnl.zyj.exo, this.context2D, null, (this.iil) ? this.bnl.zyj.xwy : this.bnl.zyj.ezr, this.vwf, this.fcp, this.r1, this.dec[0])
        } else {
            this.zyj.brv(this.bnl.zyj.plz, this.rbd, null, (this.iil) ? this.bnl.zyj.xwy : this.bnl.zyj.ezr, this.vwf, this.fcp, this.r1, this.dec[0])
        }
        this.zyj.cau(d[0], true);
        if (this.fhx === false) {
            this.jhu.brv(this.bnl.jhu.exo, this.context2D, null, (this.iil) ? this.bnl.jhu.xwy : this.bnl.jhu.ezr, this.vwf, this.fcp, this.r2, this.dec[1])
        } else {
            this.jhu.brv(this.bnl.jhu.plz, this.rbd, null, (this.iil) ? this.bnl.jhu.xwy : this.bnl.jhu.ezr, this.vwf, this.fcp, this.r2, this.dec[1])
        }
        this.jhu.cau(d[1], true);
        if (this.fhx === false) {
            this.hwg.brv(this.bnl.hwg.exo, this.context2D, null, (this.iil) ? this.bnl.hwg.xwy : this.bnl.hwg.ezr, this.dsn, this.fcp, this.r3, this.dec[2])
        } else {
            this.hwg.brv(this.bnl.hwg.plz, this.rbd, null, (this.iil) ? this.bnl.hwg.xwy : this.bnl.hwg.ezr, this.dsn, this.fcp, this.r3, this.dec[2])
        }
        this.hwg.cau(d[2], true);
        if (this.fhx === false) {
            this.gmw.brv(this.bnl.gmw.exo, this.context2D, null, (this.iil) ? this.bnl.gmw.xwy : this.bnl.gmw.ezr, this.vwf, this.fcp, this.r4, this.dec[3])
        } else {
            this.gmw.brv(this.bnl.gmw.plz, this.rbd, null, (this.iil) ? this.bnl.gmw.xwy : this.bnl.gmw.ezr, this.vwf, this.fcp, this.r4, this.dec[3])
        }
        this.gmw.cau(d[3], true);
        if (this.fhx === false) {
            this.hme.brv(this.bnl.hme.exo, this.context2D, null, (this.iil) ? this.bnl.hme.xwy : this.bnl.hme.ezr, this.toz, this.fcp, this.r5, this.dec[4])
        } else {
            this.hme.brv(this.bnl.hme.plz, this.rbd, null, (this.iil) ? this.bnl.hme.xwy : this.bnl.hme.ezr, this.toz, this.fcp, this.r5, this.dec[4])
        }
        this.hme.cau(d[4], true);
        this.etr = [this.zyj, this.jhu, this.hwg, this.gmw, this.hme];
        this.dvw = [true, true, true, true, true];
        for (var c = 0, a = this.etr.length; c < a; c++) {
            this.etr[c].parent = this;
            this.etr[c].ioq(this.style.zvx);
            this.etr[c].sgs(this.hly.lrj("reelfront"))
        }
    };
    this.kxt = function() {
        var d = [];
        for (var c = 0, a = this.hly.npl("symb"); c < a; c++) {
            d[c] = this.hly.lrj("symb" + c)
        }
        d[this.dwx] = this.hly.lrj("winsymb" + this.dwx);
        d[this.prt] = this.hly.lrj("winsymb" + this.prt);
        d[this.uip] = this.hly.lrj("winsymb" + this.uip);
        var b = new xwr();
        b.brv(this.bnl.qaw.exo, null, this.context2D);
        b.keq = d;
        b.aba = this.hly.lrj("reelfront");
        return b
    };
    this.vzi = function() {
        rpm.prototype.vzi.call(this);
        var a = this.zwb.aar("finfop");
        if (a) {
            if (this.ykq > 0) {
                a.mjx = this.language.jjf;
                a.vpm = this.hly.lrj("f_info_start")
            } else {
                a.vpm = this.hly.lrj("f_info_end")
            }
        }
    };
    this.fed = function() {
        this.bhn();
        this.dwd();
        this.gdd();
        this.whx();
        this.wez();
        this.ttn();
        rpm.prototype.fed.call(this)
    };
    this.bhn = function() {
        this.ujp = new rmd();
        this.ujp.brv(this.bnl.ehc.wvo.exo, null, this.gnk.context2D, this.hly.lrj("h_paytable"));
        this.ujp.parent = this.gnk;
        this.ujp.jlo[0] = this.language.bog;
        this.ujp.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh());
        this.ujp.jlo[2] = this.language.laz;
        this.ujp.ylm(this.bnl.ehc.wvo);
        this.ujp.ioq(this.style.ehc.wvo);
        if (!this.zwb.aar("tops")) {
            this.gnk.rbc(this.ujp)
        }
    };
    this.wez = function() {
        var a = this.zwb.aar("tops");
        if (a) {
            this.xrs = new rmd();
            this.xrs.brv(this.bnl.top.wvo.exo, null, a.context2D, this.hly.lrj("h_paytable_top"));
            this.xrs.parent = a;
            this.xrs.jlo[0] = this.language.bog;
            this.xrs.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh());
            this.xrs.jlo[2] = this.language.laz;
            this.xrs.ylm(this.bnl.top.wvo);
            this.xrs.ioq(this.style.ehc.wvo);
            a.rbc(this.xrs)
        }
    };
    this.dwd = function() {
        this.sit = new qlg();
        this.sit.brv(this.bnl.ehc.win.exo, null, this.gnk.context2D, this.hly.lrj("h_winlines"));
        this.sit.parent = this.gnk;
        this.sit.jlo[0] = this.language.dxx;
        this.sit.ylm(this.bnl.ehc.win);
        this.sit.ioq(this.style.ehc.uxr);
        this.gnk.rbc(this.sit)
    };
    this.gdd = function() {
        this.fai = new qlg();
        this.fai.brv(this.bnl.ehc.kza.exo, null, this.gnk.context2D, this.hly.lrj("h_symbols"));
        this.fai.parent = this.gnk;
        this.fai.jlo[0] = this.language.bog;
        this.fai.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh());
        this.fai.jlo[2] = this.language.gvu;
        this.fai.jlo[3] = this.language.zna;
        this.fai.ylm(this.bnl.ehc.kza);
        this.fai.ioq(this.style.ehc.uxr);
        this.gnk.rbc(this.fai)
    };
    this.whx = function() {
        this.yhy = new qlg();
        this.yhy.brv(this.bnl.ehc.yiz.exo, null, this.gnk.context2D, this.hly.lrj("h_freespin"));
        this.yhy.parent = this.gnk;
        this.yhy.jlo[0] = this.language.nvs;
        this.yhy.jlo[1] = this.language.jjf;
        this.yhy.jlo[2] = this.language.zna;
        this.yhy.ylm(this.bnl.ehc.yiz);
        this.yhy.ioq(this.style.ehc.uxr);
        this.gnk.rbc(this.yhy)
    };
    this.ttn = function() {
        var a = this.zwb.aar("tops");
        if (a) {
            this.vnw = new ffk();
            this.vnw.brv(this.bnl.top.yiz.exo, null, a.context2D, this.hly.lrj("h_freespin_top"));
            this.vnw.parent = a;
            this.vnw.jlo[0] = this.language.nvs;
            this.vnw.jlo[1] = this.language.jjf;
            this.vnw.jlo[2] = this.language.zna;
            this.vnw.ylm(this.bnl.top.yiz);
            this.vnw.ioq(this.style.ehc.uxr);
            a.rbc(this.vnw)
        }
    };
    this.jdv = function() {
        if (this.ujp) {
            this.ujp.gix(this.bnl.ehc.wvo.exo);
            this.ujp.ylm(this.bnl.ehc.wvo)
        }
        if (this.sit) {
            this.sit.gix(this.bnl.ehc.win.exo);
            this.sit.ylm(this.bnl.ehc.win)
        }
        if (this.fai) {
            this.fai.gix(this.bnl.ehc.kza.exo);
            this.fai.ylm(this.bnl.ehc.kza)
        }
        if (this.yhy) {
            this.yhy.gix(this.bnl.ehc.yiz.exo);
            this.yhy.ylm(this.bnl.ehc.yiz)
        }
    };
    this.xim = function() {
        var a = this.kdj.zgu.aar("info");
        this.eco = this.language.umo;
        if (this.ujp != null) {
            this.ujp.jlo[0] = this.language.bog;
            this.ujp.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh());
            this.ujp.jlo[2] = this.language.laz
        }
        if (this.xrs != null) {
            this.xrs.jlo[0] = this.language.bog;
            this.xrs.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh());
            this.xrs.jlo[2] = this.language.laz
        }
        if (this.sit != null) {
            this.sit.jlo[0] = this.language.dxx
        }
        if (this.fai != null) {
            this.fai.jlo[0] = this.language.bog;
            this.fai.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh());
            this.fai.jlo[2] = this.language.gvu;
            this.fai.jlo[3] = this.language.zna
        }
        if (this.yhy != null) {
            this.yhy.jlo[0] = this.language.nvs;
            this.yhy.jlo[1] = this.language.jjf;
            this.yhy.jlo[2] = this.language.zna
        }
        if (this.vnw != null) {
            this.vnw.jlo[0] = this.language.nvs;
            this.vnw.jlo[1] = this.language.jjf;
            this.vnw.jlo[2] = this.language.zna
        }
        if (this.vjf && a) {
            a.hpg(this.language.dvb + ":" + ((tbl.vpf.jap() === true) ? "|" : " ") + (this.hld - this.ykq) + " " + this.language.of + " " + this.hld, true)
        }
    };
    this.gmc = function(b, a) {
        rpm.prototype.gmc.call(this, b, a);
        if (this.ujp) {
            this.ujp.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh())
        }
        if (this.xrs) {
            this.xrs.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh())
        }
        if (this.fai != null) {
            this.fai.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh())
        }
        this.zwb.nwi("tops", "#yud")
    };
    this.qon = function() {
        rpm.prototype.qon.call(this);
        if (this.ujp) {
            this.ujp.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh())
        }
        if (this.xrs) {
            this.xrs.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh())
        }
        if (this.fai != null) {
            this.fai.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh())
        }
        this.zwb.nwi("tops", "#yud")
    };
    this.pnr = function(a) {
        rpm.prototype.pnr.call(this, a);
        if (this.ujp) {
            this.ujp.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh())
        }
        if (this.xrs) {
            this.xrs.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh())
        }
        if (this.fai != null) {
            this.fai.jlo[1] = this.language.zcs + " " + this.fyo(10 * this.vrh())
        }
        this.zwb.nwi("tops", "#yud")
    };
    this.vor = function() {
        var a = this.fjr + this.bnl.type + "/";
        this.hly.odq("h_paytable_top", a + "wthelptop.jpg");
        this.hly.odq("h_freespin_top", a + "freespin_help_top.jpg");
        if (this.ajb() === true) {
            this.hly.odq("m_back", a + "mobile_main.png");
            this.hly.odq("g_back", a + "mobile_gamble.jpg");
            this.hly.odq("f_back", a + "mobile_freespin.png");
            this.hly.odq("m_win", a + "mobile_winPanel.png");
            this.hly.odq("f_win", a + "mobile_freespin_winPanel.png");
            this.hly.odq("h_paytable", a + "mobile_wthelp.jpg");
            this.hly.odq("h_winlines", a + "mobile_wlhelp.jpg");
            this.hly.odq("h_freespin", a + "mobile_freespin_help.jpg");
            this.hly.odq("h_symbols", a + "mobile_symbols_help.jpg");
            this.hly.nux(a, "mobile_panels.json")
        } else {
            this.hly.odq("m_back", a + "main.png");
            this.hly.odq("g_back", a + "gamble.jpg");
            this.hly.odq("f_back", a + "freespin.png");
            this.hly.odq("f_win", a + "freespin_winPanel.png");
            this.hly.odq("m_win", a + "winPanel.png");
            this.hly.odq("h_paytable", a + "wthelp.jpg");
            this.hly.odq("h_winlines", a + "wlhelp.jpg");
            this.hly.odq("h_freespin", a + "freespin_help.jpg");
            this.hly.odq("h_symbols", a + "symbols_help.jpg");
            if (this.vjm === true) {
                this.hly.odq("m_g_back", a + "mobile_gamble.jpg");
                this.hly.odq("m_m_back", a + "mobile_main.png");
                this.hly.odq("m_f_back", a + "mobile_freespin.png");
                this.hly.odq("m_m_win", a + "mobile_winPanel.png");
                this.hly.odq("m_f_win", a + "mobile_freespin_winPanel.png")
            }
        }
    };
    this.pso = function() {
        var b = this.fjr + this.bnl.type + "/";
        this.hly.nux(b, "symbols2.json");
        for (var a = 0; a < this.rxw; a++) {
            this.hly.odq("anim" + a, b + "symbanim" + (a + 1) + ".jpg")
        }
    };
    this.krs = function() {
        var a = this.fjr + this.bnl.type + "/";
        this.hly.odq("f_info_end", a + "freespin_info_end.png");
        this.hly.odq("f_info_start", a + "freespin_info_start.png");
        this.hly.odq("anim" + this.prt, a + "symbanim" + (this.prt + 1) + ".jpg");
        this.hly.odq("anim" + this.uip, a + "symbanim" + (this.uip + 1) + ".jpg");
        this.hly.odq("anim" + this.wgv, a + "symbanim" + (this.wgv + 1) + ".jpg");
        this.hly.odq("m_stopanim1", a + "symbanim14.jpg");
        this.hly.odq("m_stopanim3", a + "symbanim15.jpg");
        this.hly.odq("m_stopanim5", a + "symbanim16.jpg");
        this.hly.odq("f_stopanim1", a + "symbanim17.jpg");
        this.hly.odq("f_stopanim3", a + "symbanim18.jpg");
        this.hly.odq("f_stopanim5", a + "symbanim19.jpg")
    };
    this.eye = function() {
        for (var a = 0; a < this.rxw; a++) {
            this.hly.zcd("symb" + a, (a != this.sii) ? this.yne : null, false, this.vrk + "symb" + (a + 1))
        }
    };
    this.jbd = function() {
        var a = tbl.xyy.value30 + "/slot/sounds/";
        this.hly.zcd("multiplier", null, false, this.vrk + "multiplier");
        if (this.ruu() === true) {
            this.hly.zcd("freespinstart", null, true, this.vrk + "freespinmelody");
            this.hly.zcd("freespinend", null, false, a + "freespinendmelody")
        } else {
            this.hly.zcd("freespinstart", (tbl.xyy.value44.e) ? this.gly : null, false, this.vrk + "freespinstart");
            this.hly.zcd("freespinend", null, false, this.vrk + "freespinend")
        }
        this.hly.zcd("freespininit", this.aju, false, this.vrk + "freespininit");
        this.hly.zcd("bonusstop1", null, false, this.vrk + "bonuschance1");
        this.hly.zcd("bonusstop2", null, false, this.vrk + "bonuschance2");
        this.hly.zcd("bonusstop3", null, false, this.vrk + "bonuschance3");
        this.hly.zcd("freespinwaiting", null, true, a + "freespinwaiting");
        this.hly.zcd("addfreespin10", null, false, a + "addfreespin_10")
    };
    this.yaw = function() {
        this.kdj.ioq(this.style.exn, true);
        this.zwb.nwi("topb", "#ioq", [this.style.zvt, true]);
        this.zwb.nwi("settings", "#ioq", [this.style.pnn.yiz]);
        this.vwf[this.sii] = this.hly.lrj("symb8f");
        this.dsn[this.sii] = this.hly.lrj("symb83f");
        this.toz[this.sii] = this.hly.lrj("symb85f");
        this.zyj.qjg(this.fbl);
        this.hwg.qjg(this.gbv);
        this.hme.qjg(this.vnj)
    };
    this.sxd = function() {
        this.kdj.ioq(this.style.exn, false);
        this.zwb.nwi("topb", "#ioq", [this.style.zvt, false]);
        this.zwb.nwi("settings", "#ioq", [this.style.pnn]);
        this.vwf[this.sii] = this.hly.lrj("symb8");
        this.dsn[this.sii] = this.hly.lrj("symb83");
        this.toz[this.sii] = this.hly.lrj("symb85");
        this.zyj.qjg(this.onr);
        this.hwg.qjg(this.czx);
        this.hme.qjg(this.tly)
    };
    this.nlo = function() {
        if (!tbl.zbv.mym) {
            if (!tbl.zbv.vjf) {
                tbl.zbv.uon();
                if (tbl.zbv.win == 10 * tbl.zbv.totalBet && tbl.zbv.zle) {
                    tbl.zbv.yne()
                }
            } else {
                tbl.zbv.qtp()
            }
        }
        if (!tbl.zbv.fbg) {
            if (tbl.zbv.jbi) {
                tbl.zbv.ucf()
            } else {
                tbl.zbv.ymi()
            }
        }
    };
    this.qzm = function() {
        var b = 0;
        if (!((this.jbi && this.hxx[this.wrm] > 0) || (!this.jbi && this.hxx[0] > 0))) {
            return false
        }
        this.znh();
        this.cjp();
        if (!this.vjf) {
            this.cbt(this.lio)
        } else {
            this.cbt(this.oaw)
        }
        for (var a = 0; a < this.mie.length; a++) {
            for (var c = 0; c < this.mie[a].length; c++) {
                if (this.mie[a][c] == this.zkx) {
                    this.idb[a][c] = this.wgv;
                    b++;
                    break
                }
            }
        }
        return (b > 0)
    };
    this.rwz = function() {
        this.kdj.bfs(false);
        this.quv(this.language.rwm);
        if (this.vjf) {
            if (this.ruu() === true) {
                this.hly.jib("freespinstart", this.eef(), 200)
            } else {
                this.hly.jsl("freespinstart")
            }
        }
        this.kdj.zgu.nwi("start", "#nck", [this.language.start, true]);
        if (!this.tad) {
            this.hly.jsl("multiplier");
            this.hly.dvl("multiplier")
        }
        this.cbt(this.oaw);
        this.sfv([this.wrm + 1]);
        this.mrb.qvt();
        this.mrb.xfl(this.wgv, this.idb)
    };
    this.pqs = function() {
        return (this.zle)
    };
    this.tyn = function() {
        this.fbg = true;
        this.kdj.bfs(false);
        this.mrb.stop();
        this.mrb.pwz();
        this.kdj.zgu.nwi("win", "#vjt");
        this.znh();
        for (var b = 0; b < this.mie.length; b++) {
            for (var a = 0; a < this.mie[b].length; a++) {
                if (this.mie[b][a] == this.sii) {
                    this.idb[b][a] = this.mie[b][a];
                    break
                }
            }
        }
        if (this.vjf === true && this.ruu() === true) {
            this.hly.jib("freespinstart", this.eef(), 200)
        }
        if (!this.tad) {
            this.hly.jsl("symb" + this.sii);
            this.hly.dvl("symb" + this.sii)
        }
        this.sfv([this.wrm + 1]);
        this.mrb.qvt();
        this.mrb.uyq(this.sii, this.idb)
    };
    this.gla = function() {
        this.vpn();
        if (!this.tad) {
            setTimeout(this.uqi, 500)
        }
    };
    this.qnd = function() {
        if (!this.vjf) {
            this.lvb()
        } else {
            this.bey()
        }
        if (this.tad) {
            this.tlw(this.win);
            if (this.vjf && this.ykq > 0) {
                setTimeout(this.uqi, 500)
            } else {
                if (!this.vjf) {
                    setTimeout(this.mge, 500)
                }
            }
        }
    };
    this.lcf = function(m) {
        var f = 0,
            g = 0;
        this.dml = true;
        this.axq = 0;
        this.nut = 0;
        this.aui = m[0];
        if (this.vjf) {
            if (this.aui == this.ojk) {
                return 0
            }
        } else {
            if (this.aui == this.ojk || this.aui == this.sii) {
                return 0
            }
        }
        if (this.aui == 0) {
            f = 1;
            for (var b = 1; b < 5; b++) {
                var l = m[b];
                if (l != this.aui) {
                    if (l != this.sii && l != this.ojk) {
                        this.aui = l
                    }
                    break
                } else {
                    f++
                }
            }
        }
        if (this.vjf && (this.aui == this.sii || this.aui == this.zkx)) {
            g++;
            for (var b = 1; b < 5; b++) {
                var l = m[b];
                if (l != this.zkx && l != this.sii && l != this.ojk) {
                    this.aui = l;
                    break
                } else {
                    if (l == this.ojk) {
                        break
                    } else {
                        g++
                    }
                }
            }
            if (this.aui == this.sii || this.aui == this.zkx) {
                if ((this.aui == 0 && f == 5)) {
                    this.dml = false
                } else {
                    this.aui = 1
                }
                return g
            }
        }
        for (var b = 0; b < 5; b++) {
            var l = m[b];
            if (this.vjf) {
                if ((this.aui == l || l == this.zkx || l == this.sii) && l != this.ojk) {
                    this.axq += 1
                } else {
                    break
                }
            } else {
                if (this.aui == l || (l == this.zkx && l != this.sii && l != this.ojk)) {
                    this.axq += 1
                } else {
                    break
                }
            }
        }
        if (f > 1 || g > 1) {
            var d = this.gpx[this.aui][this.axq - 1];
            var e = 0;
            var c = 0;
            if (f > 1) {
                e = this.gpx[0][f - 1]
            }
            if (g > 1) {
                c = this.gpx[1][g - 1]
            }
            if (e >= d && e >= c) {
                this.axq = f;
                this.aui = 0;
                this.dml = false
            } else {
                if (c >= d) {
                    this.axq = g;
                    this.aui = 1
                }
            }
        }
        var a = this.gpx[this.aui][this.axq - 1];
        if (a > 0) {
            return this.axq
        }
        return 0
    };
    this.pkr = function(b) {
        for (var a = this.nut; a < this.nut + this.axq; a++) {
            if (this.dml && b[a] == this.zkx) {
                this.idb[a][this.ilo[this.ans[this.dds]][a] - 1] = this.prt
            } else {
                if (b[a] == this.sii) {
                    this.idb[a][this.ilo[this.ans[this.dds]][a] - 1] = this.uip
                } else {
                    this.idb[a][this.ilo[this.ans[this.dds]][a] - 1] = b[a]
                }
            }
        }
    };
    this.rnx = function(a) {
        if ((((this.dml && a == this.prt) && this.prt >= 0) || (a == this.zkx && this.zkx >= 0)) || (a == this.uip && this.vjf)) {
            return true
        }
        return false
    };
    this.vqg = function(e, d) {
        var b = true;
        for (var c = 0, a = this.gpx[this.ojk].length; c < a && b; c++) {
            if (e == this.gpx[this.ojk][c]) {
                b = false
            }
        }
        return (e > d[0][1] || b)
    };
    this.tkg = function() {
        if (this.bvn) {
            this.hme.vez = this.hly.uvl("stop1");
            this.zyj.txk().length = 0;
            this.hwg.txk().length = 0;
            this.hme.txk().length = 0
        } else {
            var a = 0;
            if (this.vjf) {
                if (this.jpp(this.r1, (this.qqs) ? this.oaw[0] - 1 : this.lio[0] - 1)) {
                    this.zyj.vez = this.hly.uvl("bonusstop1");
                    this.zyj.nbb([this.sii]);
                    a++
                }
                if (this.jpp(this.r3, (this.qqs) ? this.oaw[2] - 1 : this.lio[2] - 1)) {
                    if (a == 1) {
                        this.hwg.vez = this.hly.uvl("bonusstop2");
                        this.hwg.nbb([this.sii])
                    }
                    a++
                }
                if (this.jpp(this.r5, (this.qqs) ? this.oaw[4] - 1 : this.lio[4] - 1)) {
                    if (a == 2) {
                        this.hme.vez = this.hly.uvl("bonusstop3");
                        this.hme.nbb([this.sii])
                    }
                    a++
                }
            } else {
                if (this.jpp(this.r1, this.lio[0] - 1)) {
                    this.zyj.vez = this.hly.uvl("bonusstop1");
                    this.zyj.nbb([this.sii]);
                    a++
                }
                if (this.jpp(this.r3, this.lio[2] - 1)) {
                    if (a == 1) {
                        this.hwg.vez = this.hly.uvl("bonusstop2");
                        this.hwg.nbb([this.sii])
                    }
                    a++
                }
                if (this.jpp(this.r5, this.lio[4] - 1)) {
                    if (a == 2) {
                        this.hme.vez = this.hly.uvl("bonusstop3");
                        this.hme.nbb([this.sii])
                    }
                    a++
                }
            }
        }
    };
    this.jpp = function(d, c) {
        var a = (c < 0) ? d.length - 1 : c;
        for (var b = 0; b < this.fcp; b++) {
            if (d[a] == 8) {
                return true
            }
            a++;
            a = (a >= d.length) ? 0 : a
        }
        return false
    };
    this.shu = function(a) {
        this.jpr = a;
        if (a == tbl.bnl.lpq) {
            return new uep()
        } else {
            if (a == tbl.bnl.lyw) {
                return new whs()
            } else {
                if (a == tbl.bnl.mjj) {
                    return new mfp()
                } else {
                    if (a == tbl.bnl.kak) {
                        return new ddi()
                    } else {
                        if (a == tbl.bnl.xxd) {
                            return new whq()
                        } else {
                            if (a == tbl.bnl.lcm) {
                                return new yji()
                            } else {
                                if (a == tbl.bnl.qlv) {
                                    return new mtn()
                                } else {
                                    if (a == tbl.bnl.chg) {
                                        return new fvx()
                                    } else {
                                        if (a == tbl.bnl.tqx) {
                                            return new rka()
                                        } else {
                                            if (a == tbl.bnl.fae) {
                                                return new gkr()
                                            } else {
                                                if (a == tbl.bnl.tqe) {
                                                    return new gyi()
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return null
    };
    this.btg = function() {
        this.style = new zkk()
    };
    this.gfy = function(a) {
        if (a == tbl.language.EN || a == tbl.language.US) {
            return new aax()
        } else {
            if (a == tbl.language.ES || a == tbl.language.CO || a == tbl.language.MX || a == tbl.language.CL || a == tbl.language.VE) {
                return new hsn()
            } else {
                if (a == tbl.language.DE || a == tbl.language.AT) {
                    return new vgh()
                } else {
                    if (a == tbl.language.PT || a == tbl.language.BR) {
                        return new aqh()
                    } else {
                        if (a == tbl.language.RU) {
                            return new coh()
                        } else {
                            if (a == tbl.language.EE) {
                                return new llc()
                            } else {
                                if (a == tbl.language.TR) {
                                    return new yov()
                                } else {
                                    if (a == tbl.language.CZ) {
                                        return new bda()
                                    } else {
                                        if (a == tbl.language.GR) {
                                            return new bfj()
                                        } else {
                                            if (a == tbl.language.BG) {
                                                return new eqw()
                                            } else {
                                                if (a == tbl.language.GE) {
                                                    return new vuk()
                                                } else {
                                                    if (a == tbl.language.HU) {
                                                        return new ihb()
                                                    } else {
                                                        if (a == tbl.language.RO) {
                                                            return new aak()
                                                        } else {
                                                            if (a == tbl.language.FR) {
                                                                return new xbd()
                                                            } else {
                                                                if (a == tbl.language.HR) {
                                                                    return new nmd()
                                                                } else {
                                                                    if (a == tbl.language.IT) {
                                                                        return new phs()
                                                                    } else {
                                                                        if (a == tbl.language.SE) {
                                                                            return new kby()
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return null
    }
}
rpm.prototype = new zvg;

function pex() {
    tbl.wos = -1;
    tbl.zbv = new rpm();
    tbl.zbv.brv({
        bnl: tbl.xyy.value14
    });
    window.focus()
}

function hln() {
    if (tbl.zbv != null) {
        if (tbl.wos >= 0) {
            clearTimeout(tbl.wos)
        }
        tbl.wos = setTimeout(tbl.zbv.ysn, 200)
    }
}

function sbj() {
    if (tbl.zbv != null) {
        if (tbl.wos >= 0) {
            clearTimeout(tbl.wos)
        }
        tbl.wos = setTimeout(tbl.zbv.ahn, 200)
    }
}
if (tbl.vpf.jap()) {
    window.onorientationchange = sbj;
    window.onresize = sbj
} else {
    window.onresize = hln
}
if (tbl.xyy.value9) {
    window.onload = pex
} else {
    pex()
};
